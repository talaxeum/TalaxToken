{
	"id": "47b6c9fe00906b09258fe575b5135c0b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\nerror Voting___votingStatus();\r\n\r\ncontract Stakable {\r\n    using SafeMath for uint256;\r\n    /**\r\n     * @notice Constructor since this contract is not ment to be used without inheritance\r\n     * push once to stakeholders for it to work proplerly\r\n     */\r\n\r\n    struct Voter {\r\n        bool votingRight;\r\n        mapping(uint256 => bool) voted;\r\n    }\r\n\r\n    uint256 public stakingPenaltyRate;\r\n    uint256 public airdropRate;\r\n    uint256 public airdropSince;\r\n\r\n    bool internal _votingStatus;\r\n    uint256 internal _votingId;\r\n    uint256 public totalVoters;\r\n    mapping(address => Voter) public voters;\r\n    mapping(uint256 => uint256) public votedUsers;\r\n\r\n    address _owner;\r\n\r\n    constructor() {\r\n        //Staking penalty and Airdrop in 0.1 times percentage\r\n        stakingPenaltyRate = 15;\r\n        airdropRate = 80;\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    /* ------------------------------------------ Modifier ------------------------------------------ */\r\n    function isTalax() internal view {\r\n        require(msg.sender == _owner, \"Not authorized\");\r\n    }\r\n\r\n    modifier onlyTalax() {\r\n        isTalax();\r\n        _;\r\n    }\r\n\r\n    function _checkUserStake(uint256 amount) internal pure {\r\n        require(amount > 0, \"No Stake Found\");\r\n    }\r\n\r\n    function _checkVotingStatus() internal view {\r\n        require(_votingStatus, \"Voting is not available\");\r\n    }\r\n\r\n    modifier votingStatusTrue() {\r\n        _checkVotingStatus();\r\n        _;\r\n    }\r\n\r\n    /* ---------------------------------------------- - --------------------------------------------- */\r\n\r\n    function changeTalaxAddress(address talax) external onlyTalax {\r\n        _owner = talax;\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @noticef\r\n     * A stake struct is used to represent the way we store stakes,\r\n     * A Stake will contain the users address, the amount staked and a timestamp,\r\n     * Since which is when the stake was made\r\n     */\r\n    struct Stake {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 since;\r\n        // This claimable field is new and used to tell how big of a reward is currently available\r\n        uint256 claimable;\r\n        uint256 claimable_airdrop;\r\n        uint256 rewardAPY;\r\n        uint256 releaseTime;\r\n    }\r\n    /**\r\n     * @notice Stakeholder is a staker that has active stakes\r\n     */\r\n    struct Stakeholder {\r\n        Stake stake;\r\n        address user;\r\n        uint256 latestClaimDrop;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\r\n     */\r\n    struct StakingSummary {\r\n        uint256 total_amount;\r\n        uint256 penalty;\r\n        Stake stake;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\r\n     */\r\n    mapping(address => Stakeholder) internal stakeholders;\r\n\r\n    /**\r\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\r\n     */\r\n    event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 timestamp,\r\n        uint256 releaseTime\r\n    );\r\n\r\n    event PenaltyChanged(uint256 amount);\r\n    event AirdropChanged(uint256 amount);\r\n\r\n    function getVoters(address user) external view returns (bool, bool) {\r\n        return (voters[user].votingRight, voters[user].voted[_votingId]);\r\n    }\r\n\r\n    function startAirdropSince() external onlyTalax {\r\n        airdropSince = block.timestamp;\r\n    }\r\n\r\n    function _calculateWeek(uint256 input) internal view returns (uint256) {\r\n        return (block.timestamp - input).div(7 days);\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\r\n     * StakeID\r\n     */\r\n    function stake(\r\n        address user,\r\n        uint256 amount,\r\n        uint256 stakePeriod,\r\n        uint256 rewardRate\r\n    ) external onlyTalax {\r\n        // Simple check so that user does not stake 0\r\n        require(amount > 0, \"Cannot stake nothing\");\r\n        require(stakeholders[user].stake.amount == 0, \"User is a staker\");\r\n\r\n        totalVoters += 1;\r\n        voters[user].votingRight = true;\r\n\r\n        // block.timestamp = timestamp of the current block in seconds since the epoch\r\n        uint256 timestamp = block.timestamp;\r\n\r\n        // Use the index to push a new Stake\r\n        // push a newly created Stake with the current block timestamp.\r\n        stakeholders[user].stake = Stake(\r\n            user,\r\n            amount,\r\n            timestamp,\r\n            0,\r\n            0,\r\n            rewardRate,\r\n            (stakePeriod + timestamp)\r\n        );\r\n        // Emit an event that the stake has occured\r\n        emit Staked(user, amount, timestamp, (stakePeriod + timestamp));\r\n    }\r\n\r\n    function changePenaltyFee(uint256 amount) external onlyTalax {\r\n        require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\");\r\n        stakingPenaltyRate = amount;\r\n        emit PenaltyChanged(amount);\r\n    }\r\n\r\n    function changeAirdropPercentage(uint256 amount) external onlyTalax {\r\n        require(amount <= 200, \"Airdrop Percentage cannot exceed 20 percent.\");\r\n        airdropRate = amount;\r\n        emit AirdropChanged(amount);\r\n    }\r\n\r\n    function _calculateStakingDuration(uint256 since)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(since > 0, \"Error timestamp 0\");\r\n\r\n        // times by 1e24 so theres no missing value\r\n        return\r\n            SafeMath.div(\r\n                (block.timestamp - since) * 1e24,\r\n                365 days,\r\n                \"Error cannot divide timestamp\"\r\n            );\r\n    }\r\n\r\n    function _calculateStakeReward(Stake memory user_stake)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (user_stake.amount == 0) {\r\n            return 0;\r\n        }\r\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\r\n        return\r\n            (user_stake.amount *\r\n                user_stake.rewardAPY *\r\n                _calculateStakingDuration(user_stake.since)) / 1e26;\r\n    }\r\n\r\n    function _calculatePenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        return (\r\n            SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000),\r\n            SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000)\r\n        );\r\n    }\r\n\r\n    function _calculateStakingWithPenalty(uint256 amount, uint256 reward)\r\n        internal\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        if (amount == 0) {\r\n            return (0, 0);\r\n        }\r\n\r\n        (uint256 amount_penalty, uint256 reward_penalty) = _calculatePenalty(\r\n            amount,\r\n            reward\r\n        );\r\n        return (\r\n            SafeMath.sub(amount, amount_penalty),\r\n            SafeMath.sub(reward, reward_penalty)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\r\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\r\n     * Will return the amount to MINT onto the acount\r\n     * Will also _calculateStakeReward and reset timer\r\n     */\r\n    function withdrawStake(address user)\r\n        external\r\n        onlyTalax\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        Stake memory user_stake = stakeholders[user].stake;\r\n\r\n        uint256 reward = _calculateStakeReward(user_stake);\r\n\r\n        delete stakeholders[user];\r\n\r\n        if (user_stake.releaseTime > block.timestamp) {\r\n            totalVoters -= 1;\r\n            delete voters[user].voted[_votingId];\r\n            return _calculateStakingWithPenalty(user_stake.amount, reward);\r\n        }\r\n\r\n        totalVoters -= 1;\r\n        delete voters[user].voted[_votingId];\r\n        return (user_stake.amount, reward);\r\n    }\r\n\r\n    function hasStake() external view returns (StakingSummary memory) {\r\n        Stakeholder memory data = stakeholders[msg.sender];\r\n        StakingSummary memory summary = StakingSummary(0, 0, data.stake);\r\n        _checkUserStake(summary.stake.amount);\r\n\r\n        uint256 availableReward = _calculateStakeReward(summary.stake);\r\n        uint256 penalty;\r\n\r\n        if (summary.stake.releaseTime > block.timestamp) {\r\n            (\r\n                uint256 amount_penalty,\r\n                uint256 reward_penalty\r\n            ) = _calculatePenalty(summary.stake.amount, availableReward);\r\n            penalty = amount_penalty + reward_penalty;\r\n        }\r\n\r\n        if (_calculateWeek(data.latestClaimDrop) > 0) {\r\n            uint256 airdrop = _calculateAirdrop(summary.stake.amount);\r\n            summary.stake.claimable_airdrop = airdrop;\r\n        } else {\r\n            summary.stake.claimable_airdrop = 0;\r\n        }\r\n\r\n        summary.stake.claimable = availableReward;\r\n        summary.penalty = penalty;\r\n        summary.total_amount = summary.stake.amount;\r\n\r\n        return summary;\r\n    }\r\n\r\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\r\n    function _calculateAirdrop(uint256 stakeAmount)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\r\n    }\r\n\r\n    function claimAirdrop(address user)\r\n        external\r\n        view\r\n        onlyTalax\r\n        returns (uint256)\r\n    {\r\n        Stakeholder memory stakeholder = stakeholders[user];\r\n\r\n        _checkUserStake(stakeholder.stake.amount);\r\n\r\n        require(\r\n            _calculateWeek(stakeholder.latestClaimDrop) > 0,\r\n            \"Claimable once a week\"\r\n        );\r\n\r\n        stakeholder.stake.claimable_airdrop = 0;\r\n        stakeholder.latestClaimDrop = block.timestamp;\r\n\r\n        return _calculateAirdrop(stakeholder.stake.amount);\r\n    }\r\n\r\n    function airdropWeek() public view returns (uint256) {\r\n        if (airdropSince != 0) {\r\n            return (block.timestamp - airdropSince) / 7 days;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /* -------------------------------- Voting Functions for DAO Pool ------------------------------- */\r\n    function startVoting() external onlyTalax {\r\n        require(_votingStatus == false, \"Voting is already running\");\r\n        _votingStatus = true;\r\n        _votingId += 1;\r\n    }\r\n\r\n    function isVoter(address user) public view returns (bool) {\r\n        require(user != address(0), \"Invalid address\");\r\n\r\n        return voters[user].votingRight;\r\n    }\r\n\r\n    function vote() public votingStatusTrue {\r\n        require(voters[msg.sender].votingRight == true, \"You are not a voter\");\r\n        require(\r\n            voters[msg.sender].voted[_votingId] == false,\r\n            \"You have voted before\"\r\n        );\r\n\r\n        voters[msg.sender].voted[_votingId] = true;\r\n        votedUsers[_votingId] += 1;\r\n    }\r\n\r\n    function retractVote() public votingStatusTrue {\r\n        require(voters[msg.sender].votingRight == true, \"You are not a voter\");\r\n        require(\r\n            voters[msg.sender].voted[_votingId] == true,\r\n            \"You have not voted yet\"\r\n        );\r\n\r\n        voters[msg.sender].voted[_votingId] == false;\r\n        votedUsers[_votingId] -= 1;\r\n    }\r\n\r\n    function getVotingResult()\r\n        external\r\n        view\r\n        onlyTalax\r\n        votingStatusTrue\r\n        returns (bool)\r\n    {\r\n        require(totalVoters > 1, \"Not enough voters\");\r\n        uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10);\r\n\r\n        if (votedUsers[_votingId] > half_voters) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function stopVoting() external onlyTalax votingStatusTrue {\r\n        _votingStatus = false;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable_airdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "isVoter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retractVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdropSince",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":162:12192  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":819:995  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakable.sol\":928:930  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":907:925  stakingPenaltyRate */\n  0x00\n    /* \"contracts/Stakable.sol\":907:930  stakingPenaltyRate = 15 */\n  sstore\n    /* \"contracts/Stakable.sol\":955:957  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":941:952  airdropRate */\n  0x01\n    /* \"contracts/Stakable.sol\":941:957  airdropRate = 80 */\n  sstore\n    /* \"contracts/Stakable.sol\":968:974  _owner */\n  0x08\n    /* \"contracts/Stakable.sol\":968:987  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Stakable.sol\":977:987  msg.sender */\n  caller\n    /* \"contracts/Stakable.sol\":968:987  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Stakable.sol\":162:12192  contract Stakable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":162:12192  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc23a5cea\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd5dbdf1b\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd5dbdf1b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf93d4f8a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfab2f86b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0xc23a5cea\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcbb3e152\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0xa3ec138d\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa7771ee3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x893d20e8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8c63f97f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa143a5f2\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x5f5300ff\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x671d2b75\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x671d2b75\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x71e3db87\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8891cf0d\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x5f5300ff\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x65f8c6c5\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x1d77b00b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ec6b60a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2d15cc04\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x070c8b74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10486b6a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":11307:11663  function retractVote() public votingStatusTrue {... */\n    tag_3:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Stakable.sol\":8312:9408  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n        /* \"#utility.yul\":168:172   */\n      0x00\n        /* \"#utility.yul\":210:213   */\n      0x0120\n        /* \"#utility.yul\":199:208   */\n      dup3\n        /* \"#utility.yul\":195:214   */\n      add\n        /* \"#utility.yul\":187:214   */\n      swap1\n      pop\n        /* \"#utility.yul\":247:253   */\n      dup3\n        /* \"#utility.yul\":241:254   */\n      mload\n        /* \"#utility.yul\":230:239   */\n      dup3\n        /* \"#utility.yul\":223:255   */\n      mstore\n        /* \"#utility.yul\":311:315   */\n      0x20\n        /* \"#utility.yul\":303:309   */\n      dup4\n        /* \"#utility.yul\":299:316   */\n      add\n        /* \"#utility.yul\":293:317   */\n      mload\n        /* \"#utility.yul\":286:290   */\n      0x20\n        /* \"#utility.yul\":275:284   */\n      dup4\n        /* \"#utility.yul\":271:291   */\n      add\n        /* \"#utility.yul\":264:318   */\n      mstore\n        /* \"#utility.yul\":365:369   */\n      0x40\n        /* \"#utility.yul\":357:363   */\n      dup4\n        /* \"#utility.yul\":353:370   */\n      add\n        /* \"#utility.yul\":347:371   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":419:431   */\n      dup2\n        /* \"#utility.yul\":413:432   */\n      mload\n        /* \"#utility.yul\":409:477   */\n      and\n        /* \"#utility.yul\":402:406   */\n      0x40\n        /* \"#utility.yul\":391:400   */\n      dup5\n        /* \"#utility.yul\":387:407   */\n      add\n        /* \"#utility.yul\":380:478   */\n      mstore\n        /* \"#utility.yul\":538:542   */\n      0x20\n        /* \"#utility.yul\":524:536   */\n      dup2\n        /* \"#utility.yul\":520:543   */\n      add\n        /* \"#utility.yul\":514:544   */\n      mload\n        /* \"#utility.yul\":509:511   */\n      0x60\n        /* \"#utility.yul\":498:507   */\n      dup5\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"#utility.yul\":487:545   */\n      mstore\n        /* \"#utility.yul\":606:610   */\n      0x40\n        /* \"#utility.yul\":592:604   */\n      dup2\n        /* \"#utility.yul\":588:611   */\n      add\n        /* \"#utility.yul\":582:612   */\n      mload\n        /* \"#utility.yul\":576:579   */\n      0x80\n        /* \"#utility.yul\":565:574   */\n      dup5\n        /* \"#utility.yul\":561:580   */\n      add\n        /* \"#utility.yul\":554:613   */\n      mstore\n        /* \"#utility.yul\":674:676   */\n      0x60\n        /* \"#utility.yul\":660:672   */\n      dup2\n        /* \"#utility.yul\":656:677   */\n      add\n        /* \"#utility.yul\":650:678   */\n      mload\n        /* \"#utility.yul\":644:647   */\n      0xa0\n        /* \"#utility.yul\":633:642   */\n      dup5\n        /* \"#utility.yul\":629:648   */\n      add\n        /* \"#utility.yul\":622:679   */\n      mstore\n        /* \"#utility.yul\":740:743   */\n      0x80\n        /* \"#utility.yul\":726:738   */\n      dup2\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":716:745   */\n      mload\n        /* \"#utility.yul\":710:713   */\n      0xc0\n        /* \"#utility.yul\":699:708   */\n      dup5\n        /* \"#utility.yul\":695:714   */\n      add\n        /* \"#utility.yul\":688:746   */\n      mstore\n        /* \"#utility.yul\":807:810   */\n      0xa0\n        /* \"#utility.yul\":793:805   */\n      dup2\n        /* \"#utility.yul\":789:811   */\n      add\n        /* \"#utility.yul\":783:812   */\n      mload\n        /* \"#utility.yul\":777:780   */\n      0xe0\n        /* \"#utility.yul\":766:775   */\n      dup5\n        /* \"#utility.yul\":762:781   */\n      add\n        /* \"#utility.yul\":755:813   */\n      mstore\n        /* \"#utility.yul\":874:877   */\n      0xc0\n        /* \"#utility.yul\":860:872   */\n      dup2\n        /* \"#utility.yul\":856:878   */\n      add\n        /* \"#utility.yul\":850:879   */\n      mload\n        /* \"#utility.yul\":844:847   */\n      0x0100\n        /* \"#utility.yul\":833:842   */\n      dup5\n        /* \"#utility.yul\":829:848   */\n      add\n        /* \"#utility.yul\":822:880   */\n      mstore\n      pop\n        /* \"#utility.yul\":14:886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/Stakable.sol\":8312:9408  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":1719:1814  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_5:\n      tag_33\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"contracts/Stakable.sol\":10592:10769  function startVoting() external onlyTalax {... */\n    tag_6:\n      tag_33\n      tag_44\n      jump\t// in\n        /* \"contracts/Stakable.sol\":3458:3609  function getVoters(address user) external view returns (bool, bool) {... */\n    tag_7:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":3545:3557  voters[user] */\n      and\n        /* \"contracts/Stakable.sol\":3514:3518  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":3545:3557  voters[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":3545:3551  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":3545:3557  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":3545:3569  voters[user].votingRight */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":3590:3599  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":3571:3600  voters[user].voted[_votingId] */\n      dup6\n      mstore\n        /* \"contracts/Stakable.sol\":3545:3569  voters[user].votingRight */\n      0x01\n        /* \"contracts/Stakable.sol\":3571:3589  voters[user].voted */\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":3571:3600  voters[user].voted[_votingId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":3545:3569  voters[user].votingRight */\n      0xff\n      swap2\n      dup3\n      and\n      swap3\n        /* \"contracts/Stakable.sol\":3571:3600  voters[user].voted[_votingId] */\n      swap2\n      and\n      swap1\n        /* \"contracts/Stakable.sol\":3458:3609  function getVoters(address user) external view returns (bool, bool) {... */\n      jump\n    tag_45:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1470:1484   */\n      swap3\n      iszero\n        /* \"#utility.yul\":1463:1485   */\n      iszero\n        /* \"#utility.yul\":1445:1486   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1529:1543   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1522:1544   */\n      iszero\n        /* \"#utility.yul\":1517:1519   */\n      0x20\n        /* \"#utility.yul\":1502:1520   */\n      dup4\n      add\n        /* \"#utility.yul\":1495:1545   */\n      mstore\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"contracts/Stakable.sol\":3458:3609  function getVoters(address user) external view returns (bool, bool) {... */\n      tag_37\n        /* \"#utility.yul\":1283:1551   */\n      jump\n        /* \"contracts/Stakable.sol\":663:689  uint256 public totalVoters */\n    tag_8:\n      tag_50\n      sload(0x05)\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1702:1727   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1690:1692   */\n      0x20\n        /* \"#utility.yul\":1675:1693   */\n      add\n        /* \"contracts/Stakable.sol\":663:689  uint256 public totalVoters */\n      tag_37\n        /* \"#utility.yul\":1556:1733   */\n      jump\n        /* \"contracts/Stakable.sol\":10952:11299  function vote() public votingStatusTrue {... */\n    tag_9:\n      tag_33\n      tag_55\n      jump\t// in\n        /* \"contracts/Stakable.sol\":9715:10260  function claimAirdrop(address user)... */\n    tag_10:\n      tag_50\n      tag_57\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/Stakable.sol\":11671:12083  function getVotingResult()... */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n        /* \"#utility.yul\":1903:1917   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1896:1918   */\n      iszero\n        /* \"#utility.yul\":1878:1919   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"contracts/Stakable.sol\":11671:12083  function getVotingResult()... */\n      tag_37\n        /* \"#utility.yul\":1738:1925   */\n      jump\n        /* \"contracts/Stakable.sol\":3617:3714  function startAirdropSince() external onlyTalax {... */\n    tag_12:\n      tag_33\n      tag_65\n      jump\t// in\n        /* \"contracts/Stakable.sol\":527:553  uint256 public airdropRate */\n    tag_13:\n      tag_50\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":1822:1904  function getOwner() public view returns (address) {... */\n    tag_14:\n        /* \"contracts/Stakable.sol\":1890:1896  _owner */\n      sload(0x08)\n        /* \"contracts/Stakable.sol\":1822:1904  function getOwner() public view returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":1890:1896  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2076:2150   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2064:2066   */\n      0x20\n        /* \"#utility.yul\":2049:2067   */\n      add\n        /* \"contracts/Stakable.sol\":1822:1904  function getOwner() public view returns (address) {... */\n      tag_37\n        /* \"#utility.yul\":1930:2156   */\n      jump\n        /* \"contracts/Stakable.sol\":5093:5310  function changePenaltyFee(uint256 amount) external onlyTalax {... */\n    tag_15:\n      tag_33\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"contracts/Stakable.sol\":742:787  mapping(uint256 => uint256) public votedUsers */\n    tag_16:\n      tag_50\n      tag_78\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_78:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":696:735  mapping(address => Voter) public voters */\n    tag_17:\n      tag_60\n      tag_82\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_82:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":10777:10944  function isVoter(address user) public view returns (bool) {... */\n    tag_18:\n      tag_60\n      tag_86\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts/Stakable.sol\":560:587  uint256 public airdropSince */\n    tag_19:\n      tag_50\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":7595:8304  function withdrawStake(address user)... */\n    tag_20:\n      tag_92\n      tag_93\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2520:2545   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2576:2578   */\n      0x20\n        /* \"#utility.yul\":2561:2579   */\n      dup4\n      add\n        /* \"#utility.yul\":2554:2588   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2493:2511   */\n      add\n        /* \"contracts/Stakable.sol\":7595:8304  function withdrawStake(address user)... */\n      tag_37\n        /* \"#utility.yul\":2346:2594   */\n      jump\n        /* \"contracts/Stakable.sol\":487:520  uint256 public stakingPenaltyRate */\n    tag_21:\n      tag_50\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":10268:10478  function airdropWeek() public view returns (uint256) {... */\n    tag_22:\n      tag_50\n      tag_101\n      jump\t// in\n        /* \"contracts/Stakable.sol\":5318:5544  function changeAirdropPercentage(uint256 amount) external onlyTalax {... */\n    tag_23:\n      tag_33\n      tag_104\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"contracts/Stakable.sol\":4074:5085  function stake(... */\n    tag_24:\n      tag_33\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"contracts/Stakable.sol\":12091:12189  function stopVoting() external onlyTalax votingStatusTrue {... */\n    tag_25:\n      tag_33\n      tag_111\n      jump\t// in\n        /* \"contracts/Stakable.sol\":11307:11663  function retractVote() public votingStatusTrue {... */\n    tag_34:\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      tag_113\n        /* \"contracts/Stakable.sol\":1563:1581  _checkVotingStatus */\n      tag_114\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Stakable.sol\":11380:11390  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":11373:11391  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11373:11379  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":11373:11391  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":11373:11403  voters[msg.sender].votingRight */\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11373:11411  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":11373:11403  voters[msg.sender].votingRight */\n      0x01\n        /* \"contracts/Stakable.sol\":11373:11411  voters[msg.sender].votingRight == true */\n      eq\n        /* \"contracts/Stakable.sol\":11365:11435  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x20\n        /* \"contracts/Stakable.sol\":11365:11435  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3179:3200   */\n      mstore\n        /* \"#utility.yul\":3236:3238   */\n      0x13\n        /* \"#utility.yul\":3216:3234   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3209:3239   */\n      mstore\n        /* \"#utility.yul\":3275:3296   */\n      0x596f7520617265206e6f74206120766f74657200000000000000000000000000\n        /* \"#utility.yul\":3255:3273   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3248:3297   */\n      mstore\n        /* \"#utility.yul\":3314:3332   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":11365:11435  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/Stakable.sol\":11475:11485  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":11468:11486  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11468:11474  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":11468:11486  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":11493:11502  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":11468:11503  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":11468:11492  voters[msg.sender].voted */\n      0x01\n      swap1\n      dup2\n      add\n        /* \"contracts/Stakable.sol\":11468:11503  voters[msg.sender].voted[_votingId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11468:11511  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":11446:11561  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3545:3547   */\n      0x20\n        /* \"contracts/Stakable.sol\":11446:11561  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3527:3548   */\n      mstore\n        /* \"#utility.yul\":3584:3586   */\n      0x16\n        /* \"#utility.yul\":3564:3582   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3557:3587   */\n      mstore\n        /* \"#utility.yul\":3623:3647   */\n      0x596f752068617665206e6f7420766f7465642079657400000000000000000000\n        /* \"#utility.yul\":3603:3621   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3596:3648   */\n      mstore\n        /* \"#utility.yul\":3665:3683   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":11446:11561  require(... */\n      tag_117\n        /* \"#utility.yul\":3343:3689   */\n      jump\n        /* \"contracts/Stakable.sol\":11446:11561  require(... */\n    tag_119:\n        /* \"contracts/Stakable.sol\":11599:11608  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":11574:11592  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":11574:11609  voters[msg.sender].voted[_votingId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11629:11639  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":11574:11592  voters[msg.sender] */\n      0x20\n        /* \"contracts/Stakable.sol\":11629:11650  votedUsers[_votingId] */\n      mstore\n        /* \"contracts/Stakable.sol\":11574:11592  voters[msg.sender] */\n      0x40\n        /* \"contracts/Stakable.sol\":11629:11650  votedUsers[_votingId] */\n      dup2\n      keccak256\n        /* \"contracts/Stakable.sol\":11629:11655  votedUsers[_votingId] -= 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":11574:11598  voters[msg.sender].voted */\n      0x01\n      swap3\n        /* \"contracts/Stakable.sol\":11574:11592  voters[msg.sender] */\n      swap1\n        /* \"contracts/Stakable.sol\":11629:11655  votedUsers[_votingId] -= 1 */\n      tag_122\n      swap1\n        /* \"contracts/Stakable.sol\":11574:11598  voters[msg.sender].voted */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":11629:11655  votedUsers[_votingId] -= 1 */\n      tag_123\n      jump\t// in\n    tag_122:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11307:11663  function retractVote() public votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":8312:9408  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_36:\n        /* \"contracts/Stakable.sol\":8355:8376  StakingSummary memory */\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/Stakable.sol\":8428:8438  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":8389:8412  Stakeholder memory data */\n      0x00\n        /* \"contracts/Stakable.sol\":8415:8439  stakeholders[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8415:8427  stakeholders */\n      0x09\n        /* \"contracts/Stakable.sol\":8415:8439  stakeholders[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":8389:8439  Stakeholder memory data = stakeholders[msg.sender] */\n      dup2\n      mload\n      0x0140\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x60\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      0x01\n      dup6\n      add\n      sload\n      0x80\n      dup6\n      add\n      mstore\n      0x02\n      dup6\n      add\n      sload\n      0xa0\n      dup6\n      add\n      mstore\n      0x03\n      dup6\n      add\n      sload\n      0xc0\n      dup6\n      add\n      mstore\n      0x04\n      dup6\n      add\n      sload\n      0xe0\n      dup6\n      add\n      mstore\n      0x05\n      dup6\n      add\n      sload\n      0x0100\n      dup6\n      add\n      mstore\n      0x06\n      dup6\n      add\n      sload\n      0x0120\n      dup6\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      0x07\n      dup5\n      add\n      sload\n      swap1\n      swap2\n      and\n      dup3\n      dup7\n      add\n      mstore\n      0x08\n      swap1\n      swap3\n      add\n      sload\n      dup2\n      dup5\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":8482:8514  StakingSummary(0, 0, data.stake) */\n      dup3\n      mload\n      swap2\n      dup3\n      add\n      dup4\n      mstore\n      dup5\n      dup3\n      mstore\n      dup2\n      dup5\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"contracts/Stakable.sol\":8503:8513  data.stake */\n      dup4\n      mload\n        /* \"contracts/Stakable.sol\":8482:8514  StakingSummary(0, 0, data.stake) */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Stakable.sol\":8541:8561  summary.stake.amount */\n      swap2\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8525:8562  _checkUserStake(summary.stake.amount) */\n      tag_127\n      swap1\n        /* \"contracts/Stakable.sol\":8525:8540  _checkUserStake */\n      tag_128\n        /* \"contracts/Stakable.sol\":8525:8562  _checkUserStake(summary.stake.amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Stakable.sol\":8575:8598  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakable.sol\":8601:8637  _calculateStakeReward(summary.stake) */\n      tag_129\n        /* \"contracts/Stakable.sol\":8623:8630  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":8623:8636  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8601:8622  _calculateStakeReward */\n      tag_130\n        /* \"contracts/Stakable.sol\":8601:8637  _calculateStakeReward(summary.stake) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Stakable.sol\":8575:8637  uint256 availableReward = _calculateStakeReward(summary.stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8648:8663  uint256 penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":8708:8723  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":8680:8687  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":8680:8693  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8680:8705  summary.stake.releaseTime */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8680:8723  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":8676:8964  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/Stakable.sol\":8759:8781  uint256 amount_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":8800:8822  uint256 reward_penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":8840:8896  _calculatePenalty(summary.stake.amount, availableReward) */\n      tag_132\n        /* \"contracts/Stakable.sol\":8858:8865  summary */\n      dup6\n        /* \"contracts/Stakable.sol\":8858:8871  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8858:8878  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8880:8895  availableReward */\n      dup6\n        /* \"contracts/Stakable.sol\":8840:8857  _calculatePenalty */\n      tag_133\n        /* \"contracts/Stakable.sol\":8840:8896  _calculatePenalty(summary.stake.amount, availableReward) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Stakable.sol\":8740:8896  (... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8921:8952  amount_penalty + reward_penalty */\n      tag_134\n        /* \"contracts/Stakable.sol\":8740:8896  (... */\n      dup2\n      dup4\n        /* \"contracts/Stakable.sol\":8921:8952  amount_penalty + reward_penalty */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/Stakable.sol\":8911:8952  penalty = amount_penalty + reward_penalty */\n      swap3\n      pop\n        /* \"contracts/Stakable.sol\":8725:8964  {... */\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":8676:8964  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_131:\n        /* \"contracts/Stakable.sol\":9019:9020  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":8980:9016  _calculateWeek(data.latestClaimDrop) */\n      tag_136\n        /* \"contracts/Stakable.sol\":8995:8999  data */\n      dup6\n        /* \"contracts/Stakable.sol\":8995:9015  data.latestClaimDrop */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8980:8994  _calculateWeek */\n      tag_137\n        /* \"contracts/Stakable.sol\":8980:9016  _calculateWeek(data.latestClaimDrop) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Stakable.sol\":8980:9020  _calculateWeek(data.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":8976:9230  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/Stakable.sol\":9037:9052  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable.sol\":9055:9094  _calculateAirdrop(summary.stake.amount) */\n      tag_139\n        /* \"contracts/Stakable.sol\":9073:9080  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":9073:9086  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9073:9093  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9055:9072  _calculateAirdrop */\n      tag_140\n        /* \"contracts/Stakable.sol\":9055:9094  _calculateAirdrop(summary.stake.amount) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/Stakable.sol\":9109:9122  summary.stake */\n      0x40\n      dup6\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9109:9140  summary.stake.claimable_airdrop */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":9109:9150  summary.stake.claimable_airdrop = airdrop */\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":8976:9230  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n      jump(tag_141)\n    tag_138:\n        /* \"contracts/Stakable.sol\":9183:9196  summary.stake */\n      0x40\n      dup4\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9217:9218  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9183:9214  summary.stake.claimable_airdrop */\n      0x80\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":9183:9218  summary.stake.claimable_airdrop = 0 */\n      mstore\n        /* \"contracts/Stakable.sol\":8976:9230  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n    tag_141:\n        /* \"contracts/Stakable.sol\":9242:9255  summary.stake */\n      0x40\n      dup4\n      add\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":9242:9265  summary.stake.claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":9242:9283  summary.stake.claimable = availableReward */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Stakable.sol\":9294:9309  summary.penalty */\n      0x20\n      dup1\n      dup5\n      add\n        /* \"contracts/Stakable.sol\":9294:9319  summary.penalty = penalty */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Stakable.sol\":9353:9366  summary.stake */\n      swap1\n      mload\n        /* \"contracts/Stakable.sol\":9353:9373  summary.stake.amount */\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9330:9373  summary.total_amount = summary.stake.amount */\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9242:9249  summary */\n      swap3\n        /* \"contracts/Stakable.sol\":8312:9408  function hasStake() external view returns (StakingSummary memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1719:1814  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_42:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_143\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Stakable.sol\":1792:1798  _owner */\n      0x08\n        /* \"contracts/Stakable.sol\":1792:1806  _owner = talax */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":1719:1814  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10592:10769  function startVoting() external onlyTalax {... */\n    tag_44:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_147\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Stakable.sol\":10653:10666  _votingStatus */\n      and(0xff, sload(0x03))\n        /* \"contracts/Stakable.sol\":10653:10675  _votingStatus == false */\n      iszero\n        /* \"contracts/Stakable.sol\":10645:10705  require(_votingStatus == false, \"Voting is already running\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4348:4350   */\n      0x20\n        /* \"contracts/Stakable.sol\":10645:10705  require(_votingStatus == false, \"Voting is already running\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4330:4351   */\n      mstore\n        /* \"#utility.yul\":4387:4389   */\n      0x19\n        /* \"#utility.yul\":4367:4385   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4360:4390   */\n      mstore\n        /* \"#utility.yul\":4426:4453   */\n      0x566f74696e6720697320616c72656164792072756e6e696e6700000000000000\n        /* \"#utility.yul\":4406:4424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4399:4454   */\n      mstore\n        /* \"#utility.yul\":4471:4489   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":10645:10705  require(_votingStatus == false, \"Voting is already running\") */\n      tag_117\n        /* \"#utility.yul\":4146:4495   */\n      jump\n        /* \"contracts/Stakable.sol\":10645:10705  require(_votingStatus == false, \"Voting is already running\") */\n    tag_149:\n        /* \"contracts/Stakable.sol\":10716:10729  _votingStatus */\n      0x03\n        /* \"contracts/Stakable.sol\":10716:10736  _votingStatus = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Stakable.sol\":10732:10736  true */\n      0x01\n        /* \"contracts/Stakable.sol\":10716:10736  _votingStatus = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Stakable.sol\":10747:10756  _votingId */\n      0x04\n        /* \"contracts/Stakable.sol\":10747:10761  _votingId += 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":10716:10729  _votingStatus */\n      0x00\n      swap1\n        /* \"contracts/Stakable.sol\":10747:10761  _votingId += 1 */\n      tag_122\n      swap1\n        /* \"contracts/Stakable.sol\":10732:10736  true */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":10747:10761  _votingId += 1 */\n      tag_135\n      jump\t// in\n        /* \"contracts/Stakable.sol\":10952:11299  function vote() public votingStatusTrue {... */\n    tag_55:\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      tag_155\n        /* \"contracts/Stakable.sol\":1563:1581  _checkVotingStatus */\n      tag_114\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Stakable.sol\":11018:11028  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":11011:11029  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11011:11017  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":11011:11029  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":11011:11041  voters[msg.sender].votingRight */\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11011:11049  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":11011:11041  voters[msg.sender].votingRight */\n      0x01\n        /* \"contracts/Stakable.sol\":11011:11049  voters[msg.sender].votingRight == true */\n      eq\n        /* \"contracts/Stakable.sol\":11003:11073  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x20\n        /* \"contracts/Stakable.sol\":11003:11073  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3179:3200   */\n      mstore\n        /* \"#utility.yul\":3236:3238   */\n      0x13\n        /* \"#utility.yul\":3216:3234   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3209:3239   */\n      mstore\n        /* \"#utility.yul\":3275:3296   */\n      0x596f7520617265206e6f74206120766f74657200000000000000000000000000\n        /* \"#utility.yul\":3255:3273   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3248:3297   */\n      mstore\n        /* \"#utility.yul\":3314:3332   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":11003:11073  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_117\n        /* \"#utility.yul\":2995:3338   */\n      jump\n        /* \"contracts/Stakable.sol\":11003:11073  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n    tag_157:\n        /* \"contracts/Stakable.sol\":11113:11123  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":11106:11124  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11106:11112  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":11106:11124  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":11131:11140  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":11106:11141  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":11106:11130  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":11106:11141  voters[msg.sender].voted[_votingId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":11106:11150  voters[msg.sender].voted[_votingId] == false */\n      iszero\n        /* \"contracts/Stakable.sol\":11084:11199  require(... */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4702:4704   */\n      0x20\n        /* \"contracts/Stakable.sol\":11084:11199  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4684:4705   */\n      mstore\n        /* \"#utility.yul\":4741:4743   */\n      0x15\n        /* \"#utility.yul\":4721:4739   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4714:4744   */\n      mstore\n        /* \"#utility.yul\":4780:4803   */\n      0x596f75206861766520766f746564206265666f72650000000000000000000000\n        /* \"#utility.yul\":4760:4778   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4753:4804   */\n      mstore\n        /* \"#utility.yul\":4821:4839   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":11084:11199  require(... */\n      tag_117\n        /* \"#utility.yul\":4500:4845   */\n      jump\n        /* \"contracts/Stakable.sol\":11084:11199  require(... */\n    tag_159:\n        /* \"contracts/Stakable.sol\":11219:11229  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":11212:11230  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11212:11218  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":11212:11230  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":11237:11246  _votingId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":11212:11247  voters[msg.sender].voted[_votingId] */\n      dup6\n      mstore\n        /* \"contracts/Stakable.sol\":11250:11254  true */\n      0x01\n        /* \"contracts/Stakable.sol\":11212:11236  voters[msg.sender].voted */\n      swap2\n      dup3\n      add\n        /* \"contracts/Stakable.sol\":11212:11247  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Stakable.sol\":11212:11254  voters[msg.sender].voted[_votingId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":11276:11285  _votingId */\n      sload\n        /* \"contracts/Stakable.sol\":11265:11286  votedUsers[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":11265:11275  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":11265:11286  votedUsers[_votingId] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/Stakable.sol\":11265:11291  votedUsers[_votingId] += 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":11250:11254  true */\n      swap2\n      swap3\n        /* \"contracts/Stakable.sol\":11265:11286  votedUsers[_votingId] */\n      swap1\n      swap2\n        /* \"contracts/Stakable.sol\":11265:11291  votedUsers[_votingId] += 1 */\n      tag_122\n      swap1\n        /* \"contracts/Stakable.sol\":11250:11254  true */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":11265:11291  votedUsers[_votingId] += 1 */\n      tag_135\n      jump\t// in\n        /* \"contracts/Stakable.sol\":9715:10260  function claimAirdrop(address user)... */\n    tag_58:\n        /* \"contracts/Stakable.sol\":9820:9827  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_164\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":9878:9896  stakeholders[user] */\n      dup1\n      dup4\n      and\n        /* \"contracts/Stakable.sol\":9845:9875  Stakeholder memory stakeholder */\n      0x00\n        /* \"contracts/Stakable.sol\":9878:9896  stakeholders[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9878:9890  stakeholders */\n      0x09\n        /* \"contracts/Stakable.sol\":9878:9896  stakeholders[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":9845:9896  Stakeholder memory stakeholder = stakeholders[user] */\n      dup3\n      mload\n      0x0140\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup6\n      and\n      0x60\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      0x80\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x02\n      dup5\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x03\n      dup5\n      add\n      sload\n      0xc0\n      dup5\n      add\n      mstore\n      0x04\n      dup5\n      add\n      sload\n      0xe0\n      dup5\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n      0x0100\n      dup5\n      add\n      mstore\n      0x06\n      dup5\n      add\n      sload\n      0x0120\n      dup5\n      add\n      mstore\n      swap1\n      dup3\n      mstore\n      0x07\n      dup4\n      add\n      sload\n      swap1\n      swap6\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x08\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/Stakable.sol\":9909:9950  _checkUserStake(stakeholder.stake.amount) */\n      tag_166\n      swap1\n        /* \"contracts/Stakable.sol\":9909:9924  _checkUserStake */\n      tag_128\n        /* \"contracts/Stakable.sol\":9909:9950  _checkUserStake(stakeholder.stake.amount) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Stakable.sol\":10031:10032  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9985:10028  _calculateWeek(stakeholder.latestClaimDrop) */\n      tag_167\n        /* \"contracts/Stakable.sol\":10000:10011  stakeholder */\n      dup3\n        /* \"contracts/Stakable.sol\":10000:10027  stakeholder.latestClaimDrop */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9985:9999  _calculateWeek */\n      tag_137\n        /* \"contracts/Stakable.sol\":9985:10028  _calculateWeek(stakeholder.latestClaimDrop) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Stakable.sol\":9985:10032  _calculateWeek(stakeholder.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":9963:10081  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5052:5054   */\n      0x20\n        /* \"contracts/Stakable.sol\":9963:10081  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5034:5055   */\n      mstore\n        /* \"#utility.yul\":5091:5093   */\n      0x15\n        /* \"#utility.yul\":5071:5089   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5064:5094   */\n      mstore\n        /* \"#utility.yul\":5130:5153   */\n      0x436c61696d61626c65206f6e63652061207765656b0000000000000000000000\n        /* \"#utility.yul\":5110:5128   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5103:5154   */\n      mstore\n        /* \"#utility.yul\":5171:5189   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":9963:10081  require(... */\n      tag_117\n        /* \"#utility.yul\":4850:5195   */\n      jump\n        /* \"contracts/Stakable.sol\":9963:10081  require(... */\n    tag_168:\n        /* \"contracts/Stakable.sol\":10094:10111  stakeholder.stake */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":10132:10133  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10094:10129  stakeholder.stake.claimable_airdrop */\n      0x80\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":10094:10133  stakeholder.stake.claimable_airdrop = 0 */\n      mstore\n        /* \"contracts/Stakable.sol\":10174:10189  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":10144:10171  stakeholder.latestClaimDrop */\n      0x40\n      dup3\n      add\n        /* \"contracts/Stakable.sol\":10144:10189  stakeholder.latestClaimDrop = block.timestamp */\n      mstore\n        /* \"contracts/Stakable.sol\":10227:10244  stakeholder.stake */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":10227:10251  stakeholder.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":10209:10252  _calculateAirdrop(stakeholder.stake.amount) */\n      tag_171\n      swap1\n        /* \"contracts/Stakable.sol\":10209:10226  _calculateAirdrop */\n      tag_140\n        /* \"contracts/Stakable.sol\":10209:10252  _calculateAirdrop(stakeholder.stake.amount) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Stakable.sol\":10202:10252  return _calculateAirdrop(stakeholder.stake.amount) */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":1268:1269  _ */\n    tag_165:\n        /* \"contracts/Stakable.sol\":9715:10260  function claimAirdrop(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11671:12083  function getVotingResult()... */\n    tag_61:\n        /* \"contracts/Stakable.sol\":11793:11797  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_173\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      tag_175\n        /* \"contracts/Stakable.sol\":1563:1581  _checkVotingStatus */\n      tag_114\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Stakable.sol\":11837:11838  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":11823:11834  totalVoters */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":11823:11838  totalVoters > 1 */\n      gt\n        /* \"contracts/Stakable.sol\":11815:11860  require(totalVoters > 1, \"Not enough voters\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x20\n        /* \"contracts/Stakable.sol\":11815:11860  require(totalVoters > 1, \"Not enough voters\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5384:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5443   */\n      0x11\n        /* \"#utility.yul\":5421:5439   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5414:5444   */\n      mstore\n        /* \"#utility.yul\":5480:5499   */\n      0x4e6f7420656e6f75676820766f74657273000000000000000000000000000000\n        /* \"#utility.yul\":5460:5478   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5453:5500   */\n      mstore\n        /* \"#utility.yul\":5517:5535   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":11815:11860  require(totalVoters > 1, \"Not enough voters\") */\n      tag_117\n        /* \"#utility.yul\":5200:5541   */\n      jump\n        /* \"contracts/Stakable.sol\":11815:11860  require(totalVoters > 1, \"Not enough voters\") */\n    tag_177:\n        /* \"contracts/Stakable.sol\":11871:11890  uint256 half_voters */\n      0x00\n        /* \"contracts/Stakable.sol\":11893:11939  SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      tag_180\n        /* \"contracts/Stakable.sol\":11906:11934  SafeMath.mul(totalVoters, 5) */\n      tag_181\n        /* \"contracts/Stakable.sol\":11919:11930  totalVoters */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":11932:11933  5 */\n      0x05\n        /* \"contracts/Stakable.sol\":11906:11918  SafeMath.mul */\n      tag_182\n        /* \"contracts/Stakable.sol\":11906:11934  SafeMath.mul(totalVoters, 5) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/Stakable.sol\":11936:11938  10 */\n      0x0a\n        /* \"contracts/Stakable.sol\":11893:11905  SafeMath.div */\n      tag_183\n        /* \"contracts/Stakable.sol\":11893:11939  SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Stakable.sol\":11967:11976  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":11956:11977  votedUsers[_votingId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11956:11966  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":11956:11977  votedUsers[_votingId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":11871:11939  uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":11956:11991  votedUsers[_votingId] > half_voters */\n      dup2\n      lt\n        /* \"contracts/Stakable.sol\":11952:12076  if (votedUsers[_votingId] > half_voters) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/Stakable.sol\":12015:12019  true */\n      0x01\n        /* \"contracts/Stakable.sol\":12008:12019  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11671:12083  function getVotingResult()... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11952:12076  if (votedUsers[_votingId] > half_voters) {... */\n    tag_184:\n        /* \"contracts/Stakable.sol\":12059:12064  false */\n      0x00\n        /* \"contracts/Stakable.sol\":12052:12064  return false */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":11671:12083  function getVotingResult()... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3617:3714  function startAirdropSince() external onlyTalax {... */\n    tag_65:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_187\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/Stakable.sol\":3691:3706  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":3676:3688  airdropSince */\n      0x02\n        /* \"contracts/Stakable.sol\":3676:3706  airdropSince = block.timestamp */\n      sstore\n        /* \"contracts/Stakable.sol\":3617:3714  function startAirdropSince() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5093:5310  function changePenaltyFee(uint256 amount) external onlyTalax {... */\n    tag_76:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_191\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Stakable.sol\":5183:5185  30 */\n      0x1e\n        /* \"contracts/Stakable.sol\":5173:5179  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":5173:5185  amount <= 30 */\n      gt\n      iszero\n        /* \"contracts/Stakable.sol\":5165:5226  require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5748:5750   */\n      0x20\n        /* \"contracts/Stakable.sol\":5165:5226  require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5730:5751   */\n      mstore\n        /* \"#utility.yul\":5787:5789   */\n      0x24\n        /* \"#utility.yul\":5767:5785   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5760:5790   */\n      mstore\n        /* \"#utility.yul\":5826:5860   */\n      0x50656e616c7479206665652063616e6e6f742065786365656420332070657263\n        /* \"#utility.yul\":5806:5824   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5799:5861   */\n      mstore\n        /* \"#utility.yul\":5897:5903   */\n      0x656e742e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5877:5895   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5870:5904   */\n      mstore\n        /* \"#utility.yul\":5921:5940   */\n      0x84\n      add\n        /* \"contracts/Stakable.sol\":5165:5226  require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\") */\n      tag_117\n        /* \"#utility.yul\":5546:5946   */\n      jump\n        /* \"contracts/Stakable.sol\":5165:5226  require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\") */\n    tag_193:\n        /* \"contracts/Stakable.sol\":5237:5255  stakingPenaltyRate */\n      0x00\n        /* \"contracts/Stakable.sol\":5237:5264  stakingPenaltyRate = amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":5280:5302  PenaltyChanged(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1702:1727   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":5280:5302  PenaltyChanged(amount) */\n      0xcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9\n      swap1\n        /* \"#utility.yul\":1690:1692   */\n      0x20\n        /* \"#utility.yul\":1675:1693   */\n      add\n        /* \"contracts/Stakable.sol\":5280:5302  PenaltyChanged(amount) */\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stakable.sol\":5093:5310  function changePenaltyFee(uint256 amount) external onlyTalax {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10777:10944  function isVoter(address user) public view returns (bool) {... */\n    tag_87:\n        /* \"contracts/Stakable.sol\":10829:10833  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":10854:10872  user != address(0) */\n      dup3\n      and\n        /* \"contracts/Stakable.sol\":10846:10892  require(user != address(0), \"Invalid address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6153:6155   */\n      0x20\n        /* \"contracts/Stakable.sol\":10846:10892  require(user != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6135:6156   */\n      mstore\n        /* \"#utility.yul\":6192:6194   */\n      0x0f\n        /* \"#utility.yul\":6172:6190   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6165:6195   */\n      mstore\n        /* \"#utility.yul\":6231:6248   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":6211:6229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6204:6249   */\n      mstore\n        /* \"#utility.yul\":6266:6284   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":10846:10892  require(user != address(0), \"Invalid address\") */\n      tag_117\n        /* \"#utility.yul\":5951:6290   */\n      jump\n        /* \"contracts/Stakable.sol\":10846:10892  require(user != address(0), \"Invalid address\") */\n    tag_198:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":10912:10924  voters[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":10912:10918  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10912:10924  voters[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":10912:10936  voters[user].votingRight */\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Stakable.sol\":10777:10944  function isVoter(address user) public view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7595:8304  function withdrawStake(address user)... */\n    tag_94:\n        /* \"contracts/Stakable.sol\":7687:7694  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":7696:7703  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_202\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":7821:7839  stakeholders[user] */\n      dup1\n      dup5\n      and\n        /* \"contracts/Stakable.sol\":7795:7818  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable.sol\":7821:7839  stakeholders[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":7821:7833  stakeholders */\n      0x09\n        /* \"contracts/Stakable.sol\":7821:7839  stakeholders[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":7795:7845  Stake memory user_stake = stakeholders[user].stake */\n      dup2\n      mload\n      0xe0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      swap1\n      swap6\n      and\n      dup6\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap3\n      dup6\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap1\n      dup5\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":7875:7908  _calculateStakeReward(user_stake) */\n      tag_204\n        /* \"contracts/Stakable.sol\":7795:7845  Stake memory user_stake = stakeholders[user].stake */\n      dup3\n        /* \"contracts/Stakable.sol\":7875:7896  _calculateStakeReward */\n      tag_130\n        /* \"contracts/Stakable.sol\":7875:7908  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":7928:7946  stakeholders[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":7928:7940  stakeholders */\n      0x09\n        /* \"contracts/Stakable.sol\":7928:7946  stakeholders[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Stakable.sol\":7921:7946  delete stakeholders[user] */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x06\n      dup3\n      add\n      dup4\n      swap1\n      sstore\n      0x07\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x08\n      add\n      sstore\n        /* \"contracts/Stakable.sol\":7963:7985  user_stake.releaseTime */\n      0xc0\n      dup4\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7858:7908  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":7988:8003  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/Stakable.sol\":7959:8176  if (user_stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/Stakable.sol\":8035:8036  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":8020:8031  totalVoters */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":8020:8036  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_206:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":8058:8070  voters[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8058:8064  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":8058:8070  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":8077:8086  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":8058:8087  voters[user].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":8058:8076  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":8058:8087  voters[user].voted[_votingId] */\n      dup3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Stakable.sol\":8051:8087  delete voters[user].voted[_votingId] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":8138:8155  user_stake.amount */\n      dup3\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8109:8164  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      tag_207\n      swap1\n        /* \"contracts/Stakable.sol\":8157:8163  reward */\n      dup3\n        /* \"contracts/Stakable.sol\":8109:8137  _calculateStakingWithPenalty */\n      tag_208\n        /* \"contracts/Stakable.sol\":8109:8164  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/Stakable.sol\":8102:8164  return _calculateStakingWithPenalty(user_stake.amount, reward) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7595:8304  function withdrawStake(address user)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7959:8176  if (user_stake.releaseTime > block.timestamp) {... */\n    tag_205:\n        /* \"contracts/Stakable.sol\":8203:8204  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":8188:8199  totalVoters */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":8188:8204  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":8222:8234  voters[user] */\n      swap5\n      swap1\n      swap5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8222:8228  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":8222:8234  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":8241:8250  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":8222:8251  voters[user].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":8222:8240  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":8222:8251  voters[user].voted[_votingId] */\n      dup3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Stakable.sol\":8215:8251  delete voters[user].voted[_votingId] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":8270:8287  user_stake.amount */\n      add\n      mload\n      swap4\n        /* \"contracts/Stakable.sol\":7595:8304  function withdrawStake(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10268:10478  function airdropWeek() public view returns (uint256) {... */\n    tag_101:\n        /* \"contracts/Stakable.sol\":10312:10319  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":10336:10348  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":10352:10353  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10336:10353  airdropSince != 0 */\n      eq\n        /* \"contracts/Stakable.sol\":10332:10471  if (airdropSince != 0) {... */\n      tag_211\n      jumpi\n        /* \"contracts/Stakable.sol\":10412:10418  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":10396:10408  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":10378:10393  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":10378:10408  block.timestamp - airdropSince */\n      tag_212\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_212:\n        /* \"contracts/Stakable.sol\":10377:10418  (block.timestamp - airdropSince) / 7 days */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"contracts/Stakable.sol\":10370:10418  return (block.timestamp - airdropSince) / 7 days */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":10268:10478  function airdropWeek() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10332:10471  if (airdropSince != 0) {... */\n    tag_211:\n      pop\n        /* \"contracts/Stakable.sol\":10458:10459  0 */\n      0x00\n      swap1\n        /* \"contracts/Stakable.sol\":10268:10478  function airdropWeek() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5318:5544  function changeAirdropPercentage(uint256 amount) external onlyTalax {... */\n    tag_105:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_217\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/Stakable.sol\":5415:5418  200 */\n      0xc8\n        /* \"contracts/Stakable.sol\":5405:5411  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":5405:5418  amount <= 200 */\n      gt\n      iszero\n        /* \"contracts/Stakable.sol\":5397:5467  require(amount <= 200, \"Airdrop Percentage cannot exceed 20 percent.\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6965:6967   */\n      0x20\n        /* \"contracts/Stakable.sol\":5397:5467  require(amount <= 200, \"Airdrop Percentage cannot exceed 20 percent.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6947:6968   */\n      mstore\n        /* \"#utility.yul\":7004:7006   */\n      0x2c\n        /* \"#utility.yul\":6984:7002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6977:7007   */\n      mstore\n        /* \"#utility.yul\":7043:7077   */\n      0x41697264726f702050657263656e746167652063616e6e6f7420657863656564\n        /* \"#utility.yul\":7023:7041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7016:7078   */\n      mstore\n        /* \"#utility.yul\":7114:7128   */\n      0x2032302070657263656e742e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":7094:7112   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7087:7129   */\n      mstore\n        /* \"#utility.yul\":7146:7165   */\n      0x84\n      add\n        /* \"contracts/Stakable.sol\":5397:5467  require(amount <= 200, \"Airdrop Percentage cannot exceed 20 percent.\") */\n      tag_117\n        /* \"#utility.yul\":6763:7171   */\n      jump\n        /* \"contracts/Stakable.sol\":5397:5467  require(amount <= 200, \"Airdrop Percentage cannot exceed 20 percent.\") */\n    tag_219:\n        /* \"contracts/Stakable.sol\":5478:5489  airdropRate */\n      0x01\n        /* \"contracts/Stakable.sol\":5478:5498  airdropRate = amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":5514:5536  AirdropChanged(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1702:1727   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":5514:5536  AirdropChanged(amount) */\n      0xcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e\n      swap1\n        /* \"#utility.yul\":1690:1692   */\n      0x20\n        /* \"#utility.yul\":1675:1693   */\n      add\n        /* \"contracts/Stakable.sol\":5514:5536  AirdropChanged(amount) */\n      tag_196\n        /* \"#utility.yul\":1556:1733   */\n      jump\n        /* \"contracts/Stakable.sol\":4074:5085  function stake(... */\n    tag_109:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_224\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/Stakable.sol\":4305:4306  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4296:4302  amount */\n      dup4\n        /* \"contracts/Stakable.sol\":4296:4306  amount > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":4288:4331  require(amount > 0, \"Cannot stake nothing\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7378:7380   */\n      0x20\n        /* \"contracts/Stakable.sol\":4288:4331  require(amount > 0, \"Cannot stake nothing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7360:7381   */\n      mstore\n        /* \"#utility.yul\":7417:7419   */\n      0x14\n        /* \"#utility.yul\":7397:7415   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7390:7420   */\n      mstore\n        /* \"#utility.yul\":7456:7478   */\n      0x43616e6e6f74207374616b65206e6f7468696e67000000000000000000000000\n        /* \"#utility.yul\":7436:7454   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7429:7479   */\n      mstore\n        /* \"#utility.yul\":7496:7514   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":4288:4331  require(amount > 0, \"Cannot stake nothing\") */\n      tag_117\n        /* \"#utility.yul\":7176:7520   */\n      jump\n        /* \"contracts/Stakable.sol\":4288:4331  require(amount > 0, \"Cannot stake nothing\") */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":4350:4368  stakeholders[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":4350:4362  stakeholders */\n      0x09\n        /* \"contracts/Stakable.sol\":4350:4368  stakeholders[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":4350:4381  stakeholders[user].stake.amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Stakable.sol\":4350:4386  stakeholders[user].stake.amount == 0 */\n      iszero\n        /* \"contracts/Stakable.sol\":4342:4407  require(stakeholders[user].stake.amount == 0, \"User is a staker\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7727:7729   */\n      0x20\n        /* \"contracts/Stakable.sol\":4342:4407  require(stakeholders[user].stake.amount == 0, \"User is a staker\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7709:7730   */\n      mstore\n        /* \"#utility.yul\":7766:7768   */\n      0x10\n        /* \"#utility.yul\":7746:7764   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7739:7769   */\n      mstore\n        /* \"#utility.yul\":7805:7823   */\n      0x557365722069732061207374616b657200000000000000000000000000000000\n        /* \"#utility.yul\":7785:7803   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7778:7824   */\n      mstore\n        /* \"#utility.yul\":7841:7859   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":4342:4407  require(stakeholders[user].stake.amount == 0, \"User is a staker\") */\n      tag_117\n        /* \"#utility.yul\":7525:7865   */\n      jump\n        /* \"contracts/Stakable.sol\":4342:4407  require(stakeholders[user].stake.amount == 0, \"User is a staker\") */\n    tag_229:\n        /* \"contracts/Stakable.sol\":4435:4436  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":4420:4431  totalVoters */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":4420:4436  totalVoters += 1 */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_232:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":4447:4459  voters[user] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":4447:4453  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":4447:4459  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":4447:4478  voters[user].votingRight = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Stakable.sol\":4474:4478  true */\n      0x01\n        /* \"contracts/Stakable.sol\":4447:4478  voters[user].votingRight = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":4773:4950  Stake(... */\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      swap4\n      dup5\n      mstore\n      swap1\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n        /* \"contracts/Stakable.sol\":4599:4614  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":4773:4950  Stake(... */\n      swap1\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x60\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa0\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Stakable.sol\":4599:4614  block.timestamp */\n      swap1\n        /* \"contracts/Stakable.sol\":4773:4950  Stake(... */\n      0xc0\n      dup2\n      add\n        /* \"contracts/Stakable.sol\":4915:4938  stakePeriod + timestamp */\n      tag_233\n        /* \"contracts/Stakable.sol\":4599:4614  block.timestamp */\n      dup4\n        /* \"contracts/Stakable.sol\":4915:4926  stakePeriod */\n      dup7\n        /* \"contracts/Stakable.sol\":4915:4938  stakePeriod + timestamp */\n      tag_135\n      jump\t// in\n    tag_233:\n        /* \"contracts/Stakable.sol\":4773:4950  Stake(... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":4746:4764  stakeholders[user] */\n      dup7\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":4746:4758  stakeholders */\n      0x09\n        /* \"contracts/Stakable.sol\":4746:4764  stakeholders[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":4746:4950  stakeholders[user].stake = Stake(... */\n      dup6\n      mload\n      dup2\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup5\n      sstore\n      dup5\n      add\n      mload\n      0x01\n      dup5\n      add\n      sstore\n      dup4\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup4\n      add\n      sstore\n      0xa0\n      dup4\n      add\n      mload\n      0x05\n      dup4\n      add\n      sstore\n      0xc0\n      swap1\n      swap3\n      add\n      mload\n      0x06\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/Stakable.sol\":5019:5077  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/Stakable.sol\":5032:5038  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":5040:5049  timestamp */\n      dup4\n        /* \"contracts/Stakable.sol\":5052:5075  stakePeriod + timestamp */\n      tag_234\n        /* \"contracts/Stakable.sol\":5040:5049  timestamp */\n      dup2\n        /* \"contracts/Stakable.sol\":5052:5063  stakePeriod */\n      dup9\n        /* \"contracts/Stakable.sol\":5052:5075  stakePeriod + timestamp */\n      tag_135\n      jump\t// in\n    tag_234:\n        /* \"contracts/Stakable.sol\":5019:5077  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8072:8097   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8128:8130   */\n      0x20\n        /* \"#utility.yul\":8113:8131   */\n      dup5\n      add\n        /* \"#utility.yul\":8106:8140   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8156:8174   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8149:8183   */\n      mstore\n        /* \"#utility.yul\":8060:8062   */\n      0x60\n        /* \"#utility.yul\":8045:8063   */\n      add\n        /* \"contracts/Stakable.sol\":5019:5077  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Stakable.sol\":4222:5085  {... */\n      pop\n        /* \"contracts/Stakable.sol\":4074:5085  function stake(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":12091:12189  function stopVoting() external onlyTalax votingStatusTrue {... */\n    tag_111:\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      tag_238\n        /* \"contracts/Stakable.sol\":1248:1255  isTalax */\n      tag_144\n        /* \"contracts/Stakable.sol\":1248:1257  isTalax() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      tag_240\n        /* \"contracts/Stakable.sol\":1563:1581  _checkVotingStatus */\n      tag_114\n        /* \"contracts/Stakable.sol\":1563:1583  _checkVotingStatus() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/Stakable.sol\":12160:12173  _votingStatus */\n      0x03\n        /* \"contracts/Stakable.sol\":12160:12181  _votingStatus = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":12091:12189  function stopVoting() external onlyTalax votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1404:1516  function _checkVotingStatus() internal view {... */\n    tag_114:\n        /* \"contracts/Stakable.sol\":1467:1480  _votingStatus */\n      and(0xff, sload(0x03))\n        /* \"contracts/Stakable.sol\":1459:1508  require(_votingStatus, \"Voting is not available\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8396:8398   */\n      0x20\n        /* \"contracts/Stakable.sol\":1459:1508  require(_votingStatus, \"Voting is not available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8378:8399   */\n      mstore\n        /* \"#utility.yul\":8435:8437   */\n      0x17\n        /* \"#utility.yul\":8415:8433   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8408:8438   */\n      mstore\n        /* \"#utility.yul\":8474:8499   */\n      0x566f74696e67206973206e6f7420617661696c61626c65000000000000000000\n        /* \"#utility.yul\":8454:8472   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8447:8500   */\n      mstore\n        /* \"#utility.yul\":8517:8535   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":1459:1508  require(_votingStatus, \"Voting is not available\") */\n      tag_117\n        /* \"#utility.yul\":8194:8541   */\n      jump\n        /* \"contracts/Stakable.sol\":1459:1508  require(_votingStatus, \"Voting is not available\") */\n    tag_243:\n        /* \"contracts/Stakable.sol\":1404:1516  function _checkVotingStatus() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1285:1396  function _checkUserStake(uint256 amount) internal pure {... */\n    tag_128:\n        /* \"contracts/Stakable.sol\":1368:1369  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":1359:1365  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":1359:1369  amount > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":1351:1388  require(amount > 0, \"No Stake Found\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8748:8750   */\n      0x20\n        /* \"contracts/Stakable.sol\":1351:1388  require(amount > 0, \"No Stake Found\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8730:8751   */\n      mstore\n        /* \"#utility.yul\":8787:8789   */\n      0x0e\n        /* \"#utility.yul\":8767:8785   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8760:8790   */\n      mstore\n        /* \"#utility.yul\":8826:8842   */\n      0x4e6f205374616b6520466f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":8806:8824   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8799:8843   */\n      mstore\n        /* \"#utility.yul\":8860:8878   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":1351:1388  require(amount > 0, \"No Stake Found\") */\n      tag_117\n        /* \"#utility.yul\":8546:8884   */\n      jump\n        /* \"contracts/Stakable.sol\":1351:1388  require(amount > 0, \"No Stake Found\") */\n    tag_247:\n        /* \"contracts/Stakable.sol\":1285:1396  function _checkUserStake(uint256 amount) internal pure {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5973:6423  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_130:\n        /* \"contracts/Stakable.sol\":6079:6086  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":6108:6118  user_stake */\n      dup2\n        /* \"contracts/Stakable.sol\":6108:6125  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6129:6130  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6108:6130  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":6104:6167  if (user_stake.amount == 0) {... */\n      iszero\n      tag_251\n      jumpi\n      pop\n        /* \"contracts/Stakable.sol\":6154:6155  0 */\n      0x00\n      swap2\n        /* \"contracts/Stakable.sol\":5973:6423  function _calculateStakeReward(Stake memory user_stake)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6104:6167  if (user_stake.amount == 0) {... */\n    tag_251:\n        /* \"contracts/Stakable.sol\":6411:6415  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":6364:6407  _calculateStakingDuration(user_stake.since) */\n      tag_252\n        /* \"contracts/Stakable.sol\":6390:6400  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":6390:6406  user_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6364:6389  _calculateStakingDuration */\n      tag_253\n        /* \"contracts/Stakable.sol\":6364:6407  _calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/Stakable.sol\":6324:6334  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":6324:6344  user_stake.rewardAPY */\n      0xa0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6287:6297  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":6287:6304  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6287:6344  user_stake.amount *... */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/Stakable.sol\":6287:6407  user_stake.amount *... */\n      tag_256\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_256:\n        /* \"contracts/Stakable.sol\":6286:6415  (user_stake.amount *... */\n      tag_257\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_257:\n        /* \"contracts/Stakable.sol\":6266:6415  return... */\n      swap3\n        /* \"contracts/Stakable.sol\":5973:6423  function _calculateStakeReward(Stake memory user_stake)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6431:6750  function _calculatePenalty(uint256 amount, uint256 reward)... */\n    tag_133:\n        /* \"contracts/Stakable.sol\":6540:6547  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":6549:6556  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":6596:6656  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      tag_259\n        /* \"contracts/Stakable.sol\":6609:6649  SafeMath.mul(amount, stakingPenaltyRate) */\n      tag_260\n        /* \"contracts/Stakable.sol\":6622:6628  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":6630:6648  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":6609:6621  SafeMath.mul */\n      tag_182\n        /* \"contracts/Stakable.sol\":6609:6649  SafeMath.mul(amount, stakingPenaltyRate) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/Stakable.sol\":6651:6655  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":6596:6608  SafeMath.div */\n      tag_183\n        /* \"contracts/Stakable.sol\":6596:6656  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/Stakable.sol\":6671:6731  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_261\n        /* \"contracts/Stakable.sol\":6684:6724  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_260\n        /* \"contracts/Stakable.sol\":6697:6703  reward */\n      dup6\n        /* \"contracts/Stakable.sol\":6705:6723  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":6684:6696  SafeMath.mul */\n      tag_182\n        /* \"contracts/Stakable.sol\":6684:6724  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":6671:6731  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n    tag_261:\n        /* \"contracts/Stakable.sol\":6574:6742  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":6431:6750  function _calculatePenalty(uint256 amount, uint256 reward)... */\n    tag_258:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3722:3856  function _calculateWeek(uint256 input) internal view returns (uint256) {... */\n    tag_137:\n        /* \"contracts/Stakable.sol\":3784:3791  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3811:3848  (block.timestamp - input).div(7 days) */\n      tag_257\n        /* \"contracts/Stakable.sol\":3841:3847  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":3812:3835  block.timestamp - input */\n      tag_265\n        /* \"contracts/Stakable.sol\":3830:3835  input */\n      dup5\n        /* \"contracts/Stakable.sol\":3812:3827  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":3812:3835  block.timestamp - input */\n      tag_123\n      jump\t// in\n    tag_265:\n        /* \"contracts/Stakable.sol\":3811:3840  (block.timestamp - input).div */\n      swap1\n      tag_183\n        /* \"contracts/Stakable.sol\":3811:3848  (block.timestamp - input).div(7 days) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":9522:9707  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_140:\n        /* \"contracts/Stakable.sol\":9620:9627  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":9691:9699  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stakable.sol\":9683:9687  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":9668:9679  airdropRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":9654:9665  stakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":9654:9679  stakeAmount * airdropRate */\n      tag_267\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_267:\n        /* \"contracts/Stakable.sol\":9653:9687  (stakeAmount * airdropRate) / 1000 */\n      tag_256\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n        /* \"contracts/Stakable.sol\":1109:1208  function isTalax() internal view {... */\n    tag_144:\n        /* \"contracts/Stakable.sol\":1175:1181  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"contracts/Stakable.sol\":1161:1171  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":1161:1181  msg.sender == _owner */\n      eq\n        /* \"contracts/Stakable.sol\":1153:1200  require(msg.sender == _owner, \"Not authorized\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9264:9266   */\n      0x20\n        /* \"contracts/Stakable.sol\":1153:1200  require(msg.sender == _owner, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9246:9267   */\n      mstore\n        /* \"#utility.yul\":9303:9305   */\n      0x0e\n        /* \"#utility.yul\":9283:9301   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9276:9306   */\n      mstore\n        /* \"#utility.yul\":9342:9358   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":9322:9340   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9315:9359   */\n      mstore\n        /* \"#utility.yul\":9376:9394   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":1153:1200  require(msg.sender == _owner, \"Not authorized\") */\n      tag_117\n        /* \"#utility.yul\":9062:9400   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_275\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_255\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_275\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_214\n      jump\t// in\n        /* \"contracts/Stakable.sol\":6758:7241  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_208:\n        /* \"contracts/Stakable.sol\":6878:6885  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Stakable.sol\":6916:6927  amount == 0 */\n      dup4\n        /* \"contracts/Stakable.sol\":6912:6969  if (amount == 0) {... */\n      tag_279\n      jumpi\n      pop\n        /* \"contracts/Stakable.sol\":6952:6953  0 */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"contracts/Stakable.sol\":6944:6957  return (0, 0) */\n      jump(tag_258)\n        /* \"contracts/Stakable.sol\":6912:6969  if (amount == 0) {... */\n    tag_279:\n        /* \"contracts/Stakable.sol\":6982:7004  uint256 amount_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7006:7028  uint256 reward_penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":7032:7102  _calculatePenalty(... */\n      tag_280\n        /* \"contracts/Stakable.sol\":7064:7070  amount */\n      dup7\n        /* \"contracts/Stakable.sol\":7085:7091  reward */\n      dup7\n        /* \"contracts/Stakable.sol\":7032:7049  _calculatePenalty */\n      tag_133\n        /* \"contracts/Stakable.sol\":7032:7102  _calculatePenalty(... */\n      jump\t// in\n    tag_280:\n        /* \"contracts/Stakable.sol\":6981:7102  (uint256 amount_penalty, uint256 reward_penalty) = _calculatePenalty(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":7135:7171  SafeMath.sub(amount, amount_penalty) */\n      tag_281\n        /* \"contracts/Stakable.sol\":7148:7154  amount */\n      dup7\n        /* \"contracts/Stakable.sol\":7156:7170  amount_penalty */\n      dup4\n        /* \"contracts/Stakable.sol\":7135:7147  SafeMath.sub */\n      tag_282\n        /* \"contracts/Stakable.sol\":7135:7171  SafeMath.sub(amount, amount_penalty) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/Stakable.sol\":7186:7222  SafeMath.sub(reward, reward_penalty) */\n      tag_283\n        /* \"contracts/Stakable.sol\":7199:7205  reward */\n      dup7\n        /* \"contracts/Stakable.sol\":7207:7221  reward_penalty */\n      dup4\n        /* \"contracts/Stakable.sol\":7186:7198  SafeMath.sub */\n      tag_282\n        /* \"contracts/Stakable.sol\":7186:7222  SafeMath.sub(reward, reward_penalty) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/Stakable.sol\":7113:7233  return (... */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":6758:7241  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5552:5965  function _calculateStakingDuration(uint256 since)... */\n    tag_253:\n        /* \"contracts/Stakable.sol\":5652:5659  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5693:5694  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":5685:5690  since */\n      dup3\n        /* \"contracts/Stakable.sol\":5685:5694  since > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":5677:5716  require(since > 0, \"Error timestamp 0\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9607:9609   */\n      0x20\n        /* \"contracts/Stakable.sol\":5677:5716  require(since > 0, \"Error timestamp 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9589:9610   */\n      mstore\n        /* \"#utility.yul\":9646:9648   */\n      0x11\n        /* \"#utility.yul\":9626:9644   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9619:9649   */\n      mstore\n        /* \"#utility.yul\":9685:9704   */\n      0x4572726f722074696d657374616d702030000000000000000000000000000000\n        /* \"#utility.yul\":9665:9683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9658:9705   */\n      mstore\n        /* \"#utility.yul\":9722:9740   */\n      0x64\n      add\n        /* \"contracts/Stakable.sol\":5677:5716  require(since > 0, \"Error timestamp 0\") */\n      tag_117\n        /* \"#utility.yul\":9405:9746   */\n      jump\n        /* \"contracts/Stakable.sol\":5677:5716  require(since > 0, \"Error timestamp 0\") */\n    tag_285:\n        /* \"contracts/Stakable.sol\":5802:5957  SafeMath.div(... */\n      tag_257\n        /* \"contracts/Stakable.sol\":5834:5857  block.timestamp - since */\n      tag_289\n        /* \"contracts/Stakable.sol\":5852:5857  since */\n      dup4\n        /* \"contracts/Stakable.sol\":5834:5849  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":5834:5857  block.timestamp - since */\n      tag_123\n      jump\t// in\n    tag_289:\n        /* \"contracts/Stakable.sol\":5833:5865  (block.timestamp - since) * 1e24 */\n      tag_290\n      swap1\n        /* \"contracts/Stakable.sol\":5861:5865  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":5833:5865  (block.timestamp - since) * 1e24 */\n      tag_255\n      jump\t// in\n    tag_290:\n        /* \"contracts/Stakable.sol\":5884:5892  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":5802:5957  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":5802:5814  SafeMath.div */\n      tag_291\n        /* \"contracts/Stakable.sol\":5802:5957  SafeMath.div(... */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_275\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_295:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_299\n      jumpi\n      tag_299\n      tag_300\n      jump\t// in\n    tag_299:\n      div\n      swap5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_125:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_301\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_301:\n      swap1\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":891:1087   */\n    tag_303:\n        /* \"#utility.yul\":959:979   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1008:1062   */\n      dup2\n      and\n        /* \"#utility.yul\":998:1063   */\n      dup2\n      eq\n        /* \"#utility.yul\":988:1081   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1074:1075   */\n      dup1\n        /* \"#utility.yul\":1067:1079   */\n      revert\n        /* \"#utility.yul\":1092:1278   */\n    tag_41:\n        /* \"#utility.yul\":1151:1157   */\n      0x00\n        /* \"#utility.yul\":1204:1206   */\n      0x20\n        /* \"#utility.yul\":1192:1201   */\n      dup3\n        /* \"#utility.yul\":1183:1190   */\n      dup5\n        /* \"#utility.yul\":1179:1202   */\n      sub\n        /* \"#utility.yul\":1175:1207   */\n      slt\n        /* \"#utility.yul\":1172:1224   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1220:1221   */\n      0x00\n        /* \"#utility.yul\":1217:1218   */\n      dup1\n        /* \"#utility.yul\":1210:1222   */\n      revert\n        /* \"#utility.yul\":1172:1224   */\n    tag_310:\n        /* \"#utility.yul\":1243:1272   */\n      tag_275\n        /* \"#utility.yul\":1262:1271   */\n      dup3\n        /* \"#utility.yul\":1243:1272   */\n      tag_303\n      jump\t// in\n        /* \"#utility.yul\":2161:2341   */\n    tag_75:\n        /* \"#utility.yul\":2220:2226   */\n      0x00\n        /* \"#utility.yul\":2273:2275   */\n      0x20\n        /* \"#utility.yul\":2261:2270   */\n      dup3\n        /* \"#utility.yul\":2252:2259   */\n      dup5\n        /* \"#utility.yul\":2248:2271   */\n      sub\n        /* \"#utility.yul\":2244:2276   */\n      slt\n        /* \"#utility.yul\":2241:2293   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2286:2287   */\n      dup1\n        /* \"#utility.yul\":2279:2291   */\n      revert\n        /* \"#utility.yul\":2241:2293   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":2312:2335   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2161:2341   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2599:2990   */\n    tag_108:\n        /* \"#utility.yul\":2685:2691   */\n      0x00\n        /* \"#utility.yul\":2693:2699   */\n      dup1\n        /* \"#utility.yul\":2701:2707   */\n      0x00\n        /* \"#utility.yul\":2709:2715   */\n      dup1\n        /* \"#utility.yul\":2762:2765   */\n      0x80\n        /* \"#utility.yul\":2750:2759   */\n      dup6\n        /* \"#utility.yul\":2741:2748   */\n      dup8\n        /* \"#utility.yul\":2737:2760   */\n      sub\n        /* \"#utility.yul\":2733:2766   */\n      slt\n        /* \"#utility.yul\":2730:2783   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2776:2777   */\n      dup1\n        /* \"#utility.yul\":2769:2781   */\n      revert\n        /* \"#utility.yul\":2730:2783   */\n    tag_320:\n        /* \"#utility.yul\":2802:2831   */\n      tag_321\n        /* \"#utility.yul\":2821:2830   */\n      dup6\n        /* \"#utility.yul\":2802:2831   */\n      tag_303\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2792:2831   */\n      swap7\n        /* \"#utility.yul\":2878:2880   */\n      0x20\n        /* \"#utility.yul\":2863:2881   */\n      dup7\n      add\n        /* \"#utility.yul\":2850:2882   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":2929:2931   */\n      0x40\n        /* \"#utility.yul\":2914:2932   */\n      dup7\n      add\n        /* \"#utility.yul\":2901:2933   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":2980:2982   */\n      0x60\n        /* \"#utility.yul\":2965:2983   */\n      add\n        /* \"#utility.yul\":2952:2984   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2599:2990   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3694:3878   */\n    tag_304:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3743:3744   */\n      0x00\n        /* \"#utility.yul\":3736:3824   */\n      mstore\n        /* \"#utility.yul\":3843:3847   */\n      0x11\n        /* \"#utility.yul\":3840:3841   */\n      0x04\n        /* \"#utility.yul\":3833:3848   */\n      mstore\n        /* \"#utility.yul\":3867:3871   */\n      0x24\n        /* \"#utility.yul\":3864:3865   */\n      0x00\n        /* \"#utility.yul\":3857:3872   */\n      revert\n        /* \"#utility.yul\":3883:4008   */\n    tag_123:\n        /* \"#utility.yul\":3923:3927   */\n      0x00\n        /* \"#utility.yul\":3951:3952   */\n      dup3\n        /* \"#utility.yul\":3948:3949   */\n      dup3\n        /* \"#utility.yul\":3945:3953   */\n      lt\n        /* \"#utility.yul\":3942:3976   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3956:3974   */\n      tag_327\n      tag_304\n      jump\t// in\n    tag_327:\n      pop\n        /* \"#utility.yul\":3993:4002   */\n      sub\n      swap1\n        /* \"#utility.yul\":3883:4008   */\n      jump\t// out\n        /* \"#utility.yul\":4013:4141   */\n    tag_135:\n        /* \"#utility.yul\":4053:4056   */\n      0x00\n        /* \"#utility.yul\":4084:4085   */\n      dup3\n        /* \"#utility.yul\":4080:4086   */\n      not\n        /* \"#utility.yul\":4077:4078   */\n      dup3\n        /* \"#utility.yul\":4074:4087   */\n      gt\n        /* \"#utility.yul\":4071:4110   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":4090:4108   */\n      tag_330\n      tag_304\n      jump\t// in\n    tag_330:\n      pop\n        /* \"#utility.yul\":4126:4135   */\n      add\n      swap1\n        /* \"#utility.yul\":4013:4141   */\n      jump\t// out\n        /* \"#utility.yul\":6295:6479   */\n    tag_300:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6344:6345   */\n      0x00\n        /* \"#utility.yul\":6337:6425   */\n      mstore\n        /* \"#utility.yul\":6444:6448   */\n      0x12\n        /* \"#utility.yul\":6441:6442   */\n      0x04\n        /* \"#utility.yul\":6434:6449   */\n      mstore\n        /* \"#utility.yul\":6468:6472   */\n      0x24\n        /* \"#utility.yul\":6465:6466   */\n      0x00\n        /* \"#utility.yul\":6458:6473   */\n      revert\n        /* \"#utility.yul\":6484:6758   */\n    tag_214:\n        /* \"#utility.yul\":6524:6525   */\n      0x00\n        /* \"#utility.yul\":6550:6551   */\n      dup3\n        /* \"#utility.yul\":6540:6729   */\n      tag_339\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6582:6583   */\n      0x00\n        /* \"#utility.yul\":6575:6663   */\n      mstore\n        /* \"#utility.yul\":6686:6690   */\n      0x12\n        /* \"#utility.yul\":6683:6684   */\n      0x04\n        /* \"#utility.yul\":6676:6691   */\n      mstore\n        /* \"#utility.yul\":6714:6718   */\n      0x24\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6704:6719   */\n      revert\n        /* \"#utility.yul\":6540:6729   */\n    tag_339:\n      pop\n        /* \"#utility.yul\":6743:6752   */\n      div\n      swap1\n        /* \"#utility.yul\":6484:6758   */\n      jump\t// out\n        /* \"#utility.yul\":8889:9057   */\n    tag_255:\n        /* \"#utility.yul\":8929:8936   */\n      0x00\n        /* \"#utility.yul\":8995:8996   */\n      dup2\n        /* \"#utility.yul\":8991:8992   */\n      0x00\n        /* \"#utility.yul\":8987:8993   */\n      not\n        /* \"#utility.yul\":8983:8997   */\n      div\n        /* \"#utility.yul\":8980:8981   */\n      dup4\n        /* \"#utility.yul\":8977:8998   */\n      gt\n        /* \"#utility.yul\":8972:8973   */\n      dup3\n        /* \"#utility.yul\":8965:8974   */\n      iszero\n        /* \"#utility.yul\":8958:8975   */\n      iszero\n        /* \"#utility.yul\":8954:8999   */\n      and\n        /* \"#utility.yul\":8951:9022   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":9002:9020   */\n      tag_348\n      tag_304\n      jump\t// in\n    tag_348:\n      pop\n        /* \"#utility.yul\":9042:9051   */\n      mul\n      swap1\n        /* \"#utility.yul\":8889:9057   */\n      jump\t// out\n        /* \"#utility.yul\":9751:10348   */\n    tag_297:\n        /* \"#utility.yul\":9863:9867   */\n      0x00\n        /* \"#utility.yul\":9892:9894   */\n      0x20\n        /* \"#utility.yul\":9921:9923   */\n      dup1\n        /* \"#utility.yul\":9910:9919   */\n      dup4\n        /* \"#utility.yul\":9903:9924   */\n      mstore\n        /* \"#utility.yul\":9953:9959   */\n      dup4\n        /* \"#utility.yul\":9947:9960   */\n      mload\n        /* \"#utility.yul\":9996:10002   */\n      dup1\n        /* \"#utility.yul\":9991:9993   */\n      dup3\n        /* \"#utility.yul\":9980:9989   */\n      dup6\n        /* \"#utility.yul\":9976:9994   */\n      add\n        /* \"#utility.yul\":9969:10003   */\n      mstore\n        /* \"#utility.yul\":10021:10022   */\n      0x00\n        /* \"#utility.yul\":10031:10171   */\n    tag_352:\n        /* \"#utility.yul\":10045:10051   */\n      dup2\n        /* \"#utility.yul\":10042:10043   */\n      dup2\n        /* \"#utility.yul\":10039:10052   */\n      lt\n        /* \"#utility.yul\":10031:10171   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":10140:10154   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":10136:10159   */\n      dup4\n      add\n        /* \"#utility.yul\":10130:10160   */\n      mload\n        /* \"#utility.yul\":10106:10123   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":10125:10127   */\n      0x40\n        /* \"#utility.yul\":10102:10128   */\n      add\n        /* \"#utility.yul\":10095:10161   */\n      mstore\n        /* \"#utility.yul\":10060:10070   */\n      dup3\n      add\n        /* \"#utility.yul\":10031:10171   */\n      jump(tag_352)\n    tag_354:\n        /* \"#utility.yul\":10189:10195   */\n      dup2\n        /* \"#utility.yul\":10186:10187   */\n      dup2\n        /* \"#utility.yul\":10183:10196   */\n      gt\n        /* \"#utility.yul\":10180:10271   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":10259:10260   */\n      0x00\n        /* \"#utility.yul\":10254:10256   */\n      0x40\n        /* \"#utility.yul\":10245:10251   */\n      dup4\n        /* \"#utility.yul\":10234:10243   */\n      dup8\n        /* \"#utility.yul\":10230:10252   */\n      add\n        /* \"#utility.yul\":10226:10257   */\n      add\n        /* \"#utility.yul\":10219:10261   */\n      mstore\n        /* \"#utility.yul\":10180:10271   */\n    tag_355:\n      pop\n        /* \"#utility.yul\":10332:10334   */\n      0x1f\n        /* \"#utility.yul\":10311:10326   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10307:10336   */\n      and\n        /* \"#utility.yul\":10292:10337   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":10339:10341   */\n      0x40\n        /* \"#utility.yul\":10288:10342   */\n      add\n      swap4\n        /* \"#utility.yul\":9751:10348   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122030bc4d7db5716312107ccfcb7d3f0a860d8c12e037ea733196a244518032427364736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600f6000556050600155600880546001600160a01b0319163317905561153b8061003c6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063893d20e8116100e3578063c23a5cea1161008c578063d5dbdf1b11610066578063d5dbdf1b146103be578063f93d4f8a146103d1578063fab2f86b146103e457600080fd5b8063c23a5cea14610385578063cb79c2e1146103ad578063cbb3e152146103b657600080fd5b8063a3ec138d116100bd578063a3ec138d14610346578063a7771ee314610369578063b87da76d1461037c57600080fd5b8063893d20e8146102f85780638c63f97f14610313578063a143a5f21461032657600080fd5b80635f5300ff11610145578063671d2b751161011f578063671d2b75146102cf57806371e3db87146102e75780638891cf0d146102ef57600080fd5b80635f5300ff1461029d578063632a9a52146102b457806365f8c6c5146102bc57600080fd5b80631d77b00b116101765780631d77b00b146102255780631ec6b60a146102385780632d15cc041461024057600080fd5b8063070c8b741461019257806310486b6a1461019c575b600080fd5b61019a6103ec565b005b6101a46104fb565b60405161021c9190600061012082019050825182526020830151602083015260408301516001600160a01b0381511660408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b60405180910390f35b61019a6102333660046113a7565b610662565b61019a610699565b61028661024e3660046113a7565b6001600160a01b031660009081526006602090815260408083208054600454855260019091019092529091205460ff91821692911690565b60408051921515835290151560208301520161021c565b6102a660055481565b60405190815260200161021c565b61019a610716565b6102a66102ca3660046113a7565b610839565b6102d761095f565b604051901515815260200161021c565b61019a610a08565b6102a660015481565b6008546040516001600160a01b03909116815260200161021c565b61019a6103213660046113c2565b610a16565b6102a66103343660046113c2565b60076020526000908152604090205481565b6102d76103543660046113a7565b60066020526000908152604090205460ff1681565b6102d76103773660046113a7565b610ad0565b6102a660025481565b6103986103933660046113a7565b610b47565b6040805192835260208301919091520161021c565b6102a660005481565b6102a6610cf1565b61019a6103cc3660046113c2565b610d24565b61019a6103df3660046113db565b610dd8565b61019a610fe2565b6103f4610ffe565b3360009081526006602052604090205460ff16151560011461045d5760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f7465720000000000000000000000000060448201526064015b60405180910390fd5b336000908152600660209081526040808320600454845260019081019092529091205460ff161515146104d25760405162461bcd60e51b815260206004820152601660248201527f596f752068617665206e6f7420766f74656420796574000000000000000000006044820152606401610454565b60045460009081526007602052604081208054600192906104f490849061142a565b9091555050565b610503611329565b33600090815260096020908152604080832081516101408101835281546001600160a01b03908116606080840191825260018501546080850152600285015460a0850152600385015460c0850152600485015460e08501526005850154610100850152600685015461012085015290835260078401549091168286015260089092015481840152825191820183528482528184019490945283519181018290529101516105af90611052565b60006105be82604001516110a5565b9050600042836040015160c0015111156105fb576000806105e785604001516020015185611103565b90925090506105f68183611441565b925050505b600061060a8560400151611138565b1115610632576000610623846040015160200151611151565b60408501516080015250610640565b604083015160006080909101525b6040830180516060019290925260208084019190915290510151815292915050565b61066a611173565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6106a1611173565b60035460ff16156106f45760405162461bcd60e51b815260206004820152601960248201527f566f74696e6720697320616c72656164792072756e6e696e67000000000000006044820152606401610454565b6003805460ff19166001908117909155600480546000906104f4908490611441565b61071e610ffe565b3360009081526006602052604090205460ff1615156001146107825760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f746572000000000000000000000000006044820152606401610454565b336000908152600660209081526040808320600454845260010190915290205460ff16156107f25760405162461bcd60e51b815260206004820152601560248201527f596f75206861766520766f746564206265666f726500000000000000000000006044820152606401610454565b33600090815260066020908152604080832060048054855260019182018452828520805460ff191683179055548452600790925282208054919290916104f4908490611441565b6000610843611173565b6001600160a01b038083166000908152600960209081526040918290208251610140810184528154851660608201908152600183015460808301819052600284015460a0840152600384015460c0840152600484015460e0840152600584015461010084015260068401546101208401529082526007830154909516928101929092526008015491810191909152906108db90611052565b60006108ea8260400151611138565b116109375760405162461bcd60e51b815260206004820152601560248201527f436c61696d61626c65206f6e63652061207765656b00000000000000000000006044820152606401610454565b8051600060809091015242604082015280516020015161095690611151565b9150505b919050565b6000610969611173565b610971610ffe565b6001600554116109c35760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f75676820766f746572730000000000000000000000000000006044820152606401610454565b60006109dc6109d560055460056111cd565b600a6111e0565b600454600090815260076020526040902054909150811015610a0057600191505090565b600091505090565b610a10611173565b42600255565b610a1e611173565b601e811115610a945760405162461bcd60e51b8152602060048201526024808201527f50656e616c7479206665652063616e6e6f74206578636565642033207065726360448201527f656e742e000000000000000000000000000000000000000000000000000000006064820152608401610454565b60008190556040518181527fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9906020015b60405180910390a150565b60006001600160a01b038216610b285760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610454565b506001600160a01b031660009081526006602052604090205460ff1690565b600080610b52611173565b6001600160a01b038084166000908152600960209081526040808320815160e081018352815490951685526001810154928501929092526002820154908401526003810154606084015260048101546080840152600581015460a08401526006015460c0830152610bc2826110a5565b6001600160a01b0386166000908152600960205260408120805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201839055600282018390556003820183905560048201839055600582018390556006820183905560078201805490911690556008015560c0830151909150421015610c9f57600160056000828254610c52919061142a565b90915550506001600160a01b038516600090815260066020908152604080832060045484526001018252909120805460ff19169055820151610c9490826111ec565b935093505050915091565b600160056000828254610cb2919061142a565b90915550506001600160a01b0394909416600090815260066020908152604080832060045484526001018252909120805460ff19169055015193915050565b6000600254600014610d1e5762093a8060025442610d0f919061142a565b610d19919061146f565b905090565b50600090565b610d2c611173565b60c8811115610da35760405162461bcd60e51b815260206004820152602c60248201527f41697264726f702050657263656e746167652063616e6e6f742065786365656460448201527f2032302070657263656e742e00000000000000000000000000000000000000006064820152608401610454565b60018190556040518181527fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e90602001610ac5565b610de0611173565b60008311610e305760405162461bcd60e51b815260206004820152601460248201527f43616e6e6f74207374616b65206e6f7468696e670000000000000000000000006044820152606401610454565b6001600160a01b03841660009081526009602052604090206001015415610e995760405162461bcd60e51b815260206004820152601060248201527f557365722069732061207374616b6572000000000000000000000000000000006044820152606401610454565b600160056000828254610eac9190611441565b90915550506001600160a01b0384166000818152600660209081526040808320805460ff19166001179055805160e0810182529384529083018690524290830181905260608301829052608083019190915260a082018390529060c08101610f148386611441565b90526001600160a01b038681166000818152600960209081526040918290208551815473ffffffffffffffffffffffffffffffffffffffff1916951694909417845584015160018401558301516002830155606083015160038301556080830151600483015560a0830151600583015560c0909201516006909101557fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8583610fbd8188611441565b6040805193845260208401929092529082015260600160405180910390a25050505050565b610fea611173565b610ff2610ffe565b6003805460ff19169055565b60035460ff166110505760405162461bcd60e51b815260206004820152601760248201527f566f74696e67206973206e6f7420617661696c61626c650000000000000000006044820152606401610454565b565b600081116110a25760405162461bcd60e51b815260206004820152600e60248201527f4e6f205374616b6520466f756e640000000000000000000000000000000000006044820152606401610454565b50565b60008160200151600014156110bc57506000919050565b6a52b7d2dcc80cd2e40000006110d58360400151611231565b8360a0015184602001516110e99190611491565b6110f39190611491565b6110fd919061146f565b92915050565b60008061111d611115856000546111cd565b6103e86111e0565b61112c611115856000546111cd565b915091505b9250929050565b60006110fd62093a8061114b844261142a565b906111e0565b60006301dfe2006103e8600154846111699190611491565b6110f3919061146f565b6008546001600160a01b031633146110505760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152606401610454565b60006111d98284611491565b9392505050565b60006111d9828461146f565b600080836111ff57506000905080611131565b60008061120c8686611103565b9150915061121a86836112e3565b61122486836112e3565b9350935050509250929050565b60008082116112825760405162461bcd60e51b815260206004820152601160248201527f4572726f722074696d657374616d7020300000000000000000000000000000006044820152606401610454565b6110fd61128f834261142a565b6112a39069d3c21bcecceda1000000611491565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d700000008152506112ef565b60006111d9828461142a565b600081836113105760405162461bcd60e51b815260040161045491906114b0565b5082848161132057611320611459565b04949350505050565b6040518060600160405280600081526020016000815260200161138b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b80356001600160a01b038116811461095a57600080fd5b6000602082840312156113b957600080fd5b6111d982611390565b6000602082840312156113d457600080fd5b5035919050565b600080600080608085870312156113f157600080fd5b6113fa85611390565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561143c5761143c611414565b500390565b6000821982111561145457611454611414565b500190565b634e487b7160e01b600052601260045260246000fd5b60008261148c57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114ab576114ab611414565b500290565b600060208083528351808285015260005b818110156114dd578581018301518582016040015282016114c1565b818111156114ef576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122030bc4d7db5716312107ccfcb7d3f0a860d8c12e037ea733196a244518032427364736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF PUSH1 0x0 SSTORE PUSH1 0x50 PUSH1 0x1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x153B DUP1 PUSH2 0x3C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5DBDF1B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3EC138D GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xA7771EE3 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F5300FF GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x671D2B75 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D77B00B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x699 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x19A PUSH2 0x716 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x19A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x19A PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x19A PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420766F7465642079657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x4F4 SWAP1 DUP5 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x503 PUSH2 0x1329 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x6 DUP6 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE SWAP1 DUP4 MSTORE PUSH1 0x7 DUP5 ADD SLOAD SWAP1 SWAP2 AND DUP3 DUP7 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD DUP2 DUP5 ADD MSTORE DUP3 MLOAD SWAP2 DUP3 ADD DUP4 MSTORE DUP5 DUP3 MSTORE DUP2 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 ADD MLOAD PUSH2 0x5AF SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BE DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 PUSH2 0x5E7 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x1103 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5F6 DUP2 DUP4 PUSH2 0x1441 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x60A DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1138 JUMP JUMPDEST GT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 PUSH2 0x623 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP4 ADD DUP1 MLOAD PUSH1 0x60 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD ADD MLOAD DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66A PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720697320616C72656164792072756E6E696E6700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4F4 SWAP1 DUP5 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x71E PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520766F746564206265666F72650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x4F4 SWAP1 DUP5 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x843 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x140 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x7 DUP4 ADD SLOAD SWAP1 SWAP6 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x8 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH2 0x8DB SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1138 JUMP JUMPDEST GT PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C65206F6E63652061207765656B0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x956 SWAP1 PUSH2 0x1151 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x971 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD GT PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F74657273000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DC PUSH2 0x9D5 PUSH1 0x5 SLOAD PUSH1 0x5 PUSH2 0x11CD JUMP JUMPDEST PUSH1 0xA PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0xA00 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x1173 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0xA1E PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x50656E616C7479206665652063616E6E6F742065786365656420332070657263 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E742E00000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB52 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0xBC2 DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x8 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 SWAP2 POP TIMESTAMP LT ISZERO PUSH2 0xC9F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 ADD MLOAD PUSH2 0xC94 SWAP1 DUP3 PUSH2 0x11EC JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCB2 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE ADD MLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 EQ PUSH2 0xD1E JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xD0F SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD2C PUSH2 0x1173 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F702050657263656E746167652063616E6E6F7420657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2032302070657263656E742E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0xDE0 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B65206E6F7468696E67000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722069732061207374616B657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD DUP7 SWAP1 MSTORE TIMESTAMP SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0xC0 DUP2 ADD PUSH2 0xF14 DUP4 DUP7 PUSH2 0x1441 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xFBD DUP2 DUP9 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFEA PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xFF2 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F205374616B6520466F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x10BC JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x10D5 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1231 JUMP JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x10E9 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x10F3 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111D PUSH2 0x1115 DUP6 PUSH1 0x0 SLOAD PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x112C PUSH2 0x1115 DUP6 PUSH1 0x0 SLOAD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH3 0x93A80 PUSH2 0x114B DUP5 TIMESTAMP PUSH2 0x142A JUMP JUMPDEST SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x10F3 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x1491 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x11FF JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x120C DUP7 DUP7 PUSH2 0x1103 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x121A DUP7 DUP4 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x1224 DUP7 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH2 0x10FD PUSH2 0x128F DUP4 TIMESTAMP PUSH2 0x142A JUMP JUMPDEST PUSH2 0x12A3 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1491 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x1320 JUMPI PUSH2 0x1320 PUSH2 0x1459 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138B PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x95A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D9 DUP3 PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13FA DUP6 PUSH2 0x1390 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x1414 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1454 JUMPI PUSH2 0x1454 PUSH2 0x1414 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x148C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14AB JUMPI PUSH2 0x14AB PUSH2 0x1414 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14DD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x14C1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xBC 0x4D PUSH30 0xB5716312107CCFCB7D3F0A860D8C12E037EA733196A24451803242736473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "162:12030:1:-:0;;;819:176;;;;;;;;;-1:-1:-1;928:2:1;907:18;:23;955:2;941:11;:16;968:6;:19;;-1:-1:-1;;;;;;968:19:1;977:10;968:19;;;162:12030;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateAirdrop_1011": {
									"entryPoint": 4433,
									"id": 1011,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculatePenalty_754": {
									"entryPoint": 4355,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_calculateStakeReward_722": {
									"entryPoint": 4261,
									"id": 722,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingDuration_691": {
									"entryPoint": 4657,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingWithPenalty_796": {
									"entryPoint": 4588,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_calculateWeek_540": {
									"entryPoint": 4408,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkUserStake_398": {
									"entryPoint": 4178,
									"id": 398,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkVotingStatus_407": {
									"entryPoint": 4094,
									"id": 407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropRate_330": {
									"entryPoint": null,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropWeek_1087": {
									"entryPoint": 3313,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeAirdropPercentage_663": {
									"entryPoint": 3364,
									"id": 663,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePenaltyFee_640": {
									"entryPoint": 2582,
									"id": 640,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTalaxAddress_426": {
									"entryPoint": 1634,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_1065": {
									"entryPoint": 2105,
									"id": 1065,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 4576,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 4847,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getOwner_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVoters_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getVotingResult_1264": {
									"entryPoint": 2399,
									"id": 1264,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasStake_993": {
									"entryPoint": 1275,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isTalax_378": {
									"entryPoint": 4467,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isVoter_1131": {
									"entryPoint": 2768,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 4557,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@retractVote_1223": {
									"entryPoint": 1004,
									"id": 1223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_617": {
									"entryPoint": 3544,
									"id": 617,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_328": {
									"entryPoint": null,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirdropSince_523": {
									"entryPoint": 2568,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVoting_1108": {
									"entryPoint": 1689,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopVoting_1276": {
									"entryPoint": 4066,
									"id": 1276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 4835,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalVoters_338": {
									"entryPoint": null,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_1177": {
									"entryPoint": 1814,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votedUsers_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_870": {
									"entryPoint": 2887,
									"id": 870,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$465_memory_ptr__to_t_struct$_StakingSummary_$465_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10350:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:709:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "187:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:3:2",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "195:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "187:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "230:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "241:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "223:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "275:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "286:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "271:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "271:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "303:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "311:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "299:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "299:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "293:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "293:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "264:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "264:54:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:44:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "365:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:17:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "347:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:24:2"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "331:12:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "391:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "402:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "419:12:2"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "413:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "413:19:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "434:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "409:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "409:68:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:98:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "380:98:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "498:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "509:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "494:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "494:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "524:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "538:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "520:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "520:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "514:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "487:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "487:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "592:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "606:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "588:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "588:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "582:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "554:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "633:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "644:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "629:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "660:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "674:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "656:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "656:21:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "650:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "650:28:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:57:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "710:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "695:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "695:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "726:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "740:3:2",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "716:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "716:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "688:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "688:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "766:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "777:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "762:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "762:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "793:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "807:3:2",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "789:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "789:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "783:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "755:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "833:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "844:3:2",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "829:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "860:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "874:3:2",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "856:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "856:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "850:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "850:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "822:58:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$465_memory_ptr__to_t_struct$_StakingSummary_$465_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "146:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "157:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "168:4:2",
														"type": ""
													}
												],
												"src": "14:872:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "940:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "950:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "972:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "959:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "950:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1065:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1067:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1067:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1067:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1001:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1012:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1019:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1008:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1008:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "998:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "991:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:73:2"
															},
															"nodeType": "YulIf",
															"src": "988:93:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "919:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "930:5:2",
														"type": ""
													}
												],
												"src": "891:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1162:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1208:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1217:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1220:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1210:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1210:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1210:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1183:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1192:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1175:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1175:32:2"
															},
															"nodeType": "YulIf",
															"src": "1172:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1233:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1262:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1243:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1128:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1139:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1151:6:2",
														"type": ""
													}
												],
												"src": "1092:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1400:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1410:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1433:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1410:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1477:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1470:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1470:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1517:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1502:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "1536:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1529:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1522:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1522:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1495:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1361:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1372:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1380:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1391:4:2",
														"type": ""
													}
												],
												"src": "1283:268:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1667:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1679:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1675:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1667:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1709:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1720:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1626:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1637:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1648:4:2",
														"type": ""
													}
												],
												"src": "1556:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1885:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1910:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1903:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1903:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1896:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1802:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1813:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1824:4:2",
														"type": ""
													}
												],
												"src": "1738:187:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2031:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2041:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2064:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2049:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2041:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2083:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2098:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2106:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2094:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2076:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2000:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2011:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2022:4:2",
														"type": ""
													}
												],
												"src": "1930:226:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2277:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2286:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2289:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2279:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2279:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2252:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2248:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:32:2"
															},
															"nodeType": "YulIf",
															"src": "2241:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2302:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2325:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2312:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2302:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2197:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2208:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:2",
														"type": ""
													}
												],
												"src": "2161:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2475:119:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2485:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2497:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2493:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2485:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2527:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2538:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2520:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2520:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2565:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2576:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2561:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2561:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2581:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2436:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2447:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2455:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2466:4:2",
														"type": ""
													}
												],
												"src": "2346:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:270:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2767:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2776:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2779:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2769:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2769:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2769:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2741:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2750:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2737:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2737:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2762:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2733:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:33:2"
															},
															"nodeType": "YulIf",
															"src": "2730:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2792:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2821:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2802:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2840:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2867:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2878:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2850:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2840:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2891:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2918:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2929:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2914:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2914:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2901:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2901:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2891:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2942:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2969:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2980:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2952:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:32:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2662:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2673:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2685:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2693:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2701:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2709:6:2",
														"type": ""
													}
												],
												"src": "2599:391:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3169:169:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3179:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3220:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3231:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3216:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3236:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3270:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:18:2"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206120766f746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3275:21:2",
																		"type": "",
																		"value": "You are not a voter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3248:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3306:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3318:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3329:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3314:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3306:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3146:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3160:4:2",
														"type": ""
													}
												],
												"src": "2995:343:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:172:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3534:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3527:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:2",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3607:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3618:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3603:18:2"
																	},
																	{
																		"hexValue": "596f752068617665206e6f7420766f74656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3623:24:2",
																		"type": "",
																		"value": "You have not voted yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3596:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3657:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3669:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3657:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3494:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3508:4:2",
														"type": ""
													}
												],
												"src": "3343:346:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3726:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3743:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3746:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3736:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3840:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3833:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3864:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3867:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3857:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3857:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3694:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3954:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3956:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3956:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3956:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3948:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3951:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3945:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:8:2"
															},
															"nodeType": "YulIf",
															"src": "3942:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3985:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3997:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4000:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3993:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3985:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3914:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3917:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3923:4:2",
														"type": ""
													}
												],
												"src": "3883:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4061:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4088:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4090:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4090:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4090:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4077:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4084:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4080:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4074:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:13:2"
															},
															"nodeType": "YulIf",
															"src": "4071:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4119:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4130:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4133:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4119:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4044:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4047:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4053:3:2",
														"type": ""
													}
												],
												"src": "4013:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4320:175:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4337:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4348:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4330:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4330:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4371:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4382:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4367:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4360:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4410:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4421:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4406:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4406:18:2"
																	},
																	{
																		"hexValue": "566f74696e6720697320616c72656164792072756e6e696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4426:27:2",
																		"type": "",
																		"value": "Voting is already running"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4399:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4399:55:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4463:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4475:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4486:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4463:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4297:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4311:4:2",
														"type": ""
													}
												],
												"src": "4146:349:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4674:171:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4691:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4684:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4684:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4725:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4736:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4721:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4741:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4714:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4775:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4760:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4760:18:2"
																	},
																	{
																		"hexValue": "596f75206861766520766f746564206265666f7265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4780:23:2",
																		"type": "",
																		"value": "You have voted before"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4753:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4753:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4813:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4825:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4821:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4813:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4651:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4665:4:2",
														"type": ""
													}
												],
												"src": "4500:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5024:171:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5034:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5075:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5086:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5071:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5091:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5064:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5064:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5114:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5125:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5110:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5110:18:2"
																	},
																	{
																		"hexValue": "436c61696d61626c65206f6e63652061207765656b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5130:23:2",
																		"type": "",
																		"value": "Claimable once a week"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5103:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5103:51:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5001:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5015:4:2",
														"type": ""
													}
												],
												"src": "4850:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5374:167:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5391:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5384:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5441:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5464:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5475:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5460:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:18:2"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820766f74657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5480:19:2",
																		"type": "",
																		"value": "Not enough voters"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5453:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5453:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5509:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5521:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5532:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5517:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5509:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5351:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5365:4:2",
														"type": ""
													}
												],
												"src": "5200:341:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5720:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5737:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5730:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5730:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5730:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5771:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5782:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5767:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5787:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5760:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5760:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5810:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5821:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5806:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5806:18:2"
																	},
																	{
																		"hexValue": "50656e616c7479206665652063616e6e6f742065786365656420332070657263",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5826:34:2",
																		"type": "",
																		"value": "Penalty fee cannot exceed 3 perc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5799:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5799:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5799:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5892:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5877:18:2"
																	},
																	{
																		"hexValue": "656e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5897:6:2",
																		"type": "",
																		"value": "ent."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5913:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5925:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5936:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5921:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5921:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5913:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5697:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5711:4:2",
														"type": ""
													}
												],
												"src": "5546:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6125:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6142:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6153:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6135:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6135:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6176:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6187:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6172:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6165:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6215:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6226:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6211:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6211:18:2"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6231:17:2",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6204:45:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6258:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6270:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6266:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6258:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6102:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6116:4:2",
														"type": ""
													}
												],
												"src": "5951:339:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6344:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6347:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6337:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6337:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6337:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6441:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6434:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6434:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6468:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6458:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6458:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6458:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6295:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6530:228:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6561:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6582:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6585:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6575:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6575:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6575:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6683:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6686:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6676:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6676:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6676:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6711:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6714:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6704:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6704:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6704:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6550:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6543:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6543:9:2"
															},
															"nodeType": "YulIf",
															"src": "6540:189:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6738:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6747:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6750:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6743:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6738:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6515:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6518:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6524:1:2",
														"type": ""
													}
												],
												"src": "6484:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6937:234:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6954:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6965:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6947:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6988:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6999:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6984:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6984:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7004:2:2",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6977:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6977:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6977:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7027:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7038:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7023:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7023:18:2"
																	},
																	{
																		"hexValue": "41697264726f702050657263656e746167652063616e6e6f7420657863656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7043:34:2",
																		"type": "",
																		"value": "Airdrop Percentage cannot exceed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7016:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7016:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:2"
																	},
																	{
																		"hexValue": "2032302070657263656e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7114:14:2",
																		"type": "",
																		"value": " 20 percent."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7087:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7087:42:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7138:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7150:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7161:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7138:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6914:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6928:4:2",
														"type": ""
													}
												],
												"src": "6763:408:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7350:170:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7378:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7360:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7360:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7360:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7412:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7397:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7417:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7440:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7451:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7436:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:18:2"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7456:22:2",
																		"type": "",
																		"value": "Cannot stake nothing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7429:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7429:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7488:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7500:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7511:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7496:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7496:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7488:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7327:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7341:4:2",
														"type": ""
													}
												],
												"src": "7176:344:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7699:166:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7716:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7727:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7750:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7761:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7746:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7746:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7766:2:2",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7739:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7739:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7800:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7785:18:2"
																	},
																	{
																		"hexValue": "557365722069732061207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7805:18:2",
																		"type": "",
																		"value": "User is a staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7778:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7778:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7778:46:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7833:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7845:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7833:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7676:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7690:4:2",
														"type": ""
													}
												],
												"src": "7525:340:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8027:162:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8037:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8049:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8060:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8045:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8037:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8079:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8090:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8072:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8072:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8072:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8117:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8128:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8113:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8133:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8106:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8106:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8171:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8176:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8149:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8149:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7980:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7991:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7999:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8007:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8018:4:2",
														"type": ""
													}
												],
												"src": "7870:319:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8368:173:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8385:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8396:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8378:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8378:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8378:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8435:2:2",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8458:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8469:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8454:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8454:18:2"
																	},
																	{
																		"hexValue": "566f74696e67206973206e6f7420617661696c61626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8474:25:2",
																		"type": "",
																		"value": "Voting is not available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8447:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8447:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8447:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8509:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8521:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8532:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8517:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8517:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8509:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8345:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8359:4:2",
														"type": ""
													}
												],
												"src": "8194:347:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8720:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8737:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8748:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8730:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8771:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8782:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8767:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8760:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8760:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8760:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8810:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8821:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8806:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8806:18:2"
																	},
																	{
																		"hexValue": "4e6f205374616b6520466f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8826:16:2",
																		"type": "",
																		"value": "No Stake Found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8799:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8799:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8799:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8864:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8860:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8860:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8852:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8697:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8711:4:2",
														"type": ""
													}
												],
												"src": "8546:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8941:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9000:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9002:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9002:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9002:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8972:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8965:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8965:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8958:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8958:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8980:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8991:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8987:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8987:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8995:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8983:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8983:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8977:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8977:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8954:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8954:45:2"
															},
															"nodeType": "YulIf",
															"src": "8951:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9031:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9046:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9049:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9042:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9031:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8920:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8923:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8929:7:2",
														"type": ""
													}
												],
												"src": "8889:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9236:164:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9253:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9264:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9246:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9246:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9287:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9298:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9283:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9283:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9303:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9276:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9276:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9276:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9326:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9337:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9322:18:2"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9342:16:2",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:44:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9315:44:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9368:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9380:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9391:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9368:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9213:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9227:4:2",
														"type": ""
													}
												],
												"src": "9062:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9579:167:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9596:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9607:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9589:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9641:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9626:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9646:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9619:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9669:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9680:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9665:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9665:18:2"
																	},
																	{
																		"hexValue": "4572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9685:19:2",
																		"type": "",
																		"value": "Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9658:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9658:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9714:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9726:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9737:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9722:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9722:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9714:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9556:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9570:4:2",
														"type": ""
													}
												],
												"src": "9405:341:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9872:476:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9882:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9892:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9886:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9910:9:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9921:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9903:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9903:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9903:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9933:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9953:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9947:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9947:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9937:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9980:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9991:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9976:18:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9996:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9969:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9969:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10012:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10021:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10016:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10081:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "10110:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10121:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10106:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10106:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10125:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10102:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10102:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "10144:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "10152:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "10140:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10140:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "10156:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10136:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10136:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10130:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10130:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10095:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10095:66:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10095:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10042:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10045:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10039:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10039:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10053:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10055:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10064:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10067:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10060:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10060:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10055:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10035:3:2",
																"statements": []
															},
															"src": "10031:140:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10205:66:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "10234:9:2"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "10245:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10230:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10230:22:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10254:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10226:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10226:31:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10259:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10219:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10219:42:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10219:42:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10186:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10189:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10183:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10183:13:2"
															},
															"nodeType": "YulIf",
															"src": "10180:91:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10280:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "10315:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10323:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10311:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10311:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10332:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10328:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10328:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10307:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10307:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10292:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10292:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10339:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10288:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10288:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10280:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9841:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9852:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9863:4:2",
														"type": ""
													}
												],
												"src": "9751:597:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_struct$_StakingSummary_$465_memory_ptr__to_t_struct$_StakingSummary_$465_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x40), and(mload(memberValue0), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), mload(add(memberValue0, 0x20)))\n        mstore(add(headStart, 128), mload(add(memberValue0, 0x40)))\n        mstore(add(headStart, 160), mload(add(memberValue0, 96)))\n        mstore(add(headStart, 192), mload(add(memberValue0, 128)))\n        mstore(add(headStart, 224), mload(add(memberValue0, 160)))\n        mstore(add(headStart, 256), mload(add(memberValue0, 192)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"You are not a voter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You have not voted yet\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Voting is already running\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"You have voted before\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Claimable once a week\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not enough voters\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Penalty fee cannot exceed 3 perc\")\n        mstore(add(headStart, 96), \"ent.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Airdrop Percentage cannot exceed\")\n        mstore(add(headStart, 96), \" 20 percent.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Cannot stake nothing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"User is a staker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Voting is not available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No Stake Found\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Error timestamp 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061018d5760003560e01c8063893d20e8116100e3578063c23a5cea1161008c578063d5dbdf1b11610066578063d5dbdf1b146103be578063f93d4f8a146103d1578063fab2f86b146103e457600080fd5b8063c23a5cea14610385578063cb79c2e1146103ad578063cbb3e152146103b657600080fd5b8063a3ec138d116100bd578063a3ec138d14610346578063a7771ee314610369578063b87da76d1461037c57600080fd5b8063893d20e8146102f85780638c63f97f14610313578063a143a5f21461032657600080fd5b80635f5300ff11610145578063671d2b751161011f578063671d2b75146102cf57806371e3db87146102e75780638891cf0d146102ef57600080fd5b80635f5300ff1461029d578063632a9a52146102b457806365f8c6c5146102bc57600080fd5b80631d77b00b116101765780631d77b00b146102255780631ec6b60a146102385780632d15cc041461024057600080fd5b8063070c8b741461019257806310486b6a1461019c575b600080fd5b61019a6103ec565b005b6101a46104fb565b60405161021c9190600061012082019050825182526020830151602083015260408301516001600160a01b0381511660408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b60405180910390f35b61019a6102333660046113a7565b610662565b61019a610699565b61028661024e3660046113a7565b6001600160a01b031660009081526006602090815260408083208054600454855260019091019092529091205460ff91821692911690565b60408051921515835290151560208301520161021c565b6102a660055481565b60405190815260200161021c565b61019a610716565b6102a66102ca3660046113a7565b610839565b6102d761095f565b604051901515815260200161021c565b61019a610a08565b6102a660015481565b6008546040516001600160a01b03909116815260200161021c565b61019a6103213660046113c2565b610a16565b6102a66103343660046113c2565b60076020526000908152604090205481565b6102d76103543660046113a7565b60066020526000908152604090205460ff1681565b6102d76103773660046113a7565b610ad0565b6102a660025481565b6103986103933660046113a7565b610b47565b6040805192835260208301919091520161021c565b6102a660005481565b6102a6610cf1565b61019a6103cc3660046113c2565b610d24565b61019a6103df3660046113db565b610dd8565b61019a610fe2565b6103f4610ffe565b3360009081526006602052604090205460ff16151560011461045d5760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f7465720000000000000000000000000060448201526064015b60405180910390fd5b336000908152600660209081526040808320600454845260019081019092529091205460ff161515146104d25760405162461bcd60e51b815260206004820152601660248201527f596f752068617665206e6f7420766f74656420796574000000000000000000006044820152606401610454565b60045460009081526007602052604081208054600192906104f490849061142a565b9091555050565b610503611329565b33600090815260096020908152604080832081516101408101835281546001600160a01b03908116606080840191825260018501546080850152600285015460a0850152600385015460c0850152600485015460e08501526005850154610100850152600685015461012085015290835260078401549091168286015260089092015481840152825191820183528482528184019490945283519181018290529101516105af90611052565b60006105be82604001516110a5565b9050600042836040015160c0015111156105fb576000806105e785604001516020015185611103565b90925090506105f68183611441565b925050505b600061060a8560400151611138565b1115610632576000610623846040015160200151611151565b60408501516080015250610640565b604083015160006080909101525b6040830180516060019290925260208084019190915290510151815292915050565b61066a611173565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6106a1611173565b60035460ff16156106f45760405162461bcd60e51b815260206004820152601960248201527f566f74696e6720697320616c72656164792072756e6e696e67000000000000006044820152606401610454565b6003805460ff19166001908117909155600480546000906104f4908490611441565b61071e610ffe565b3360009081526006602052604090205460ff1615156001146107825760405162461bcd60e51b815260206004820152601360248201527f596f7520617265206e6f74206120766f746572000000000000000000000000006044820152606401610454565b336000908152600660209081526040808320600454845260010190915290205460ff16156107f25760405162461bcd60e51b815260206004820152601560248201527f596f75206861766520766f746564206265666f726500000000000000000000006044820152606401610454565b33600090815260066020908152604080832060048054855260019182018452828520805460ff191683179055548452600790925282208054919290916104f4908490611441565b6000610843611173565b6001600160a01b038083166000908152600960209081526040918290208251610140810184528154851660608201908152600183015460808301819052600284015460a0840152600384015460c0840152600484015460e0840152600584015461010084015260068401546101208401529082526007830154909516928101929092526008015491810191909152906108db90611052565b60006108ea8260400151611138565b116109375760405162461bcd60e51b815260206004820152601560248201527f436c61696d61626c65206f6e63652061207765656b00000000000000000000006044820152606401610454565b8051600060809091015242604082015280516020015161095690611151565b9150505b919050565b6000610969611173565b610971610ffe565b6001600554116109c35760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f75676820766f746572730000000000000000000000000000006044820152606401610454565b60006109dc6109d560055460056111cd565b600a6111e0565b600454600090815260076020526040902054909150811015610a0057600191505090565b600091505090565b610a10611173565b42600255565b610a1e611173565b601e811115610a945760405162461bcd60e51b8152602060048201526024808201527f50656e616c7479206665652063616e6e6f74206578636565642033207065726360448201527f656e742e000000000000000000000000000000000000000000000000000000006064820152608401610454565b60008190556040518181527fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9906020015b60405180910390a150565b60006001600160a01b038216610b285760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610454565b506001600160a01b031660009081526006602052604090205460ff1690565b600080610b52611173565b6001600160a01b038084166000908152600960209081526040808320815160e081018352815490951685526001810154928501929092526002820154908401526003810154606084015260048101546080840152600581015460a08401526006015460c0830152610bc2826110a5565b6001600160a01b0386166000908152600960205260408120805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201839055600282018390556003820183905560048201839055600582018390556006820183905560078201805490911690556008015560c0830151909150421015610c9f57600160056000828254610c52919061142a565b90915550506001600160a01b038516600090815260066020908152604080832060045484526001018252909120805460ff19169055820151610c9490826111ec565b935093505050915091565b600160056000828254610cb2919061142a565b90915550506001600160a01b0394909416600090815260066020908152604080832060045484526001018252909120805460ff19169055015193915050565b6000600254600014610d1e5762093a8060025442610d0f919061142a565b610d19919061146f565b905090565b50600090565b610d2c611173565b60c8811115610da35760405162461bcd60e51b815260206004820152602c60248201527f41697264726f702050657263656e746167652063616e6e6f742065786365656460448201527f2032302070657263656e742e00000000000000000000000000000000000000006064820152608401610454565b60018190556040518181527fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e90602001610ac5565b610de0611173565b60008311610e305760405162461bcd60e51b815260206004820152601460248201527f43616e6e6f74207374616b65206e6f7468696e670000000000000000000000006044820152606401610454565b6001600160a01b03841660009081526009602052604090206001015415610e995760405162461bcd60e51b815260206004820152601060248201527f557365722069732061207374616b6572000000000000000000000000000000006044820152606401610454565b600160056000828254610eac9190611441565b90915550506001600160a01b0384166000818152600660209081526040808320805460ff19166001179055805160e0810182529384529083018690524290830181905260608301829052608083019190915260a082018390529060c08101610f148386611441565b90526001600160a01b038681166000818152600960209081526040918290208551815473ffffffffffffffffffffffffffffffffffffffff1916951694909417845584015160018401558301516002830155606083015160038301556080830151600483015560a0830151600583015560c0909201516006909101557fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8583610fbd8188611441565b6040805193845260208401929092529082015260600160405180910390a25050505050565b610fea611173565b610ff2610ffe565b6003805460ff19169055565b60035460ff166110505760405162461bcd60e51b815260206004820152601760248201527f566f74696e67206973206e6f7420617661696c61626c650000000000000000006044820152606401610454565b565b600081116110a25760405162461bcd60e51b815260206004820152600e60248201527f4e6f205374616b6520466f756e640000000000000000000000000000000000006044820152606401610454565b50565b60008160200151600014156110bc57506000919050565b6a52b7d2dcc80cd2e40000006110d58360400151611231565b8360a0015184602001516110e99190611491565b6110f39190611491565b6110fd919061146f565b92915050565b60008061111d611115856000546111cd565b6103e86111e0565b61112c611115856000546111cd565b915091505b9250929050565b60006110fd62093a8061114b844261142a565b906111e0565b60006301dfe2006103e8600154846111699190611491565b6110f3919061146f565b6008546001600160a01b031633146110505760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152606401610454565b60006111d98284611491565b9392505050565b60006111d9828461146f565b600080836111ff57506000905080611131565b60008061120c8686611103565b9150915061121a86836112e3565b61122486836112e3565b9350935050509250929050565b60008082116112825760405162461bcd60e51b815260206004820152601160248201527f4572726f722074696d657374616d7020300000000000000000000000000000006044820152606401610454565b6110fd61128f834261142a565b6112a39069d3c21bcecceda1000000611491565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d700000008152506112ef565b60006111d9828461142a565b600081836113105760405162461bcd60e51b815260040161045491906114b0565b5082848161132057611320611459565b04949350505050565b6040518060600160405280600081526020016000815260200161138b6040518060e0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b80356001600160a01b038116811461095a57600080fd5b6000602082840312156113b957600080fd5b6111d982611390565b6000602082840312156113d457600080fd5b5035919050565b600080600080608085870312156113f157600080fd5b6113fa85611390565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561143c5761143c611414565b500390565b6000821982111561145457611454611414565b500190565b634e487b7160e01b600052601260045260246000fd5b60008261148c57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114ab576114ab611414565b500290565b600060208083528351808285015260005b818110156114dd578581018301518582016040015282016114c1565b818111156114ef576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122030bc4d7db5716312107ccfcb7d3f0a860d8c12e037ea733196a244518032427364736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5DBDF1B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3EC138D GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xA7771EE3 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F5300FF GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x671D2B75 GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D77B00B GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x699 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x19A PUSH2 0x716 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x19A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x19A PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x398 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x21C JUMP JUMPDEST PUSH2 0x2A6 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x19A PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F7420766F7465642079657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x4F4 SWAP1 DUP5 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x503 PUSH2 0x1329 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x6 DUP6 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE SWAP1 DUP4 MSTORE PUSH1 0x7 DUP5 ADD SLOAD SWAP1 SWAP2 AND DUP3 DUP7 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD DUP2 DUP5 ADD MSTORE DUP3 MLOAD SWAP2 DUP3 ADD DUP4 MSTORE DUP5 DUP3 MSTORE DUP2 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 ADD MLOAD PUSH2 0x5AF SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BE DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 PUSH2 0x5E7 DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x1103 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5F6 DUP2 DUP4 PUSH2 0x1441 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x60A DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1138 JUMP JUMPDEST GT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 PUSH2 0x623 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 ADD MSTORE POP PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP4 ADD DUP1 MLOAD PUSH1 0x60 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD ADD MLOAD DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66A PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720697320616C72656164792072756E6E696E6700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4F4 SWAP1 DUP5 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x71E PUSH2 0xFFE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x782 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520766F746564206265666F72650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x4F4 SWAP1 DUP5 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x843 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x140 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x7 DUP4 ADD SLOAD SWAP1 SWAP6 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x8 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH2 0x8DB SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1138 JUMP JUMPDEST GT PUSH2 0x937 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D61626C65206F6E63652061207765656B0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x956 SWAP1 PUSH2 0x1151 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x971 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD GT PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F74657273000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DC PUSH2 0x9D5 PUSH1 0x5 SLOAD PUSH1 0x5 PUSH2 0x11CD JUMP JUMPDEST PUSH1 0xA PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0xA00 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xA10 PUSH2 0x1173 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0xA1E PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x50656E616C7479206665652063616E6E6F742065786365656420332070657263 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E742E00000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB52 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0xBC2 DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x8 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 SWAP2 POP TIMESTAMP LT ISZERO PUSH2 0xC9F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 ADD MLOAD PUSH2 0xC94 SWAP1 DUP3 PUSH2 0x11EC JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCB2 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE ADD MLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 EQ PUSH2 0xD1E JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xD0F SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD2C PUSH2 0x1173 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41697264726F702050657263656E746167652063616E6E6F7420657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2032302070657263656E742E0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0xDE0 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B65206E6F7468696E67000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722069732061207374616B657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD DUP7 SWAP1 MSTORE TIMESTAMP SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0xC0 DUP2 ADD PUSH2 0xF14 DUP4 DUP7 PUSH2 0x1441 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xFBD DUP2 DUP9 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFEA PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xFF2 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x10A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F205374616B6520466F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x10BC JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x10D5 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1231 JUMP JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x10E9 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x10F3 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111D PUSH2 0x1115 DUP6 PUSH1 0x0 SLOAD PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x11E0 JUMP JUMPDEST PUSH2 0x112C PUSH2 0x1115 DUP6 PUSH1 0x0 SLOAD PUSH2 0x11CD JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH3 0x93A80 PUSH2 0x114B DUP5 TIMESTAMP PUSH2 0x142A JUMP JUMPDEST SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH2 0x10F3 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x1491 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x11FF JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x120C DUP7 DUP7 PUSH2 0x1103 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x121A DUP7 DUP4 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x1224 DUP7 DUP4 PUSH2 0x12E3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x454 JUMP JUMPDEST PUSH2 0x10FD PUSH2 0x128F DUP4 TIMESTAMP PUSH2 0x142A JUMP JUMPDEST PUSH2 0x12A3 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1491 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 DUP5 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1310 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x1320 JUMPI PUSH2 0x1320 PUSH2 0x1459 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138B PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x95A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D9 DUP3 PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13FA DUP6 PUSH2 0x1390 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x1414 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1454 JUMPI PUSH2 0x1454 PUSH2 0x1414 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x148C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14AB JUMPI PUSH2 0x14AB PUSH2 0x1414 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14DD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x14C1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14EF JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xBC 0x4D PUSH30 0xB5716312107CCFCB7D3F0A860D8C12E037EA733196A24451803242736473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "162:12030:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11307:356;;;:::i;:::-;;8312:1096;;;:::i;:::-;;;;;;168:4:2;210:3;199:9;195:19;187:27;;247:6;241:13;230:9;223:32;311:4;303:6;299:17;293:24;286:4;275:9;271:20;264:54;365:4;357:6;353:17;347:24;-1:-1:-1;;;;;419:12:2;413:19;409:68;402:4;391:9;387:20;380:98;538:4;524:12;520:23;514:30;509:2;498:9;494:18;487:58;606:4;592:12;588:23;582:30;576:3;565:9;561:19;554:59;674:2;660:12;656:21;650:28;644:3;633:9;629:19;622:57;740:3;726:12;722:22;716:29;710:3;699:9;695:19;688:58;807:3;793:12;789:22;783:29;777:3;766:9;762:19;755:58;874:3;860:12;856:22;850:29;844:3;833:9;829:19;822:58;;14:872;;;;;8312:1096:1;;;;;;;;1719:95;;;;;;:::i;:::-;;:::i;10592:177::-;;;:::i;3458:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3545:12:1;3514:4;3545:12;;;:6;:12;;;;;;;;:24;;3590:9;;3571:29;;3545:24;3571:18;;;:29;;;;;;;3545:24;;;;;3571:29;;;3458:151;;;;;1470:14:2;;1463:22;1445:41;;1529:14;;1522:22;1517:2;1502:18;;1495:50;1418:18;3458:151:1;1283:268:2;663:26:1;;;;;;;;;1702:25:2;;;1690:2;1675:18;663:26:1;1556:177:2;10952:347:1;;;:::i;9715:545::-;;;;;;:::i;:::-;;:::i;11671:412::-;;;:::i;:::-;;;1903:14:2;;1896:22;1878:41;;1866:2;1851:18;11671:412:1;1738:187:2;3617:97:1;;;:::i;527:26::-;;;;;;1822:82;1890:6;;1822:82;;-1:-1:-1;;;;;1890:6:1;;;2076:74:2;;2064:2;2049:18;1822:82:1;1930:226:2;5093:217:1;;;;;;:::i;:::-;;:::i;742:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;696:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10777:167;;;;;;:::i;:::-;;:::i;560:27::-;;;;;;7595:709;;;;;;:::i;:::-;;:::i;:::-;;;;2520:25:2;;;2576:2;2561:18;;2554:34;;;;2493:18;7595:709:1;2346:248:2;487:33:1;;;;;;10268:210;;;:::i;5318:226::-;;;;;;:::i;:::-;;:::i;4074:1011::-;;;;;;:::i;:::-;;:::i;12091:98::-;;;:::i;11307:356::-;1563:20;:18;:20::i;:::-;11380:10:::1;11373:18;::::0;;;:6:::1;:18;::::0;;;;:30;::::1;;:38;;:30:::0;:38:::1;11365:70;;;::::0;-1:-1:-1;;;11365:70:1;;3197:2:2;11365:70:1::1;::::0;::::1;3179:21:2::0;3236:2;3216:18;;;3209:30;3275:21;3255:18;;;3248:49;3314:18;;11365:70:1::1;;;;;;;;;11475:10;11468:18;::::0;;;:6:::1;:18;::::0;;;;;;;11493:9:::1;::::0;11468:35;;:24:::1;::::0;;::::1;:35:::0;;;;;;;::::1;;:43;;;11446:115;;;::::0;-1:-1:-1;;;11446:115:1;;3545:2:2;11446:115:1::1;::::0;::::1;3527:21:2::0;3584:2;3564:18;;;3557:30;3623:24;3603:18;;;3596:52;3665:18;;11446:115:1::1;3343:346:2::0;11446:115:1::1;11599:9;::::0;11574:18:::1;:35:::0;;;11629:10:::1;11574:18;11629:21:::0;11574:18;11629:21;;:26;;11574:24:::1;::::0;:18;11629:26:::1;::::0;11574:24;;11629:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;11307:356:1:o;8312:1096::-;8355:21;;:::i;:::-;8428:10;8389:23;8415:24;;;:12;:24;;;;;;;;8389:50;;;;;;;;;-1:-1:-1;;;;;8389:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8482:32;;;;;;;;;;;;;;;;;8503:10;;8482:32;;;;;;8541:20;;;8525:37;;:15;:37::i;:::-;8575:23;8601:36;8623:7;:13;;;8601:21;:36::i;:::-;8575:62;;8648:15;8708;8680:7;:13;;;:25;;;:43;8676:288;;;8759:22;8800;8840:56;8858:7;:13;;;:20;;;8880:15;8840:17;:56::i;:::-;8740:156;;-1:-1:-1;8740:156:1;-1:-1:-1;8921:31:1;8740:156;;8921:31;:::i;:::-;8911:41;;8725:239;;8676:288;9019:1;8980:36;8995:4;:20;;;8980:14;:36::i;:::-;:40;8976:254;;;9037:15;9055:39;9073:7;:13;;;:20;;;9055:17;:39::i;:::-;9109:13;;;;:31;;:41;-1:-1:-1;8976:254:1;;;9183:13;;;;9217:1;9183:31;;;;:35;8976:254;9242:13;;;;;:23;;:41;;;;9294:15;;;;:25;;;;9353:13;;:20;;9330:43;;9242:7;8312:1096;-1:-1:-1;;8312:1096:1:o;1719:95::-;1248:9;:7;:9::i;:::-;1792:6:::1;:14:::0;;-1:-1:-1;;1792:14:1::1;-1:-1:-1::0;;;;;1792:14:1;;;::::1;::::0;;;::::1;::::0;;1719:95::o;10592:177::-;1248:9;:7;:9::i;:::-;10653:13:::1;::::0;::::1;;:22;10645:60;;;::::0;-1:-1:-1;;;10645:60:1;;4348:2:2;10645:60:1::1;::::0;::::1;4330:21:2::0;4387:2;4367:18;;;4360:30;4426:27;4406:18;;;4399:55;4471:18;;10645:60:1::1;4146:349:2::0;10645:60:1::1;10716:13;:20:::0;;-1:-1:-1;;10716:20:1::1;10732:4;10716:20:::0;;::::1;::::0;;;10747:9:::1;:14:::0;;10716:13:::1;::::0;10747:14:::1;::::0;10732:4;;10747:14:::1;:::i;10952:347::-:0;1563:20;:18;:20::i;:::-;11018:10:::1;11011:18;::::0;;;:6:::1;:18;::::0;;;;:30;::::1;;:38;;:30:::0;:38:::1;11003:70;;;::::0;-1:-1:-1;;;11003:70:1;;3197:2:2;11003:70:1::1;::::0;::::1;3179:21:2::0;3236:2;3216:18;;;3209:30;3275:21;3255:18;;;3248:49;3314:18;;11003:70:1::1;2995:343:2::0;11003:70:1::1;11113:10;11106:18;::::0;;;:6:::1;:18;::::0;;;;;;;11131:9:::1;::::0;11106:35;;:24:::1;;:35:::0;;;;;;::::1;;:44;11084:115;;;::::0;-1:-1:-1;;;11084:115:1;;4702:2:2;11084:115:1::1;::::0;::::1;4684:21:2::0;4741:2;4721:18;;;4714:30;4780:23;4760:18;;;4753:51;4821:18;;11084:115:1::1;4500:345:2::0;11084:115:1::1;11219:10;11212:18;::::0;;;:6:::1;:18;::::0;;;;;;;11237:9:::1;::::0;;11212:35;;11250:4:::1;11212:24:::0;;::::1;:35:::0;;;;;:42;;-1:-1:-1;;11212:42:1::1;::::0;::::1;::::0;;11276:9;11265:21;;:10:::1;:21:::0;;;;;:26;;11250:4;;11265:21;;:26:::1;::::0;11250:4;;11265:26:::1;:::i;9715:545::-:0;9820:7;1248:9;:7;:9::i;:::-;-1:-1:-1;;;;;9878:18:1;;::::1;9845:30;9878:18:::0;;;:12:::1;:18;::::0;;;;;;;;9845:51;;;;;;;;;;::::1;;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;::::1;;::::0;;;;;;;;;9909:41:::1;::::0;:15:::1;:41::i;:::-;10031:1;9985:43;10000:11;:27;;;9985:14;:43::i;:::-;:47;9963:118;;;::::0;-1:-1:-1;;;9963:118:1;;5052:2:2;9963:118:1::1;::::0;::::1;5034:21:2::0;5091:2;5071:18;;;5064:30;5130:23;5110:18;;;5103:51;5171:18;;9963:118:1::1;4850:345:2::0;9963:118:1::1;10094:17:::0;;10132:1:::1;10094:35;::::0;;::::1;:39:::0;10174:15:::1;10144:27;::::0;::::1;:45:::0;10227:17;;:24:::1;;::::0;10209:43:::1;::::0;:17:::1;:43::i;:::-;10202:50;;;1268:1;9715:545:::0;;;:::o;11671:412::-;11793:4;1248:9;:7;:9::i;:::-;1563:20:::1;:18;:20::i;:::-;11837:1:::2;11823:11;;:15;11815:45;;;::::0;-1:-1:-1;;;11815:45:1;;5402:2:2;11815:45:1::2;::::0;::::2;5384:21:2::0;5441:2;5421:18;;;5414:30;5480:19;5460:18;;;5453:47;5517:18;;11815:45:1::2;5200:341:2::0;11815:45:1::2;11871:19;11893:46;11906:28;11919:11;;11932:1;11906:12;:28::i;:::-;11936:2;11893:12;:46::i;:::-;11967:9;::::0;11956:21:::2;::::0;;;:10:::2;:21;::::0;;;;;11871:68;;-1:-1:-1;11956:35:1;-1:-1:-1;11952:124:1::2;;;12015:4;12008:11;;;11671:412:::0;:::o;11952:124::-:2;12059:5;12052:12;;;11671:412:::0;:::o;3617:97::-;1248:9;:7;:9::i;:::-;3691:15:::1;3676:12;:30:::0;3617:97::o;5093:217::-;1248:9;:7;:9::i;:::-;5183:2:::1;5173:6;:12;;5165:61;;;::::0;-1:-1:-1;;;5165:61:1;;5748:2:2;5165:61:1::1;::::0;::::1;5730:21:2::0;5787:2;5767:18;;;5760:30;5826:34;5806:18;;;5799:62;5897:6;5877:18;;;5870:34;5921:19;;5165:61:1::1;5546:400:2::0;5165:61:1::1;5237:18;:27:::0;;;5280:22:::1;::::0;1702:25:2;;;5280:22:1::1;::::0;1690:2:2;1675:18;5280:22:1::1;;;;;;;;5093:217:::0;:::o;10777:167::-;10829:4;-1:-1:-1;;;;;10854:18:1;;10846:46;;;;-1:-1:-1;;;10846:46:1;;6153:2:2;10846:46:1;;;6135:21:2;6192:2;6172:18;;;6165:30;6231:17;6211:18;;;6204:45;6266:18;;10846:46:1;5951:339:2;10846:46:1;-1:-1:-1;;;;;;10912:12:1;;;;;:6;:12;;;;;:24;;;;10777:167::o;7595:709::-;7687:7;7696;1248:9;:7;:9::i;:::-;-1:-1:-1;;;;;7821:18:1;;::::1;7795:23;7821:18:::0;;;:12:::1;:18;::::0;;;;;;;7795:50;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;;::::0;;;;;7875:33:::1;7795:50:::0;7875:21:::1;:33::i;:::-;-1:-1:-1::0;;;;;7928:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;7921:25;;-1:-1:-1;;7921:25:1;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;7963:22:::1;::::0;::::1;::::0;7858:50;;-1:-1:-1;7988:15:1::1;-1:-1:-1::0;7959:217:1::1;;;8035:1;8020:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8058:12:1;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;8077:9:::1;::::0;8058:29;;:18:::1;;:29:::0;;;;;8051:36;;-1:-1:-1;;8051:36:1::1;::::0;;8138:17;::::1;::::0;8109:55:::1;::::0;8157:6;8109:28:::1;:55::i;:::-;8102:62;;;;;;7595:709:::0;;;:::o;7959:217::-:1;8203:1;8188:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8222:12:1;;;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;8241:9:::1;::::0;8222:29;;:18:::1;;:29:::0;;;;;8215:36;;-1:-1:-1;;8215:36:1::1;::::0;;8270:17:::1;::::0;;7595:709;-1:-1:-1;;7595:709:1:o;10268:210::-;10312:7;10336:12;;10352:1;10336:17;10332:139;;10412:6;10396:12;;10378:15;:30;;;;:::i;:::-;10377:41;;;;:::i;:::-;10370:48;;10268:210;:::o;10332:139::-;-1:-1:-1;10458:1:1;;10268:210::o;5318:226::-;1248:9;:7;:9::i;:::-;5415:3:::1;5405:6;:13;;5397:70;;;::::0;-1:-1:-1;;;5397:70:1;;6965:2:2;5397:70:1::1;::::0;::::1;6947:21:2::0;7004:2;6984:18;;;6977:30;7043:34;7023:18;;;7016:62;7114:14;7094:18;;;7087:42;7146:19;;5397:70:1::1;6763:408:2::0;5397:70:1::1;5478:11;:20:::0;;;5514:22:::1;::::0;1702:25:2;;;5514:22:1::1;::::0;1690:2:2;1675:18;5514:22:1::1;1556:177:2::0;4074:1011:1;1248:9;:7;:9::i;:::-;4305:1:::1;4296:6;:10;4288:43;;;::::0;-1:-1:-1;;;4288:43:1;;7378:2:2;4288:43:1::1;::::0;::::1;7360:21:2::0;7417:2;7397:18;;;7390:30;7456:22;7436:18;;;7429:50;7496:18;;4288:43:1::1;7176:344:2::0;4288:43:1::1;-1:-1:-1::0;;;;;4350:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:31:::1;;::::0;:36;4342:65:::1;;;::::0;-1:-1:-1;;;4342:65:1;;7727:2:2;4342:65:1::1;::::0;::::1;7709:21:2::0;7766:2;7746:18;;;7739:30;7805:18;7785;;;7778:46;7841:18;;4342:65:1::1;7525:340:2::0;4342:65:1::1;4435:1;4420:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4447:12:1;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;:31;;-1:-1:-1;;4447:31:1::1;4474:4;4447:31;::::0;;4773:177;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;4599:15:::1;4773:177:::0;;;;;;;;;;;;;;;;;;;;;;;;;4599:15;4773:177;;;4915:23:::1;4599:15:::0;4915:11;:23:::1;:::i;:::-;4773:177:::0;;-1:-1:-1;;;;;4746:18:1;;::::1;;::::0;;;:12:::1;:18;::::0;;;;;;;;:204;;;;-1:-1:-1;;4746:204:1::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;4746:204:1;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5019:58:::1;5032:6:::0;5040:9;5052:23:::1;5040:9:::0;5052:11;:23:::1;:::i;:::-;5019:58;::::0;;8072:25:2;;;8128:2;8113:18;;8106:34;;;;8156:18;;;8149:34;8060:2;8045:18;5019:58:1::1;;;;;;;4222:863;4074:1011:::0;;;;:::o;12091:98::-;1248:9;:7;:9::i;:::-;1563:20:::1;:18;:20::i;:::-;12160:13:::2;:21:::0;;-1:-1:-1;;12160:21:1::2;::::0;;12091:98::o;1404:112::-;1467:13;;;;1459:49;;;;-1:-1:-1;;;1459:49:1;;8396:2:2;1459:49:1;;;8378:21:2;8435:2;8415:18;;;8408:30;8474:25;8454:18;;;8447:53;8517:18;;1459:49:1;8194:347:2;1459:49:1;1404:112::o;1285:111::-;1368:1;1359:6;:10;1351:37;;;;-1:-1:-1;;;1351:37:1;;8748:2:2;1351:37:1;;;8730:21:2;8787:2;8767:18;;;8760:30;8826:16;8806:18;;;8799:44;8860:18;;1351:37:1;8546:338:2;1351:37:1;1285:111;:::o;5973:450::-;6079:7;6108:10;:17;;;6129:1;6108:22;6104:63;;;-1:-1:-1;6154:1:1;;5973:450;-1:-1:-1;5973:450:1:o;6104:63::-;6411:4;6364:43;6390:10;:16;;;6364:25;:43::i;:::-;6324:10;:20;;;6287:10;:17;;;:57;;;;:::i;:::-;:120;;;;:::i;:::-;6286:129;;;;:::i;:::-;6266:149;5973:450;-1:-1:-1;;5973:450:1:o;6431:319::-;6540:7;6549;6596:60;6609:40;6622:6;6630:18;;6609:12;:40::i;:::-;6651:4;6596:12;:60::i;:::-;6671;6684:40;6697:6;6705:18;;6684:12;:40::i;6671:60::-;6574:168;;;;6431:319;;;;;;:::o;3722:134::-;3784:7;3811:37;3841:6;3812:23;3830:5;3812:15;:23;:::i;:::-;3811:29;;:37::i;9522:185::-;9620:7;9691:8;9683:4;9668:11;;9654;:25;;;;:::i;:::-;9653:34;;;;:::i;1109:99::-;1175:6;;-1:-1:-1;;;;;1175:6:1;1161:10;:20;1153:47;;;;-1:-1:-1;;;1153:47:1;;9264:2:2;1153:47:1;;;9246:21:2;9303:2;9283:18;;;9276:30;9342:16;9322:18;;;9315:44;9376:18;;1153:47:1;9062:338:2;3451:96:0;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:0:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;6758:483:1:-;6878:7;;6916:11;6912:57;;-1:-1:-1;6952:1:1;;-1:-1:-1;6952:1:1;6944:13;;6912:57;6982:22;7006;7032:70;7064:6;7085;7032:17;:70::i;:::-;6981:121;;;;7135:36;7148:6;7156:14;7135:12;:36::i;:::-;7186;7199:6;7207:14;7186:12;:36::i;:::-;7113:120;;;;;;6758:483;;;;;:::o;5552:413::-;5652:7;5693:1;5685:5;:9;5677:39;;;;-1:-1:-1;;;5677:39:1;;9607:2:2;5677:39:1;;;9589:21:2;9646:2;9626:18;;;9619:30;9685:19;9665:18;;;9658:47;9722:18;;5677:39:1;9405:341:2;5677:39:1;5802:155;5834:23;5852:5;5834:15;:23;:::i;:::-;5833:32;;5861:4;5833:32;:::i;:::-;5884:8;5802:155;;;;;;;;;;;;;;;;;:12;:155::i;3108:96:0:-;3166:7;3192:5;3196:1;3192;:5;:::i;5660:230::-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:0;;;;;;;;:::i;:::-;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;891:196:2:-;959:20;;-1:-1:-1;;;;;1008:54:2;;998:65;;988:93;;1077:1;1074;1067:12;1092:186;1151:6;1204:2;1192:9;1183:7;1179:23;1175:32;1172:52;;;1220:1;1217;1210:12;1172:52;1243:29;1262:9;1243:29;:::i;2161:180::-;2220:6;2273:2;2261:9;2252:7;2248:23;2244:32;2241:52;;;2289:1;2286;2279:12;2241:52;-1:-1:-1;2312:23:2;;2161:180;-1:-1:-1;2161:180:2:o;2599:391::-;2685:6;2693;2701;2709;2762:3;2750:9;2741:7;2737:23;2733:33;2730:53;;;2779:1;2776;2769:12;2730:53;2802:29;2821:9;2802:29;:::i;:::-;2792:39;2878:2;2863:18;;2850:32;;-1:-1:-1;2929:2:2;2914:18;;2901:32;;2980:2;2965:18;2952:32;;-1:-1:-1;2599:391:2;-1:-1:-1;;;2599:391:2:o;3694:184::-;-1:-1:-1;;;3743:1:2;3736:88;3843:4;3840:1;3833:15;3867:4;3864:1;3857:15;3883:125;3923:4;3951:1;3948;3945:8;3942:34;;;3956:18;;:::i;:::-;-1:-1:-1;3993:9:2;;3883:125::o;4013:128::-;4053:3;4084:1;4080:6;4077:1;4074:13;4071:39;;;4090:18;;:::i;:::-;-1:-1:-1;4126:9:2;;4013:128::o;6295:184::-;-1:-1:-1;;;6344:1:2;6337:88;6444:4;6441:1;6434:15;6468:4;6465:1;6458:15;6484:274;6524:1;6550;6540:189;;-1:-1:-1;;;6582:1:2;6575:88;6686:4;6683:1;6676:15;6714:4;6711:1;6704:15;6540:189;-1:-1:-1;6743:9:2;;6484:274::o;8889:168::-;8929:7;8995:1;8991;8987:6;8983:14;8980:1;8977:21;8972:1;8965:9;8958:17;8954:45;8951:71;;;9002:18;;:::i;:::-;-1:-1:-1;9042:9:2;;8889:168::o;9751:597::-;9863:4;9892:2;9921;9910:9;9903:21;9953:6;9947:13;9996:6;9991:2;9980:9;9976:18;9969:34;10021:1;10031:140;10045:6;10042:1;10039:13;10031:140;;;10140:14;;;10136:23;;10130:30;10106:17;;;10125:2;10102:26;10095:66;10060:10;;10031:140;;;10189:6;10186:1;10183:13;10180:91;;;10259:1;10254:2;10245:6;10234:9;10230:22;10226:31;10219:42;10180:91;-1:-1:-1;10332:2:2;10311:15;-1:-1:-1;;10307:29:2;10292:45;;;;10339:2;10288:54;;9751:597;-1:-1:-1;;;9751:597:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1087000",
								"executionCost": "69574",
								"totalCost": "1156574"
							},
							"external": {
								"airdropRate()": "2384",
								"airdropSince()": "2384",
								"airdropWeek()": "4658",
								"changeAirdropPercentage(uint256)": "25635",
								"changePenaltyFee(uint256)": "25648",
								"changeTalaxAddress(address)": "26769",
								"claimAirdrop(address)": "infinite",
								"getOwner()": "2347",
								"getVoters(address)": "6968",
								"getVotingResult()": "infinite",
								"hasStake()": "infinite",
								"isVoter(address)": "2668",
								"retractVote()": "35392",
								"stake(address,uint256,uint256,uint256)": "infinite",
								"stakingPenaltyRate()": "2362",
								"startAirdropSince()": "24480",
								"startVoting()": "53030",
								"stopVoting()": "infinite",
								"totalVoters()": "2341",
								"vote()": "61874",
								"votedUsers(uint256)": "2528",
								"voters(address)": "2576",
								"withdrawStake(address)": "infinite"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculatePenalty(uint256,uint256)": "infinite",
								"_calculateStakeReward(struct Stakable.Stake memory)": "infinite",
								"_calculateStakingDuration(uint256)": "infinite",
								"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
								"_calculateWeek(uint256)": "193",
								"_checkUserStake(uint256)": "infinite",
								"_checkVotingStatus()": "infinite",
								"isTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 162,
									"end": 12192,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 819,
									"end": 995,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 995,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 819,
									"end": 995,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 819,
									"end": 995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 928,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 907,
									"end": 925,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 930,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 955,
									"end": 957,
									"name": "PUSH",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 941,
									"end": 952,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 957,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 968,
									"end": 974,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 968,
									"end": 987,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 968,
									"end": 987,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 968,
									"end": 987,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 977,
									"end": 987,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 968,
									"end": 987,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 968,
									"end": 987,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 968,
									"end": 987,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 12192,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030bc4d7db5716312107ccfcb7d3f0a860d8c12e037ea733196a244518032427364736f6c634300080b0033",
									".code": [
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "C23A5CEA"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "D5DBDF1B"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "D5DBDF1B"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "F93D4F8A"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "FAB2F86B"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "C23A5CEA"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "CB79C2E1"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "CBB3E152"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "A3EC138D"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "A3EC138D"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "A7771EE3"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "B87DA76D"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "8C63F97F"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "A143A5F2"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "5F5300FF"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "671D2B75"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "671D2B75"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "71E3DB87"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "8891CF0D"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "5F5300FF"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "632A9A52"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "65F8C6C5"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "1D77B00B"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "1D77B00B"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "1EC6B60A"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "2D15CC04"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "70C8B74"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "10486B6A"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 12192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 168,
											"end": 172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 213,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 199,
											"end": 208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 195,
											"end": 214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 187,
											"end": 214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 247,
											"end": 253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 241,
											"end": 254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 230,
											"end": 239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 223,
											"end": 255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 311,
											"end": 315,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 299,
											"end": 316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 293,
											"end": 317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 275,
											"end": 284,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 264,
											"end": 318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 353,
											"end": 370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 347,
											"end": 371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 419,
											"end": 431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 409,
											"end": 477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 402,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 400,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 387,
											"end": 407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 380,
											"end": 478,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 538,
											"end": 542,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 520,
											"end": 543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 487,
											"end": 545,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 606,
											"end": 610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 582,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 576,
											"end": 579,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 561,
											"end": 580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 554,
											"end": 613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 660,
											"end": 672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 678,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 644,
											"end": 647,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 633,
											"end": 642,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 629,
											"end": 648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 740,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 726,
											"end": 738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 716,
											"end": 745,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 710,
											"end": 713,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 695,
											"end": 714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 688,
											"end": 746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 810,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 793,
											"end": 805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 789,
											"end": 811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 783,
											"end": 812,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 777,
											"end": 780,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 762,
											"end": 781,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 755,
											"end": 813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 874,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 860,
											"end": 872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 850,
											"end": 879,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 844,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 833,
											"end": 842,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 829,
											"end": 848,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 822,
											"end": 880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 822,
											"end": 880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 886,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14,
											"end": 886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 886,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3590,
											"end": 3599,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 3599,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1486,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1522,
											"end": 1544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1519,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1545,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3458,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1283,
											"end": 1551,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 689,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 663,
											"end": 689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 663,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 663,
											"end": 689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 663,
											"end": 689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 663,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 663,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1556,
											"end": 1733,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1917,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1918,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1738,
											"end": 1925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 527,
											"end": 553,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 527,
											"end": 553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 527,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 527,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 527,
											"end": 553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 527,
											"end": 553,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1822,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2150,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1930,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 742,
											"end": 787,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 696,
											"end": 735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 735,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 560,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 560,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 560,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 560,
											"end": 587,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 560,
											"end": 587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2545,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2545,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2545,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2346,
											"end": 2594,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11390,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11379,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11403,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11403,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11373,
											"end": 11403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11403,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11373,
											"end": 11411,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3238,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3209,
											"end": 3239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520617265206E6F74206120766F74657200000000000000000000000000"
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3248,
											"end": 3297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11365,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11475,
											"end": 11485,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11474,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11486,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11493,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11493,
											"end": 11502,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11468,
											"end": 11503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11511,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11511,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11511,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3647,
											"name": "PUSH",
											"source": 2,
											"value": "596F752068617665206E6F7420766F7465642079657400000000000000000000"
										},
										{
											"begin": 3603,
											"end": 3621,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3603,
											"end": 3621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3665,
											"end": 3683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3343,
											"end": 3689,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11446,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11599,
											"end": 11608,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11599,
											"end": 11608,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11639,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 11574,
											"end": 11592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11629,
											"end": 11650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11629,
											"end": 11650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11650,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11574,
											"end": 11598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11307,
											"end": 11663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8355,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8438,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8427,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8415,
											"end": 8439,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8513,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8525,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8623,
											"end": 8630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8601,
											"end": 8637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8601,
											"end": 8637,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 8601,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8723,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8680,
											"end": 8693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8705,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8680,
											"end": 8705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8723,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 8964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8676,
											"end": 8964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8800,
											"end": 8822,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8858,
											"end": 8865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8840,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8840,
											"end": 8896,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8840,
											"end": 8896,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8840,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8740,
											"end": 8896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8921,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8740,
											"end": 8896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8921,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8921,
											"end": 8952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8921,
											"end": 8952,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8921,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8952,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8725,
											"end": 8964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8725,
											"end": 8964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 8964,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8676,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8995,
											"end": 9015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8980,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9073,
											"end": 9080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9073,
											"end": 9086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9086,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9055,
											"end": 9094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9055,
											"end": 9094,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9055,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 9122,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9109,
											"end": 9140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9214,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9183,
											"end": 9214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8976,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9242,
											"end": 9255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9255,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9265,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9242,
											"end": 9265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9294,
											"end": 9309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 9408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10592,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10653,
											"end": 10666,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4453,
											"name": "PUSH",
											"source": 2,
											"value": "566F74696E6720697320616C72656164792072756E6E696E6700000000000000"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4146,
											"end": 4495,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10645,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10736,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10716,
											"end": 10729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10747,
											"end": 10761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10952,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11028,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11017,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11041,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11011,
											"end": 11041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11049,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11049,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11041,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11011,
											"end": 11049,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3238,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3209,
											"end": 3239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520617265206E6F74206120766F74657200000000000000000000000000"
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3248,
											"end": 3297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3314,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2995,
											"end": 3338,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11003,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11123,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11140,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11131,
											"end": 11140,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11130,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11106,
											"end": 11130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11106,
											"end": 11141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11106,
											"end": 11150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4743,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4714,
											"end": 4744,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4780,
											"end": 4803,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206861766520766F746564206265666F72650000000000000000000000"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4500,
											"end": 4845,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11084,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11219,
											"end": 11229,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11230,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11246,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11237,
											"end": 11246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11246,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11212,
											"end": 11236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11276,
											"end": 11285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11275,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11265,
											"end": 11291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11250,
											"end": 11254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 11265,
											"end": 11291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 9896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9909,
											"end": 9950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 9909,
											"end": 9950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9909,
											"end": 9950,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 9909,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9985,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10000,
											"end": 10011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10027,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9985,
											"end": 10028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9985,
											"end": 10028,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9985,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 10032,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5153,
											"name": "PUSH",
											"source": 2,
											"value": "436C61696D61626C65206F6E63652061207765656B0000000000000000000000"
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5103,
											"end": 5154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4850,
											"end": 5195,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 9963,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10111,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10094,
											"end": 10129,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10094,
											"end": 10129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10189,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10227,
											"end": 10244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10227,
											"end": 10244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10227,
											"end": 10251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10227,
											"end": 10251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10227,
											"end": 10251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 10260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11837,
											"end": 11838,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11823,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11823,
											"end": 11834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11838,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5443,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5414,
											"end": 5444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5499,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420656E6F75676820766F74657273000000000000000000000000000000"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5200,
											"end": 5541,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11815,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11906,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11919,
											"end": 11930,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11919,
											"end": 11930,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11906,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 11906,
											"end": 11934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11906,
											"end": 11934,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11906,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11936,
											"end": 11938,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 11893,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 11893,
											"end": 11939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11893,
											"end": 11939,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11893,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11976,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11967,
											"end": 11976,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11966,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11956,
											"end": 11991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 11952,
											"end": 12076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11952,
											"end": 12076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12019,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12008,
											"end": 12019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11952,
											"end": 12076,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11952,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 12064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12052,
											"end": 12064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 12083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3706,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3676,
											"end": 3706,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3714,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 5173,
											"end": 5179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5185,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5767,
											"end": 5785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5767,
											"end": 5785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5767,
											"end": 5785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5826,
											"end": 5860,
											"name": "PUSH",
											"source": 2,
											"value": "50656E616C7479206665652063616E6E6F742065786365656420332070657263"
										},
										{
											"begin": 5806,
											"end": 5824,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5806,
											"end": 5824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "656E742E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5921,
											"end": 5940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5546,
											"end": 5946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5165,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5264,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "CFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9"
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5302,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10854,
											"end": 10872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10854,
											"end": 10872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6231,
											"end": 6248,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6266,
											"end": 6284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5951,
											"end": 6290,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10846,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10918,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10924,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10936,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10912,
											"end": 10936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10944,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7833,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7795,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7875,
											"end": 7908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7875,
											"end": 7908,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7875,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7940,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7946,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8003,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 7959,
											"end": 8176,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7959,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7959,
											"end": 8176,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8036,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8020,
											"end": 8031,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8020,
											"end": 8031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8036,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8064,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8077,
											"end": 8086,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8087,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8051,
											"end": 8087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8051,
											"end": 8087,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8109,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7959,
											"end": 8176,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7959,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8204,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8188,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8188,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8204,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8228,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8240,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8222,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8251,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8215,
											"end": 8251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8251,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7595,
											"end": 8304,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10336,
											"end": 10348,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10353,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10332,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 10332,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10418,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 10396,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10396,
											"end": 10408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10393,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 10378,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 10377,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10332,
											"end": 10471,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 10332,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10458,
											"end": 10459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10458,
											"end": 10459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10268,
											"end": 10478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5318,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 5405,
											"end": 5411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5418,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6967,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7006,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 6984,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6984,
											"end": 7002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6984,
											"end": 7002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 7007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7043,
											"end": 7077,
											"name": "PUSH",
											"source": 2,
											"value": "41697264726F702050657263656E746167652063616E6E6F7420657863656564"
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7016,
											"end": 7078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7114,
											"end": 7128,
											"name": "PUSH",
											"source": 2,
											"value": "2032302070657263656E742E0000000000000000000000000000000000000000"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7165,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7146,
											"end": 7165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6763,
											"end": 7171,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5498,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "PUSH",
											"source": 1,
											"value": "CC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E"
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1556,
											"end": 1733,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4306,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH",
											"source": 2,
											"value": "43616E6E6F74207374616B65206E6F7468696E67000000000000000000000000"
										},
										{
											"begin": 7436,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7436,
											"end": 7454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7429,
											"end": 7479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7496,
											"end": 7514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7176,
											"end": 7520,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4288,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4350,
											"end": 4381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4381,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7709,
											"end": 7730,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "PUSH",
											"source": 2,
											"value": "557365722069732061207374616B657200000000000000000000000000000000"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7778,
											"end": 7824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7525,
											"end": 7865,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4342,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4420,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4420,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4453,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4478,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4478,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4478,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4447,
											"end": 4478,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4478,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4614,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4599,
											"end": 4614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4758,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4950,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "PUSH",
											"source": 1,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5063,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8097,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8072,
											"end": 8097,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8072,
											"end": 8097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8128,
											"end": 8130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8140,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8140,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8140,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8149,
											"end": 8183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5077,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4222,
											"end": 5085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 5085,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12160,
											"end": 12181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12181,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12160,
											"end": 12181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12181,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1404,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1467,
											"end": 1480,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1467,
											"end": 1480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8435,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8408,
											"end": 8438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8474,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "566F74696E67206973206E6F7420617661696C61626C65000000000000000000"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8447,
											"end": 8500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8194,
											"end": 8541,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1459,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1285,
											"end": 1396,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1285,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1369,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8760,
											"end": 8790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8842,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F205374616B6520466F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8799,
											"end": 8843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8860,
											"end": 8878,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8860,
											"end": 8878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8546,
											"end": 8884,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1351,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1396,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5973,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5973,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6108,
											"end": 6125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5973,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6104,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 6364,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6390,
											"end": 6400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6406,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6364,
											"end": 6407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6407,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6364,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6297,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6287,
											"end": 6304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6304,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6287,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6287,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6286,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 6423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5973,
											"end": 6423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6609,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6609,
											"end": 6649,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6609,
											"end": 6649,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6609,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 6596,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6596,
											"end": 6656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 6656,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6596,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6671,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6684,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6684,
											"end": 6724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6731,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6671,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3722,
											"end": 3856,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3722,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 3812,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3830,
											"end": 3835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3827,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3812,
											"end": 3835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3812,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3811,
											"end": 3848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9522,
											"end": 9707,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 9522,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9699,
											"name": "PUSH",
											"source": 1,
											"value": "1DFE200"
										},
										{
											"begin": 9683,
											"end": 9687,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 9668,
											"end": 9679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9668,
											"end": 9679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9665,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 9654,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 9653,
											"end": 9687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 9653,
											"end": 9687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1109,
											"end": 1208,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1109,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1181,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9303,
											"end": 9305,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9283,
											"end": 9301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9276,
											"end": 9306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9342,
											"end": 9358,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9376,
											"end": 9394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9062,
											"end": 9400,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6912,
											"end": 6969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6944,
											"end": 6957,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6969,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6912,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6982,
											"end": 7004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7032,
											"end": 7102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7032,
											"end": 7102,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7032,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 7102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7170,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7135,
											"end": 7171,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7135,
											"end": 7171,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7135,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7221,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7186,
											"end": 7222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7186,
											"end": 7222,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7186,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7233,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7233,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 7241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5552,
											"end": 5965,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5552,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5694,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9646,
											"end": 9648,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9704,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F722074696D657374616D702030000000000000000000000000000000"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9658,
											"end": 9705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9740,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9722,
											"end": 9740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9405,
											"end": 9746,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5677,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5852,
											"end": 5857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5849,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5833,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5833,
											"end": 5865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5865,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 5833,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 5833,
											"end": 5865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5833,
											"end": 5865,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5833,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5884,
											"end": 5892,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5802,
											"end": 5957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "125"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 891,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 891,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1008,
											"end": 1062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1063,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 988,
											"end": 1081,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1079,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1278,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1092,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1202,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1207,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1172,
											"end": 1224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1172,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 1262,
											"end": 1271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 1243,
											"end": 1272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2161,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2276,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2291,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 2990,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2599,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2765,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2760,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2766,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 2730,
											"end": 2783,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2783,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 2730,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2831,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2882,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2882,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2990,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2990,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3694,
											"end": 3878,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3694,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3833,
											"end": 3848,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3864,
											"end": 3865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3872,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4008,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3883,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3953,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 3942,
											"end": 3976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 4008,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4086,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 4087,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4110,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 4071,
											"end": 4110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4126,
											"end": 4135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4126,
											"end": 4135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4141,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6295,
											"end": 6479,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6295,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6344,
											"end": 6345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6448,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6441,
											"end": 6442,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6468,
											"end": 6472,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6465,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6484,
											"end": 6758,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6484,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6540,
											"end": 6729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6582,
											"end": 6583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6686,
											"end": 6690,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6683,
											"end": 6684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6676,
											"end": 6691,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6718,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6729,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6540,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6743,
											"end": 6752,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6743,
											"end": 6752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6484,
											"end": 6758,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8889,
											"end": 9057,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 8889,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8929,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 8996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8991,
											"end": 8992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 8993,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8983,
											"end": 8997,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8980,
											"end": 8981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 8998,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 8974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8954,
											"end": 8999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9022,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 8951,
											"end": 9022,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 9002,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9042,
											"end": 9051,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8889,
											"end": 9057,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9751,
											"end": 10348,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 9751,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9863,
											"end": 9867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9921,
											"end": 9923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9919,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9903,
											"end": 9924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9953,
											"end": 9959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9947,
											"end": 9960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9991,
											"end": 9993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9980,
											"end": 9989,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9969,
											"end": 10003,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10045,
											"end": 10051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10042,
											"end": 10043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10039,
											"end": 10052,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10140,
											"end": 10154,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10140,
											"end": 10154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10140,
											"end": 10154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10136,
											"end": 10159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10130,
											"end": 10160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10123,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10125,
											"end": 10127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10102,
											"end": 10128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10095,
											"end": 10161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10060,
											"end": 10070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10060,
											"end": 10070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10031,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10183,
											"end": 10196,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 10180,
											"end": 10271,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10245,
											"end": 10251,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10243,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 10252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10226,
											"end": 10257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10219,
											"end": 10261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10271,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 10180,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10334,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10311,
											"end": 10326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10307,
											"end": 10336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10339,
											"end": 10341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10288,
											"end": 10342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10342,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9751,
											"end": 10348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9751,
											"end": 10348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"airdropWeek()": "cbb3e152",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getOwner()": "893d20e8",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"hasStake()": "10486b6a",
							"isVoter(address)": "a7771ee3",
							"retractVote()": "070c8b74",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdropSince()": "71e3db87",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"vote()": "632a9a52",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable_airdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retractVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdropSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"stake(address,uint256,uint256,uint256)\":{\"notice\":\"_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID\"},\"withdrawStake(address)\":{\"notice\":\"withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the acount Will also _calculateStakeReward and reset timer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0xc3b8b1570e26cce84ba6bfc6c96e55ff7981b9e4eabd0b381599d38c57729efd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6cdaac8c6154bc580eb07372ac48cb9262cc9f8e2e68a3b137d1e2ade44568d2\",\"dweb:/ipfs/QmVKN1ScbChYJAEkgScFeS44SAbMvBqrMberUnf27C3TgN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 328,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 330,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropSince",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 336,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 338,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "totalVoters",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 343,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "voters",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Voter)326_storage)"
							},
							{
								"astId": 347,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "votedUsers",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 349,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 471,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Stakeholder)457_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stakeholder)457_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stakeholder)",
								"numberOfBytes": "32",
								"value": "t_struct(Stakeholder)457_storage"
							},
							"t_mapping(t_address,t_struct(Voter)326_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)326_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)449_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 436,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 438,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 440,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 442,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 444,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable_airdrop",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 446,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 448,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Stakeholder)457_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stakeholder",
								"members": [
									{
										"astId": 452,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "stake",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Stake)449_storage"
									},
									{
										"astId": 454,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "7",
										"type": "t_address"
									},
									{
										"astId": 456,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(Voter)326_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Voter",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 325,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"stake(address,uint256,uint256,uint256)": {
								"notice": "_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID"
							},
							"withdrawStake(address)": {
								"notice": "withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the acount Will also _calculateStakeReward and reset timer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							1277
						],
						"Voting___votingStatus": [
							316
						]
					},
					"id": 1278,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 312,
							"src": "67:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 316,
							"name": "Voting___votingStatus",
							"nameLocation": "134:21:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 315,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "155:2:1"
							},
							"src": "128:30:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1277,
							"linearizedBaseContracts": [
								1277
							],
							"name": "Stakable",
							"nameLocation": "171:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 319,
									"libraryName": {
										"id": 317,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "193:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "187:27:1",
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "206:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Stakable.Voter",
									"id": 326,
									"members": [
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "419:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "414:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 320,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "414:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 325,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "466:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "441:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 324,
												"keyType": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "441:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "460:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "397:5:1",
									"nodeType": "StructDefinition",
									"scope": 1277,
									"src": "390:89:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 328,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "502:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "487:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 330,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "542:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "527:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "527:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 332,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "575:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "560:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "560:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "610:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "596:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 333,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "596:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "647:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "630:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 338,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "678:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "663:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 343,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "729:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "696:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
										"typeString": "mapping(address => struct Stakable.Voter)"
									},
									"typeName": {
										"id": 342,
										"keyType": {
											"id": 339,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "704:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "696:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
											"typeString": "mapping(address => struct Stakable.Voter)"
										},
										"valueType": {
											"id": 341,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 340,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "715:5:1"
											},
											"referencedDeclaration": 326,
											"src": "715:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$326_storage_ptr",
												"typeString": "struct Stakable.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 347,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "777:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "742:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 346,
										"keyType": {
											"id": 344,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "750:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "742:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 345,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "761:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "796:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 348,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "833:162:1",
										"statements": [
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "907:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "907:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "907:23:1"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 356,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "941:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "955:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "941:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "941:16:1"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "968:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 361,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "977:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "977:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "968:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "968:19:1"
											}
										]
									},
									"id": 366,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:2:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:0:1"
									},
									"scope": 1277,
									"src": "819:176:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1142:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 370,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1161:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1161:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 372,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1175:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1161:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1183:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1153:47:1"
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTalax",
									"nameLocation": "1118:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:2:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:1"
									},
									"scope": 1277,
									"src": "1109:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1237:40:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 380,
														"name": "isTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "1248:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:9:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "1248:9:1"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"id": 385,
									"name": "onlyTalax",
									"nameLocation": "1225:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:1"
									},
									"src": "1216:61:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1340:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "1359:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1368:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1359:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f205374616b6520466f756e64",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1371:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a",
																"typeString": "literal_string \"No Stake Found\""
															},
															"value": "No Stake Found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a",
																"typeString": "literal_string \"No Stake Found\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1351:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "1351:37:1"
											}
										]
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkUserStake",
									"nameLocation": "1294:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1318:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1310:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:16:1"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:0:1"
									},
									"scope": 1277,
									"src": "1285:111:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1448:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "_votingStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1467:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e67206973206e6f7420617661696c61626c65",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																"typeString": "literal_string \"Voting is not available\""
															},
															"value": "Voting is not available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																"typeString": "literal_string \"Voting is not available\""
															}
														],
														"id": 401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1459:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1459:49:1"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVotingStatus",
									"nameLocation": "1413:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1448:0:1"
									},
									"scope": 1277,
									"src": "1404:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1552:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 409,
														"name": "_checkVotingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1563:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1563:20:1"
											},
											{
												"id": 412,
												"nodeType": "PlaceholderStatement",
												"src": "1594:1:1"
											}
										]
									},
									"id": 414,
									"name": "votingStatusTrue",
									"nameLocation": "1533:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:2:1"
									},
									"src": "1524:79:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1781:33:1",
										"statements": [
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1792:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1801:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1792:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1792:14:1"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 418,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "1771:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1771:9:1"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1728:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1755:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1747:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:15:1"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:0:1"
									},
									"scope": 1277,
									"src": "1719:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "1872:32:1",
										"statements": [
											{
												"expression": {
													"id": 431,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "1890:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 430,
												"id": 432,
												"nodeType": "Return",
												"src": "1883:13:1"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "1831:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1839:2:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1863:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:9:1"
									},
									"scope": 1277,
									"src": "1822:82:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 449,
									"members": [
										{
											"constant": false,
											"id": 436,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "2178:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2170:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 435,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2170:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 438,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2201:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2193:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 437,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2193:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 440,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "2226:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2218:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 439,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2218:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 442,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "2350:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2342:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 441,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2342:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 444,
											"mutability": "mutable",
											"name": "claimable_airdrop",
											"nameLocation": "2378:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2370:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 443,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2370:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 446,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "2414:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2406:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 445,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2406:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 448,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "2442:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 449,
											"src": "2434:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 447,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2434:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "2153:5:1",
									"nodeType": "StructDefinition",
									"scope": 1277,
									"src": "2146:315:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 457,
									"members": [
										{
											"constant": false,
											"id": 452,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2584:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 457,
											"src": "2578:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$449_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 451,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 450,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 449,
													"src": "2578:5:1"
												},
												"referencedDeclaration": 449,
												"src": "2578:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$449_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 454,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "2608:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 457,
											"src": "2600:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 453,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2600:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 456,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "2631:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 457,
											"src": "2623:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2623:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "2555:11:1",
									"nodeType": "StructDefinition",
									"scope": 1277,
									"src": "2548:106:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 465,
									"members": [
										{
											"constant": false,
											"id": 459,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2838:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 465,
											"src": "2830:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 458,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2830:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2869:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 465,
											"src": "2861:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 460,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2861:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 464,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2893:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 465,
											"src": "2887:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$449_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 463,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 462,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 449,
													"src": "2887:5:1"
												},
												"referencedDeclaration": 449,
												"src": "2887:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$449_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2804:14:1",
									"nodeType": "StructDefinition",
									"scope": 1277,
									"src": "2797:109:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2914:114:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 471,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "3075:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "3034:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
										"typeString": "mapping(address => struct Stakable.Stakeholder)"
									},
									"typeName": {
										"id": 470,
										"keyType": {
											"id": 467,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3042:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3034:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
											"typeString": "mapping(address => struct Stakable.Stakeholder)"
										},
										"valueType": {
											"id": 469,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 468,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 457,
												"src": "3053:11:1"
											},
											"referencedDeclaration": 457,
											"src": "3053:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$457_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3096:126:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 482,
									"name": "Staked",
									"nameLocation": "3234:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3267:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3251:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3290:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3282:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3315:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3307:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3307:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "3343:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:121:1"
									},
									"src": "3228:134:1"
								},
								{
									"anonymous": false,
									"id": 486,
									"name": "PenaltyChanged",
									"nameLocation": "3376:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3399:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "3391:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:16:1"
									},
									"src": "3370:37:1"
								},
								{
									"anonymous": false,
									"id": 490,
									"name": "AirdropChanged",
									"nameLocation": "3419:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3442:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3434:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:16:1"
									},
									"src": "3413:37:1"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "3526:83:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 499,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3545:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"id": 500,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "3552:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3545:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votingRight",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 321,
															"src": "3545:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 503,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "3571:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 505,
																	"indexExpression": {
																		"id": 504,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "3578:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3571:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 325,
																"src": "3571:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 507,
																"name": "_votingId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "3590:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3571:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 509,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3544:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool)"
													}
												},
												"functionReturnParameters": 498,
												"id": 510,
												"nodeType": "Return",
												"src": "3537:64:1"
											}
										]
									},
									"functionSelector": "2d15cc04",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "3467:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3476:14:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3514:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3514:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3520:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3520:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:12:1"
									},
									"scope": 1277,
									"src": "3458:151:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3665:49:1",
										"statements": [
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 517,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "3676:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 518,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3691:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3691:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3676:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3676:30:1"
											}
										]
									},
									"functionSelector": "71e3db87",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 515,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 514,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "3655:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3655:9:1"
										}
									],
									"name": "startAirdropSince",
									"nameLocation": "3626:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3643:2:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3665:0:1"
									},
									"scope": 1277,
									"src": "3617:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "3793:63:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3841:6:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															}
														],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 530,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3812:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3812:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 532,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "3830:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3812:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3811:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "3811:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3811:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 538,
												"nodeType": "Return",
												"src": "3804:44:1"
											}
										]
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateWeek",
									"nameLocation": "3731:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "3754:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3746:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3746:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3745:15:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3784:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:9:1"
									},
									"scope": 1277,
									"src": "3722:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "4222:863:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 555,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "4296:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4305:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4296:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4288:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "4288:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 562,
																			"name": "stakeholders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "4350:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
																				"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																			}
																		},
																		"id": 564,
																		"indexExpression": {
																			"id": 563,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "4363:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4350:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$457_storage",
																			"typeString": "struct Stakable.Stakeholder storage ref"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 452,
																	"src": "4350:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$449_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "4350:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4385:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4350:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722069732061207374616b6572",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4388:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															},
															"value": "User is a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "4342:65:1"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "4420:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4435:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4420:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "4420:16:1"
											},
											{
												"expression": {
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 576,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "4447:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 578,
															"indexExpression": {
																"id": 577,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4454:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4447:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$326_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "4447:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4474:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4447:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "4447:31:1"
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "4587:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "4579:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"expression": {
														"id": 585,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4599:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4599:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4579:35:1"
											},
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 588,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4746:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																}
															},
															"id": 590,
															"indexExpression": {
																"id": 589,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4759:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4746:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$457_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "4746:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$449_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 593,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4793:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 594,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "4812:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 595,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "4833:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4857:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4873:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 598,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "4889:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 599,
																			"name": "stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "4915:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 600,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "4929:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4915:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 602,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4914:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 592,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4773:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$449_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4773:177:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "4746:204:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$449_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "4746:204:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 607,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "5026:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "5032:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 609,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "5040:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 610,
																		"name": "stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "5052:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 611,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "5066:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5052:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 613,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5051:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5019:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5019:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "EmitStatement",
												"src": "5014:63:1"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "3864:204:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"functionSelector": "f93d4f8a",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 551,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "4212:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4212:9:1"
										}
									],
									"name": "stake",
									"nameLocation": "4083:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4107:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4099:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4130:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4122:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "4155:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4147:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4185:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4177:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4088:114:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:1"
									},
									"scope": 1277,
									"src": "4074:1011:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "5154:156:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 625,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "5173:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5183:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "5173:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c7479206665652063616e6e6f742065786365656420332070657263656e742e",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5187:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															},
															"value": "Penalty fee cannot exceed 3 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5165:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "5165:61:1"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 631,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "5237:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 632,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "5258:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5237:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "5237:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 636,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "5295:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "5280:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "5275:27:1"
											}
										]
									},
									"functionSelector": "8c63f97f",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 622,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 621,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "5144:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5144:9:1"
										}
									],
									"name": "changePenaltyFee",
									"nameLocation": "5102:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5127:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5119:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5119:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5118:16:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5154:0:1"
									},
									"scope": 1277,
									"src": "5093:217:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5386:158:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "5405:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323030",
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5415:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "5405:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f702050657263656e746167652063616e6e6f74206578636565642032302070657263656e742e",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5420:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															},
															"value": "Airdrop Percentage cannot exceed 20 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5397:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "5397:70:1"
											},
											{
												"expression": {
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 654,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5478:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 655,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "5492:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5478:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "5478:20:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5529:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "5514:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5514:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "EmitStatement",
												"src": "5509:27:1"
											}
										]
									},
									"functionSelector": "d5dbdf1b",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 645,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 644,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "5376:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5376:9:1"
										}
									],
									"name": "changeAirdropPercentage",
									"nameLocation": "5327:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5359:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5351:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:16:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5386:0:1"
									},
									"scope": 1277,
									"src": "5318:226:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "5666:299:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "since",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "5685:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5693:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5685:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722074696d657374616d702030",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5696:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															},
															"value": "Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5677:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5677:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "5677:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 679,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "5834:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "5834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 681,
																			"name": "since",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "5852:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5834:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5833:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5861:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "5833:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5884:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5911:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 677,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5802:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "5802:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5802:155:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 689,
												"nodeType": "Return",
												"src": "5782:175:1"
											}
										]
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingDuration",
									"nameLocation": "5561:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "since",
												"nameLocation": "5595:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "5587:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5586:15:1"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "5652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:9:1"
									},
									"scope": 1277,
									"src": "5552:413:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "6093:330:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 699,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "6108:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "6108:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6129:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6108:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6104:63:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "6132:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 698,
															"id": 704,
															"nodeType": "Return",
															"src": "6147:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 707,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "6287:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "6287:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 709,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "6324:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 710,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 446,
																		"src": "6324:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6287:57:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 713,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 694,
																				"src": "6390:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 714,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 440,
																			"src": "6390:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 712,
																		"name": "_calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "6364:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6364:43:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6287:120:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 717,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6286:122:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6411:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "6286:129:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 698,
												"id": 720,
												"nodeType": "Return",
												"src": "6266:149:1"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakeReward",
									"nameLocation": "5982:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "6017:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "6004:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 692,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 449,
														"src": "6004:5:1"
													},
													"referencedDeclaration": 449,
													"src": "6004:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$449_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6003:25:1"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "6079:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6078:9:1"
									},
									"scope": 1277,
									"src": "5973:450:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "6563:187:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 737,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 724,
																			"src": "6622:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 738,
																			"name": "stakingPenaltyRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "6630:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 735,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "6609:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "6609:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6609:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6651:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 733,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6596:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "6596:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6596:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 746,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "6697:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 747,
																			"name": "stakingPenaltyRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "6705:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 744,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "6684:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "6684:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6726:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 742,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6671:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "6671:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6671:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 751,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6581:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 732,
												"id": 752,
												"nodeType": "Return",
												"src": "6574:168:1"
											}
										]
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculatePenalty",
									"nameLocation": "6440:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6482:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6474:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6457:32:1"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6540:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6549:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6539:18:1"
									},
									"scope": 1277,
									"src": "6431:319:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "6901:340:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "6916:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6926:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6916:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "6912:57:1",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "6929:40:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6952:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6955:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6951:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 764,
															"id": 771,
															"nodeType": "Return",
															"src": "6944:13:1"
														}
													]
												}
											},
											{
												"assignments": [
													775,
													777
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "amount_penalty",
														"nameLocation": "6990:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "6982:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 777,
														"mutability": "mutable",
														"name": "reward_penalty",
														"nameLocation": "7014:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "7006:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"arguments": [
														{
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "7064:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 780,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7085:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_calculatePenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "7032:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7032:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6981:121:1"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 785,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "7148:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 786,
																	"name": "amount_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "7156:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "7135:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "7135:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7135:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 790,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "7199:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 791,
																	"name": "reward_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "7207:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 788,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "7186:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "7186:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7186:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 793,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7120:113:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 764,
												"id": 794,
												"nodeType": "Return",
												"src": "7113:120:1"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingWithPenalty",
									"nameLocation": "6767:28:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6804:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6796:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6820:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6812:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6812:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6795:32:1"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6877:18:1"
									},
									"scope": 1277,
									"src": "6758:483:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7710:594:1",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "7808:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7795:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 809,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 808,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 449,
																"src": "7795:5:1"
															},
															"referencedDeclaration": 449,
															"src": "7795:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 811,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "7821:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 813,
														"indexExpression": {
															"id": 812,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7834:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7821:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$457_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 452,
													"src": "7821:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$449_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:50:1"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7866:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7858:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7858:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"arguments": [
														{
															"id": 819,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "7897:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 818,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "7875:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$449_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7875:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7858:50:1"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7921:25:1",
													"subExpression": {
														"baseExpression": {
															"id": 822,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "7928:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 824,
														"indexExpression": {
															"id": 823,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7941:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7928:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$457_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "7921:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 827,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "7963:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 448,
														"src": "7963:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 829,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7988:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7988:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7963:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "7959:217:1",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "8005:171:1",
													"statements": [
														{
															"expression": {
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 832,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "8020:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8035:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8020:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 835,
															"nodeType": "ExpressionStatement",
															"src": "8020:16:1"
														},
														{
															"expression": {
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8051:36:1",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 836,
																				"name": "voters",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "8058:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																					"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																				}
																			},
																			"id": 838,
																			"indexExpression": {
																				"id": 837,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "8065:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8058:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Voter_$326_storage",
																				"typeString": "struct Stakable.Voter storage ref"
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 325,
																		"src": "8058:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 841,
																	"indexExpression": {
																		"id": 840,
																		"name": "_votingId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "8077:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8058:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "8051:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 845,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 810,
																			"src": "8138:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "8138:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 847,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "8157:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 844,
																	"name": "_calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "8109:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8109:55:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 807,
															"id": 849,
															"nodeType": "Return",
															"src": "8102:62:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 852,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "8188:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8188:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "8188:16:1"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8215:36:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 856,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "8222:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 858,
																"indexExpression": {
																	"id": 857,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "8229:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8222:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "8222:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 861,
														"indexExpression": {
															"id": 860,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8241:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8222:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "8215:36:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 864,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "8270:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 438,
															"src": "8270:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 866,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8289:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 867,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8269:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 807,
												"id": 868,
												"nodeType": "Return",
												"src": "8262:34:1"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "7249:340:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also _calculateStakeReward and reset timer"
									},
									"functionSelector": "c23a5cea",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 802,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 801,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "7659:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7659:9:1"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "7604:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7626:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7618:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7617:14:1"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7687:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7696:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7686:18:1"
									},
									"scope": 1277,
									"src": "7595:709:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "8378:1030:1",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "8408:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "8389:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 457,
																"src": "8389:11:1"
															},
															"referencedDeclaration": 457,
															"src": "8389:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$457_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"baseExpression": {
														"id": 879,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "8415:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 882,
													"indexExpression": {
														"expression": {
															"id": 880,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8428:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8428:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8415:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$457_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8389:50:1"
											},
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "8472:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "8450:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 885,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 884,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 465,
																"src": "8450:14:1"
															},
															"referencedDeclaration": 465,
															"src": "8450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$465_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8497:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8500:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 890,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "8503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																	"typeString": "struct Stakable.Stakeholder memory"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 452,
															"src": "8503:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 887,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "8482:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$465_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8482:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 895,
																	"name": "summary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "8541:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																		"typeString": "struct Stakable.StakingSummary memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 464,
																"src": "8541:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 438,
															"src": "8541:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_checkUserStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "8525:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
															"typeString": "function (uint256) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8525:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "8525:37:1"
											},
											{
												"assignments": [
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "availableReward",
														"nameLocation": "8583:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "8575:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 900,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8575:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 903,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "8623:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 464,
															"src": "8623:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 902,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "8601:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$449_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8601:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8575:62:1"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "8656:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "8648:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8648:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"nodeType": "VariableDeclarationStatement",
												"src": "8648:15:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 910,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "8680:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 464,
															"src": "8680:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 448,
														"src": "8680:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 913,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8708:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8708:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8680:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "8676:288:1",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "8725:239:1",
													"statements": [
														{
															"assignments": [
																917,
																919
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 917,
																	"mutability": "mutable",
																	"name": "amount_penalty",
																	"nameLocation": "8767:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 933,
																	"src": "8759:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 916,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8759:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 919,
																	"mutability": "mutable",
																	"name": "reward_penalty",
																	"nameLocation": "8808:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 933,
																	"src": "8800:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 918,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8800:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 926,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 921,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 886,
																				"src": "8858:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 922,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 464,
																			"src": "8858:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "8858:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 924,
																		"name": "availableReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "8880:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 920,
																	"name": "_calculatePenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "8840:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8840:56:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8740:156:1"
														},
														{
															"expression": {
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 927,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "8911:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 928,
																		"name": "amount_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "8921:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 929,
																		"name": "reward_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "8938:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8921:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8911:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "8911:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 936,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "8995:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 456,
																"src": "8995:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 935,
															"name": "_calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "8980:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8980:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9019:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "9168:62:1",
													"statements": [
														{
															"expression": {
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 958,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 886,
																			"src": "9183:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 464,
																		"src": "9183:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable_airdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 444,
																	"src": "9183:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9217:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9183:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "9183:35:1"
														}
													]
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "8976:254:1",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "9022:140:1",
													"statements": [
														{
															"assignments": [
																942
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 942,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "9045:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 957,
																	"src": "9037:15:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 941,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9037:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 948,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 944,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 886,
																				"src": "9073:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 945,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 464,
																			"src": "9073:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "9073:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 943,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "9055:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9055:39:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9037:57:1"
														},
														{
															"expression": {
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 949,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 886,
																			"src": "9109:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 464,
																		"src": "9109:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable_airdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 444,
																	"src": "9109:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 954,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9143:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9109:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 956,
															"nodeType": "ExpressionStatement",
															"src": "9109:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 968,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "9242:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 464,
															"src": "9242:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 442,
														"src": "9242:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "9268:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9242:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "9242:41:1"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 976,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "9294:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "9294:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "9312:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9294:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "9294:25:1"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 982,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "9330:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "9330:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 985,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "9353:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 464,
															"src": "9353:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "9353:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9330:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "9330:43:1"
											},
											{
												"expression": {
													"id": 990,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "9393:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 875,
												"id": 991,
												"nodeType": "Return",
												"src": "9386:14:1"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "8321:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8329:2:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "8355:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$465_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 872,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 465,
														"src": "8355:14:1"
													},
													"referencedDeclaration": 465,
													"src": "8355:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$465_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8354:23:1"
									},
									"scope": 1277,
									"src": "8312:1096:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "9634:73:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1000,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "9654:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1001,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "9668:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9654:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1003,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9653:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9683:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "9653:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1006,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9652:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9691:8:1",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "9652:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 999,
												"id": 1009,
												"nodeType": "Return",
												"src": "9645:54:1"
											}
										]
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "9531:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "9557:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "9549:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9548:21:1"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "9620:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9619:9:1"
									},
									"scope": 1277,
									"src": "9522:185:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "9834:426:1",
										"statements": [
											{
												"assignments": [
													1022
												],
												"declarations": [
													{
														"constant": false,
														"id": 1022,
														"mutability": "mutable",
														"name": "stakeholder",
														"nameLocation": "9864:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "9845:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 1021,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1020,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 457,
																"src": "9845:11:1"
															},
															"referencedDeclaration": 457,
															"src": "9845:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$457_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"baseExpression": {
														"id": 1023,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "9878:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$457_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 1025,
													"indexExpression": {
														"id": 1024,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "9891:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9878:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$457_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9845:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1028,
																	"name": "stakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "9925:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 452,
																"src": "9925:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 438,
															"src": "9925:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1027,
														"name": "_checkUserStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "9909:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
															"typeString": "function (uint256) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9909:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "9909:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1035,
																			"name": "stakeholder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "10000:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																				"typeString": "struct Stakable.Stakeholder memory"
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDrop",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 456,
																		"src": "10000:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1034,
																	"name": "_calculateWeek",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "9985:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9985:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10031:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9985:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d61626c65206f6e63652061207765656b",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10047:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																"typeString": "literal_string \"Claimable once a week\""
															},
															"value": "Claimable once a week"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																"typeString": "literal_string \"Claimable once a week\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9963:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9963:118:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "9963:118:1"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1043,
																"name": "stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "10094:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																	"typeString": "struct Stakable.Stakeholder memory"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 452,
															"src": "10094:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable_airdrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 444,
														"src": "10094:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10132:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10094:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "10094:39:1"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1051,
															"name": "stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "10144:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																"typeString": "struct Stakable.Stakeholder memory"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 456,
														"src": "10144:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1054,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10174:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10174:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10144:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "10144:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1059,
																	"name": "stakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "10227:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$457_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 452,
																"src": "10227:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$449_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 438,
															"src": "10227:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "_calculateAirdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "10209:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10209:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1063,
												"nodeType": "Return",
												"src": "10202:50:1"
											}
										]
									},
									"functionSelector": "65f8c6c5",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1015,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "9792:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "9792:9:1"
										}
									],
									"name": "claimAirdrop",
									"nameLocation": "9724:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9745:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "9737:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9736:14:1"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "9820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9819:9:1"
									},
									"scope": 1277,
									"src": "9715:545:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "10321:157:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1070,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "10336:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10352:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10336:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "10436:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10458:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1069,
															"id": 1083,
															"nodeType": "Return",
															"src": "10451:8:1"
														}
													]
												},
												"id": 1085,
												"nodeType": "IfStatement",
												"src": "10332:139:1",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "10355:75:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1073,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "10378:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "10378:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1075,
																				"name": "airdropSince",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "10396:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10378:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1077,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10377:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10412:6:1",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "7"
																},
																"src": "10377:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1069,
															"id": 1080,
															"nodeType": "Return",
															"src": "10370:48:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cbb3e152",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "airdropWeek",
									"nameLocation": "10277:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10288:2:1"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "10312:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10312:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10311:9:1"
									},
									"scope": 1277,
									"src": "10268:210:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "10634:135:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "_votingStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "10653:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10670:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "10653:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720697320616c72656164792072756e6e696e67",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10677:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0",
																"typeString": "literal_string \"Voting is already running\""
															},
															"value": "Voting is already running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0",
																"typeString": "literal_string \"Voting is already running\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "10645:60:1"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10716:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10732:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10716:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "10716:20:1"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1103,
														"name": "_votingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "10747:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10760:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10747:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "10747:14:1"
											}
										]
									},
									"functionSelector": "1ec6b60a",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "10624:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10624:9:1"
										}
									],
									"name": "startVoting",
									"nameLocation": "10601:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10612:2:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10634:0:1"
									},
									"scope": 1277,
									"src": "10592:177:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "10835:109:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10854:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10870:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10862:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10862:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10862:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10854:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10874:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10846:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10846:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "10846:46:1"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1125,
															"name": "voters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "10912:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																"typeString": "mapping(address => struct Stakable.Voter storage ref)"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1126,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "10919:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10912:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$326_storage",
															"typeString": "struct Stakable.Voter storage ref"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votingRight",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 321,
													"src": "10912:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1129,
												"nodeType": "Return",
												"src": "10905:31:1"
											}
										]
									},
									"functionSelector": "a7771ee3",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVoter",
									"nameLocation": "10786:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "10794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10793:14:1"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "10829:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10829:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10828:6:1"
									},
									"scope": 1277,
									"src": "10777:167:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "10992:307:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1137,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "11011:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1140,
																	"indexExpression": {
																		"expression": {
																			"id": 1138,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11018:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11018:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11011:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votingRight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "11011:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11045:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "11011:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120766f746572",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11051:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															},
															"value": "You are not a voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11003:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "11003:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1148,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "11106:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																				"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																			}
																		},
																		"id": 1151,
																		"indexExpression": {
																			"expression": {
																				"id": 1149,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11113:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11113:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11106:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$326_storage",
																			"typeString": "struct Stakable.Voter storage ref"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 325,
																	"src": "11106:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1154,
																"indexExpression": {
																	"id": 1153,
																	"name": "_votingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "11131:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11106:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11145:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "11106:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520766f746564206265666f7265",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11165:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																"typeString": "literal_string \"You have voted before\""
															},
															"value": "You have voted before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																"typeString": "literal_string \"You have voted before\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11084:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11084:115:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "11084:115:1"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1160,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "11212:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1163,
																"indexExpression": {
																	"expression": {
																		"id": 1161,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11219:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11219:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11212:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "11212:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1166,
														"indexExpression": {
															"id": 1165,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "11237:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11212:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11250:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11212:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "11212:42:1"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1170,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "11265:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"id": 1171,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "11276:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11265:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11290:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11265:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "11265:26:1"
											}
										]
									},
									"functionSelector": "632a9a52",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1133,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "10975:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10975:16:1"
										}
									],
									"name": "vote",
									"nameLocation": "10961:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10965:2:1"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10992:0:1"
									},
									"scope": 1277,
									"src": "10952:347:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "11354:309:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1183,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "11373:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1186,
																	"indexExpression": {
																		"expression": {
																			"id": 1184,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11380:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11380:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11373:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votingRight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "11373:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11407:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "11373:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120766f746572",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11413:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															},
															"value": "You are not a voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															}
														],
														"id": 1182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11365:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11365:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "11365:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1194,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "11468:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																				"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																			}
																		},
																		"id": 1197,
																		"indexExpression": {
																			"expression": {
																				"id": 1195,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11475:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11475:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11468:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$326_storage",
																			"typeString": "struct Stakable.Voter storage ref"
																		}
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 325,
																	"src": "11468:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1200,
																"indexExpression": {
																	"id": 1199,
																	"name": "_votingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "11493:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11468:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11507:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "11468:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f7420766f74656420796574",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11526:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																"typeString": "literal_string \"You have not voted yet\""
															},
															"value": "You have not voted yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																"typeString": "literal_string \"You have not voted yet\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11446:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11446:115:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "11446:115:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1206,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "11574:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1209,
																"indexExpression": {
																	"expression": {
																		"id": 1207,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11581:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11581:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11574:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "11574:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1212,
														"indexExpression": {
															"id": 1211,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "11599:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11574:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11613:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11574:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "11574:44:1"
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "11629:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "11640:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11629:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11654:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11629:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "11629:26:1"
											}
										]
									},
									"functionSelector": "070c8b74",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1179,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "11337:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "11337:16:1"
										}
									],
									"name": "retractVote",
									"nameLocation": "11316:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11327:2:1"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11354:0:1"
									},
									"scope": 1277,
									"src": "11307:356:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "11804:279:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1233,
																"name": "totalVoters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "11823:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11837:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11823:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f74657273",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11840:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171",
																"typeString": "literal_string \"Not enough voters\""
															},
															"value": "Not enough voters"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171",
																"typeString": "literal_string \"Not enough voters\""
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11815:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "11815:45:1"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "half_voters",
														"nameLocation": "11879:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "11871:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11871:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1245,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "11919:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11932:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"expression": {
																	"id": 1243,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "11906:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "11906:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11906:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3130",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11936:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1241,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "11893:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "11893:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11893:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11871:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1251,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "11956:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1253,
														"indexExpression": {
															"id": 1252,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "11967:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11956:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1254,
														"name": "half_voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "11980:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11956:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "12037:39:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12059:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1231,
															"id": 1260,
															"nodeType": "Return",
															"src": "12052:12:1"
														}
													]
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "11952:124:1",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "11993:38:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12015:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1231,
															"id": 1257,
															"nodeType": "Return",
															"src": "12008:11:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "671d2b75",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1225,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "11739:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "11739:9:1"
										},
										{
											"id": 1228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "11758:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "11758:16:1"
										}
									],
									"name": "getVotingResult",
									"nameLocation": "11680:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11695:2:1"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "11793:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11793:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11792:6:1"
									},
									"scope": 1277,
									"src": "11671:412:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "12149:40:1",
										"statements": [
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1271,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "12160:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12176:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12160:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "12160:21:1"
											}
										]
									},
									"functionSelector": "fab2f86b",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1266,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "12122:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "12122:9:1"
										},
										{
											"id": 1269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "12132:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "12132:16:1"
										}
									],
									"name": "stopVoting",
									"nameLocation": "12100:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12110:2:1"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12149:0:1"
									},
									"scope": 1277,
									"src": "12091:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1278,
							"src": "162:12030:1",
							"usedErrors": []
						}
					],
					"src": "40:12154:1"
				},
				"id": 1
			}
		}
	}
}