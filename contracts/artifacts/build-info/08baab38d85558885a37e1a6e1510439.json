{
	"id": "08baab38d85558885a37e1a6e1510439",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nerror Voting___votingStatus();\n\ncontract Stakable {\n    using SafeMath for uint256;\n    /**\n     * @notice Constructor since this contract is not ment to be used without inheritance\n     * push once to stakeholders for it to work proplerly\n     */\n\n    struct Voter {\n        bool votingRight;\n        mapping(uint256 => bool) voted;\n    }\n\n    uint256 public stakingPenaltyRate;\n    uint256 public airdropRate;\n    uint256 public airdropSince;\n\n    bool internal _votingStatus;\n    uint256 internal _votingId;\n    uint256 public totalVoters;\n    mapping(address => Voter) public voters;\n    mapping(uint256 => uint256) public votedUsers;\n\n    constructor() {\n        //Staking penalty and Airdrop in 0.1 times percentage\n        stakingPenaltyRate = 15;\n        airdropRate = 80;\n    }\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n    function _checkUserStake(uint256 amount) internal pure {\n        require(amount > 0, \"No Stake Found\");\n    }\n\n    function _checkVotingStatus() internal view {\n        require(_votingStatus, \"Voting is not available\");\n    }\n\n    modifier votingStatusTrue() {\n        _checkVotingStatus();\n        _;\n    }\n\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes,\n     * A Stake will contain the users address, the amount staked and a timestamp,\n     * Since which is when the stake was made\n     */\n    struct Stake {\n        address user;\n        uint256 amount;\n        uint256 since;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n        uint256 claimable_airdrop;\n        uint256 rewardAPY;\n        uint256 releaseTime;\n    }\n    /**\n     * @notice Stakeholder is a staker that has active stakes\n     */\n    struct Stakeholder {\n        Stake stake;\n        address user;\n        uint256 latestClaimDrop;\n    }\n\n    /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */\n    struct StakingSummary {\n        uint256 total_amount;\n        uint256 penalty;\n        Stake stake;\n    }\n\n    /**\n     * @notice\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => Stakeholder) internal stakeholders;\n\n    /**\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        uint256 timestamp,\n        uint256 releaseTime\n    );\n\n    event PenaltyChanged(uint256 amount);\n    event AirdropChanged(uint256 amount);\n\n    function _startAirdropSince() internal {\n        airdropSince = block.timestamp;\n    }\n\n    function _calculateWeek(uint256 input) internal view returns (uint256) {\n        return (block.timestamp - input).div(7 days);\n    }\n\n    /**\n     * @notice\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n     * StakeID\n     */\n    function _stake(\n        address _user,\n        uint256 _amount,\n        uint256 _stakePeriod,\n        uint256 _rewardRate\n    ) internal {\n        // Simple check so that user does not stake 0\n        require(_amount > 0, \"Cannot stake nothing\");\n        require(stakeholders[_user].stake.amount == 0, \"User is a staker\");\n\n        totalVoters += 1;\n        voters[_user].votingRight = true;\n\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n        stakeholders[_user].stake = Stake(\n            _user,\n            _amount,\n            timestamp,\n            0,\n            0,\n            _rewardRate,\n            (_stakePeriod + timestamp)\n        );\n        // Emit an event that the stake has occured\n        emit Staked(_user, _amount, timestamp, (_stakePeriod + timestamp));\n    }\n\n    function _changePenaltyFee(uint256 amount_) internal {\n        require(amount_ <= 30, \"Penalty fee cannot exceed 3 percent.\");\n        stakingPenaltyRate = amount_;\n        emit PenaltyChanged(amount_);\n    }\n\n    function _changeAirdropPercentage(uint256 amount_) internal {\n        require(amount_ <= 200, \"Airdrop Percentage cannot exceed 20 percent.\");\n        airdropRate = amount_;\n        emit AirdropChanged(amount_);\n    }\n\n    function calculateStakingDuration(uint256 since_)\n        internal\n        view\n        returns (uint256)\n    {\n        require(since_ > 0, \"Error timestamp 0\");\n\n        // times by 1e24 so theres no missing value\n        return\n            SafeMath.div(\n                (block.timestamp - since_) * 1e24,\n                365 days,\n                \"Error cannot divide timestamp\"\n            );\n    }\n\n    function calculateStakeReward(Stake memory user_stake)\n        internal\n        view\n        returns (uint256)\n    {\n        if (user_stake.amount == 0) {\n            return 0;\n        }\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\n        return\n            (user_stake.amount *\n                user_stake.rewardAPY *\n                calculateStakingDuration(user_stake.since)) / 1e26;\n    }\n\n    function calculatePenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        return (\n            SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000),\n            SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000)\n        );\n    }\n\n    function calculateStakingWithPenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        if (amount == 0) {\n            return (0, 0);\n        }\n\n        (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(\n            amount,\n            reward\n        );\n        return (\n            SafeMath.sub(amount, amount_penalty),\n            SafeMath.sub(reward, reward_penalty)\n        );\n    }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the acount\n     * Will also calculateStakeReward and reset timer\n     */\n    function _withdrawStake(address _user) internal returns (uint256, uint256) {\n        // Grab user_index which is the index to use to grab the Stake[]\n        Stake memory stake = stakeholders[_user].stake;\n\n        uint256 reward = calculateStakeReward(stake);\n\n        delete stakeholders[_user];\n\n        if (stake.releaseTime > block.timestamp) {\n            totalVoters -= 1;\n            delete voters[_user].voted[_votingId];\n            return calculateStakingWithPenalty(stake.amount, reward);\n        }\n\n        totalVoters -= 1;\n        delete voters[_user].voted[_votingId];\n        return (stake.amount, reward);\n    }\n\n    function hasStake() external view returns (StakingSummary memory) {\n        Stakeholder memory data = stakeholders[msg.sender];\n        StakingSummary memory summary = StakingSummary(0, 0, data.stake);\n        _checkUserStake(summary.stake.amount);\n\n        uint256 availableReward = calculateStakeReward(summary.stake);\n        uint256 penalty;\n\n        if (summary.stake.releaseTime > block.timestamp) {\n            (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(\n                summary.stake.amount,\n                availableReward\n            );\n            penalty = amount_penalty + reward_penalty;\n        }\n\n        if (_calculateWeek(data.latestClaimDrop) > 0) {\n            uint256 airdrop = _calculateAirdrop(summary.stake.amount);\n            summary.stake.claimable_airdrop = airdrop;\n        } else {\n            summary.stake.claimable_airdrop = 0;\n        }\n\n        summary.stake.claimable = availableReward;\n        summary.penalty = penalty;\n        summary.total_amount = summary.stake.amount;\n\n        return summary;\n    }\n\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\n    function _calculateAirdrop(uint256 stakeAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\n    }\n\n    function _claimAirdrop(address _staker) internal view returns (uint256) {\n        Stakeholder memory stakeholder = stakeholders[_staker];\n\n        _checkUserStake(stakeholder.stake.amount);\n\n        require(\n            _calculateWeek(stakeholder.latestClaimDrop) > 0,\n            \"Claimable once a week\"\n        );\n\n        stakeholder.stake.claimable_airdrop = 0;\n        stakeholder.latestClaimDrop = block.timestamp;\n\n        return _calculateAirdrop(stakeholder.stake.amount);\n    }\n\n    function airdropWeek() public view returns (uint256) {\n        if (airdropSince != 0) {\n            return (block.timestamp - airdropSince) / 7 days;\n        } else {\n            return 0;\n        }\n    }\n\n    /* -------------------------------- Voting Functions for DAO Pool ------------------------------- */\n    function _startVoting() internal {\n        require(_votingStatus == false, \"Voting is already running\");\n        _votingStatus = true;\n        _votingId += 1;\n    }\n\n    function isVoter(address _staker) public view returns (bool) {\n        require(_staker != address(0), \"Invalid address\");\n\n        return voters[_staker].votingRight;\n    }\n\n    function vote() public votingStatusTrue {\n        require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        require(\n            voters[msg.sender].voted[_votingId] == false,\n            \"You have voted before\"\n        );\n\n        voters[msg.sender].voted[_votingId] = true;\n        votedUsers[_votingId] += 1;\n    }\n\n    function retractVote() public votingStatusTrue {\n        require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        require(\n            voters[msg.sender].voted[_votingId] == true,\n            \"You have not voted yet\"\n        );\n\n        voters[msg.sender].voted[_votingId] == false;\n        votedUsers[_votingId] -= 1;\n    }\n\n    function _getVotingResult() internal view votingStatusTrue returns (bool) {\n        require(totalVoters > 1, \"Not enough voters\");\n        uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10);\n\n        if (votedUsers[_votingId] > half_voters) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function _stopVoting() internal votingStatusTrue {\n        _votingStatus = false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable_airdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "isVoter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retractVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":155:10950  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":767:909  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakable.sol\":874:876  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":853:871  stakingPenaltyRate */\n  0x00\n    /* \"contracts/Stakable.sol\":853:876  stakingPenaltyRate = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":900:902  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":886:897  airdropRate */\n  0x01\n    /* \"contracts/Stakable.sol\":886:902  airdropRate = 80 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":155:10950  contract Stakable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":155:10950  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa143a5f2\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa143a5f2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa7771ee3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcbb3e152\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x070c8b74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10486b6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f5300ff\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8891cf0d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":10158:10505  function retractVote() public votingStatusTrue {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Stakable.sol\":7296:8362  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":638:664  uint256 public totalVoters */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":9814:10152  function vote() public votingStatusTrue {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Stakable.sol\":507:533  uint256 public airdropRate */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":715:760  mapping(uint256 => uint256) public votedUsers */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":670:709  mapping(address => Voter) public voters */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":9636:9808  function isVoter(address _staker) public view returns (bool) {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":539:566  uint256 public airdropSince */\n    tag_11:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":468:501  uint256 public stakingPenaltyRate */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":9151:9355  function airdropWeek() public view returns (uint256) {... */\n    tag_13:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":10158:10505  function retractVote() public votingStatusTrue {... */\n    tag_16:\n        /* \"contracts/Stakable.sol\":1289:1309  _checkVotingStatus() */\n      tag_55\n        /* \"contracts/Stakable.sol\":1289:1307  _checkVotingStatus */\n      tag_56\n        /* \"contracts/Stakable.sol\":1289:1309  _checkVotingStatus() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/Stakable.sol\":10257:10261  true */\n      0x01\n        /* \"contracts/Stakable.sol\":10223:10261  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":10223:10229  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10223:10241  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":10230:10240  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":10223:10241  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":10223:10253  voters[msg.sender].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":10223:10261  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":10215:10285  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/Stakable.sol\":10355:10359  true */\n      0x01\n        /* \"contracts/Stakable.sol\":10316:10359  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":10316:10322  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10316:10334  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":10323:10333  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":10316:10334  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":10316:10340  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":10316:10351  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":10341:10350  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10316:10351  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":10316:10359  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":10295:10407  require(... */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/Stakable.sol\":10457:10462  false */\n      0x00\n        /* \"contracts/Stakable.sol\":10418:10462  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":10418:10424  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10418:10436  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":10425:10435  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":10418:10436  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":10418:10442  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":10418:10453  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":10443:10452  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10418:10453  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":10418:10462  voters[msg.sender].voted[_votingId] == false */\n      pop\n        /* \"contracts/Stakable.sol\":10497:10498  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":10472:10482  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":10472:10493  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":10483:10492  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10472:10493  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":10472:10498  votedUsers[_votingId] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":10158:10505  function retractVote() public votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7296:8362  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_18:\n        /* \"contracts/Stakable.sol\":7339:7360  StakingSummary memory */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/Stakable.sol\":7372:7395  Stakeholder memory data */\n      0x00\n        /* \"contracts/Stakable.sol\":7398:7410  stakeholders */\n      0x08\n        /* \"contracts/Stakable.sol\":7398:7422  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":7411:7421  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":7398:7422  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":7372:7422  Stakeholder memory data = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x08\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7432:7461  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":7464:7496  StakingSummary(0, 0, data.stake) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":7479:7480  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7464:7496  StakingSummary(0, 0, data.stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":7482:7483  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7464:7496  StakingSummary(0, 0, data.stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":7485:7489  data */\n      dup4\n        /* \"contracts/Stakable.sol\":7485:7495  data.stake */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7464:7496  StakingSummary(0, 0, data.stake) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":7432:7496  StakingSummary memory summary = StakingSummary(0, 0, data.stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7506:7543  _checkUserStake(summary.stake.amount) */\n      tag_69\n        /* \"contracts/Stakable.sol\":7522:7529  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":7522:7535  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7522:7542  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7506:7521  _checkUserStake */\n      tag_70\n        /* \"contracts/Stakable.sol\":7506:7543  _checkUserStake(summary.stake.amount) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Stakable.sol\":7554:7577  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakable.sol\":7580:7615  calculateStakeReward(summary.stake) */\n      tag_71\n        /* \"contracts/Stakable.sol\":7601:7608  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":7601:7614  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7580:7600  calculateStakeReward */\n      tag_72\n        /* \"contracts/Stakable.sol\":7580:7615  calculateStakeReward(summary.stake) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Stakable.sol\":7554:7615  uint256 availableReward = calculateStakeReward(summary.stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7625:7640  uint256 penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7683:7698  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":7655:7662  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":7655:7668  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7655:7680  summary.stake.releaseTime */\n      0xc0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7655:7698  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":7651:7932  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/Stakable.sol\":7715:7737  uint256 amount_penalty */\n      0x00\n        /* \"contracts/Stakable.sol\":7739:7761  uint256 reward_penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":7765:7866  calculatePenalty(... */\n      tag_74\n        /* \"contracts/Stakable.sol\":7799:7806  summary */\n      dup6\n        /* \"contracts/Stakable.sol\":7799:7812  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7799:7819  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7837:7852  availableReward */\n      dup6\n        /* \"contracts/Stakable.sol\":7765:7781  calculatePenalty */\n      tag_75\n        /* \"contracts/Stakable.sol\":7765:7866  calculatePenalty(... */\n      jump\t// in\n    tag_74:\n        /* \"contracts/Stakable.sol\":7714:7866  (uint256 amount_penalty, uint256 reward_penalty) = calculatePenalty(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":7907:7921  reward_penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":7890:7904  amount_penalty */\n      dup3\n        /* \"contracts/Stakable.sol\":7890:7921  amount_penalty + reward_penalty */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/Stakable.sol\":7880:7921  penalty = amount_penalty + reward_penalty */\n      swap3\n      pop\n        /* \"contracts/Stakable.sol\":7700:7932  {... */\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7651:7932  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_73:\n        /* \"contracts/Stakable.sol\":7985:7986  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":7946:7982  _calculateWeek(data.latestClaimDrop) */\n      tag_78\n        /* \"contracts/Stakable.sol\":7961:7965  data */\n      dup6\n        /* \"contracts/Stakable.sol\":7961:7981  data.latestClaimDrop */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7946:7960  _calculateWeek */\n      tag_79\n        /* \"contracts/Stakable.sol\":7946:7982  _calculateWeek(data.latestClaimDrop) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Stakable.sol\":7946:7986  _calculateWeek(data.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":7942:8191  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/Stakable.sol\":8002:8017  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable.sol\":8020:8059  _calculateAirdrop(summary.stake.amount) */\n      tag_81\n        /* \"contracts/Stakable.sol\":8038:8045  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":8038:8051  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8038:8058  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8020:8037  _calculateAirdrop */\n      tag_82\n        /* \"contracts/Stakable.sol\":8020:8059  _calculateAirdrop(summary.stake.amount) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Stakable.sol\":8002:8059  uint256 airdrop = _calculateAirdrop(summary.stake.amount) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8107:8114  airdrop */\n      dup1\n        /* \"contracts/Stakable.sol\":8073:8080  summary */\n      dup5\n        /* \"contracts/Stakable.sol\":8073:8086  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8073:8104  summary.stake.claimable_airdrop */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":8073:8114  summary.stake.claimable_airdrop = airdrop */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7988:8125  {... */\n      pop\n        /* \"contracts/Stakable.sol\":7942:8191  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n      jump(tag_83)\n    tag_80:\n        /* \"contracts/Stakable.sol\":8179:8180  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":8145:8152  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":8145:8158  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8145:8176  summary.stake.claimable_airdrop */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":8145:8180  summary.stake.claimable_airdrop = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7942:8191  if (_calculateWeek(data.latestClaimDrop) > 0) {... */\n    tag_83:\n        /* \"contracts/Stakable.sol\":8227:8242  availableReward */\n      dup2\n        /* \"contracts/Stakable.sol\":8201:8208  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":8201:8214  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8201:8224  summary.stake.claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":8201:8242  summary.stake.claimable = availableReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":8270:8277  penalty */\n      dup1\n        /* \"contracts/Stakable.sol\":8252:8259  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":8252:8267  summary.penalty */\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":8252:8277  summary.penalty = penalty */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":8310:8317  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":8310:8323  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8310:8330  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8287:8294  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":8287:8307  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakable.sol\":8287:8330  summary.total_amount = summary.stake.amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":8348:8355  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":8341:8355  return summary */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7296:8362  function hasStake() external view returns (StakingSummary memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":638:664  uint256 public totalVoters */\n    tag_22:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9814:10152  function vote() public votingStatusTrue {... */\n    tag_26:\n        /* \"contracts/Stakable.sol\":1289:1309  _checkVotingStatus() */\n      tag_85\n        /* \"contracts/Stakable.sol\":1289:1307  _checkVotingStatus */\n      tag_56\n        /* \"contracts/Stakable.sol\":1289:1309  _checkVotingStatus() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/Stakable.sol\":9906:9910  true */\n      0x01\n        /* \"contracts/Stakable.sol\":9872:9910  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":9872:9878  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9872:9890  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":9879:9889  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":9872:9890  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":9872:9902  voters[msg.sender].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":9872:9910  voters[msg.sender].votingRight == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":9864:9934  require(voters[msg.sender].votingRight == true, \"You are not a voter\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_60\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/Stakable.sol\":10004:10009  false */\n      0x00\n        /* \"contracts/Stakable.sol\":9965:10009  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":9965:9971  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9965:9983  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":9972:9982  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":9965:9983  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":9965:9989  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":9965:10000  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":9990:9999  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":9965:10000  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":9965:10009  voters[msg.sender].voted[_votingId] == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":9944:10056  require(... */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/Stakable.sol\":10105:10109  true */\n      0x01\n        /* \"contracts/Stakable.sol\":10067:10073  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":10067:10085  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":10074:10084  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":10067:10085  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":10067:10091  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":10067:10102  voters[msg.sender].voted[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":10092:10101  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10067:10102  voters[msg.sender].voted[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":10067:10109  voters[msg.sender].voted[_votingId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":10144:10145  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":10119:10129  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":10119:10140  votedUsers[_votingId] */\n      0x00\n        /* \"contracts/Stakable.sol\":10130:10139  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":10119:10140  votedUsers[_votingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stakable.sol\":10119:10145  votedUsers[_votingId] += 1 */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stakable.sol\":9814:10152  function vote() public votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":507:533  uint256 public airdropRate */\n    tag_28:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":715:760  mapping(uint256 => uint256) public votedUsers */\n    tag_33:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":670:709  mapping(address => Voter) public voters */\n    tag_38:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9636:9808  function isVoter(address _staker) public view returns (bool) {... */\n    tag_43:\n        /* \"contracts/Stakable.sol\":9691:9695  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":9734:9735  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":9715:9736  _staker != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stakable.sol\":9715:9722  _staker */\n      dup3\n        /* \"contracts/Stakable.sol\":9715:9736  _staker != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Stakable.sol\":9707:9756  require(_staker != address(0), \"Invalid address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/Stakable.sol\":9774:9780  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":9774:9789  voters[_staker] */\n      0x00\n        /* \"contracts/Stakable.sol\":9781:9788  _staker */\n      dup4\n        /* \"contracts/Stakable.sol\":9774:9789  voters[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":9774:9801  voters[_staker].votingRight */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":9767:9801  return voters[_staker].votingRight */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":9636:9808  function isVoter(address _staker) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":539:566  uint256 public airdropSince */\n    tag_46:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":468:501  uint256 public stakingPenaltyRate */\n    tag_49:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9151:9355  function airdropWeek() public view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/Stakable.sol\":9195:9202  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":9234:9235  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":9218:9230  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":9218:9235  airdropSince != 0 */\n      eq\n        /* \"contracts/Stakable.sol\":9214:9349  if (airdropSince != 0) {... */\n      tag_98\n      jumpi\n        /* \"contracts/Stakable.sol\":9293:9299  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":9277:9289  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":9259:9274  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":9259:9289  block.timestamp - airdropSince */\n      tag_99\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_99:\n        /* \"contracts/Stakable.sol\":9258:9299  (block.timestamp - airdropSince) / 7 days */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/Stakable.sol\":9251:9299  return (block.timestamp - airdropSince) / 7 days */\n      swap1\n      pop\n      jump(tag_97)\n        /* \"contracts/Stakable.sol\":9214:9349  if (airdropSince != 0) {... */\n    tag_98:\n        /* \"contracts/Stakable.sol\":9337:9338  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9330:9338  return 0 */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":9151:9355  function airdropWeek() public view returns (uint256) {... */\n    tag_97:\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1135:1245  function _checkVotingStatus() internal view {... */\n    tag_56:\n        /* \"contracts/Stakable.sol\":1197:1210  _votingStatus */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":1189:1238  require(_votingStatus, \"Voting is not available\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/Stakable.sol\":1135:1245  function _checkVotingStatus() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":1020:1129  function _checkUserStake(uint256 amount) internal pure {... */\n    tag_70:\n        /* \"contracts/Stakable.sol\":1102:1103  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":1093:1099  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":1093:1103  amount > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":1085:1122  require(amount > 0, \"No Stake Found\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Stakable.sol\":1020:1129  function _checkUserStake(uint256 amount) internal pure {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5097:5532  function calculateStakeReward(Stake memory user_stake)... */\n    tag_72:\n        /* \"contracts/Stakable.sol\":5199:5206  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5247:5248  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":5226:5236  user_stake */\n      dup3\n        /* \"contracts/Stakable.sol\":5226:5243  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5226:5248  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":5222:5283  if (user_stake.amount == 0) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"contracts/Stakable.sol\":5271:5272  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5264:5272  return 0 */\n      swap1\n      pop\n      jump(tag_111)\n        /* \"contracts/Stakable.sol\":5222:5283  if (user_stake.amount == 0) {... */\n    tag_112:\n        /* \"contracts/Stakable.sol\":5521:5525  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":5475:5517  calculateStakingDuration(user_stake.since) */\n      tag_113\n        /* \"contracts/Stakable.sol\":5500:5510  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":5500:5516  user_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5475:5499  calculateStakingDuration */\n      tag_114\n        /* \"contracts/Stakable.sol\":5475:5517  calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Stakable.sol\":5436:5446  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":5436:5456  user_stake.rewardAPY */\n      0xa0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5400:5410  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":5400:5417  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":5400:5456  user_stake.amount *... */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/Stakable.sol\":5400:5517  user_stake.amount *... */\n      tag_117\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n        /* \"contracts/Stakable.sol\":5399:5525  (user_stake.amount *... */\n      tag_118\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_118:\n        /* \"contracts/Stakable.sol\":5380:5525  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":5097:5532  function calculateStakeReward(Stake memory user_stake)... */\n    tag_111:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5538:5847  function calculatePenalty(uint256 amount, uint256 reward)... */\n    tag_75:\n        /* \"contracts/Stakable.sol\":5643:5650  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":5652:5659  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":5696:5756  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      tag_120\n        /* \"contracts/Stakable.sol\":5709:5749  SafeMath.mul(amount, stakingPenaltyRate) */\n      tag_121\n        /* \"contracts/Stakable.sol\":5722:5728  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":5730:5748  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":5709:5721  SafeMath.mul */\n      tag_122\n        /* \"contracts/Stakable.sol\":5709:5749  SafeMath.mul(amount, stakingPenaltyRate) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Stakable.sol\":5751:5755  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":5696:5708  SafeMath.div */\n      tag_123\n        /* \"contracts/Stakable.sol\":5696:5756  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Stakable.sol\":5770:5830  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_124\n        /* \"contracts/Stakable.sol\":5783:5823  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_125\n        /* \"contracts/Stakable.sol\":5796:5802  reward */\n      dup6\n        /* \"contracts/Stakable.sol\":5804:5822  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":5783:5795  SafeMath.mul */\n      tag_122\n        /* \"contracts/Stakable.sol\":5783:5823  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Stakable.sol\":5825:5829  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":5770:5782  SafeMath.div */\n      tag_123\n        /* \"contracts/Stakable.sol\":5770:5830  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Stakable.sol\":5675:5840  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":5538:5847  function calculatePenalty(uint256 amount, uint256 reward)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":2916:3048  function _calculateWeek(uint256 input) internal view returns (uint256) {... */\n    tag_79:\n        /* \"contracts/Stakable.sol\":2978:2985  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3004:3041  (block.timestamp - input).div(7 days) */\n      tag_127\n        /* \"contracts/Stakable.sol\":3034:3040  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":3023:3028  input */\n      dup4\n        /* \"contracts/Stakable.sol\":3005:3020  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":3005:3028  block.timestamp - input */\n      tag_128\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_128:\n        /* \"contracts/Stakable.sol\":3004:3033  (block.timestamp - input).div */\n      tag_123\n      swap1\n        /* \"contracts/Stakable.sol\":3004:3041  (block.timestamp - input).div(7 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/Stakable.sol\":2997:3041  return (block.timestamp - input).div(7 days) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":2916:3048  function _calculateWeek(uint256 input) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":8473:8652  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_82:\n        /* \"contracts/Stakable.sol\":8568:8575  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":8637:8645  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stakable.sol\":8629:8633  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":8614:8625  airdropRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":8600:8611  stakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":8600:8625  stakeAmount * airdropRate */\n      tag_130\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_130:\n        /* \"contracts/Stakable.sol\":8599:8633  (stakeAmount * airdropRate) / 1000 */\n      tag_131\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_131:\n        /* \"contracts/Stakable.sol\":8598:8645  ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      tag_132\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_132:\n        /* \"contracts/Stakable.sol\":8591:8645  return ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":8473:8652  function _calculateAirdrop(uint256 stakeAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4690:5091  function calculateStakingDuration(uint256 since_)... */\n    tag_114:\n        /* \"contracts/Stakable.sol\":4787:4794  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":4827:4828  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":4818:4824  since_ */\n      dup3\n        /* \"contracts/Stakable.sol\":4818:4828  since_ > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":4810:4850  require(since_ > 0, \"Error timestamp 0\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/Stakable.sol\":4932:5084  SafeMath.div(... */\n      tag_137\n        /* \"contracts/Stakable.sol\":4991:4995  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":4981:4987  since_ */\n      dup4\n        /* \"contracts/Stakable.sol\":4963:4978  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":4963:4987  block.timestamp - since_ */\n      tag_138\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_138:\n        /* \"contracts/Stakable.sol\":4962:4995  (block.timestamp - since_) * 1e24 */\n      tag_139\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_139:\n        /* \"contracts/Stakable.sol\":5013:5021  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":4932:5084  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":4932:4944  SafeMath.div */\n      tag_140\n        /* \"contracts/Stakable.sol\":4932:5084  SafeMath.div(... */\n      jump\t// in\n    tag_137:\n        /* \"contracts/Stakable.sol\":4913:5084  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":4690:5091  function calculateStakingDuration(uint256 since_)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_142\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_144\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5831:5832  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5828  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      swap1\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_149\n      jumpi\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n    tag_149:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5861:5873  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_67:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_153:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_154:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:198   */\n    tag_155:\n        /* \"#utility.yul\":167:191   */\n      tag_194\n        /* \"#utility.yul\":185:190   */\n      dup2\n        /* \"#utility.yul\":167:191   */\n      tag_154\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":162:165   */\n      dup3\n        /* \"#utility.yul\":155:192   */\n      mstore\n        /* \"#utility.yul\":90:198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":204:330   */\n    tag_156:\n        /* \"#utility.yul\":241:248   */\n      0x00\n        /* \"#utility.yul\":281:323   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":274:279   */\n      dup3\n        /* \"#utility.yul\":270:324   */\n      and\n        /* \"#utility.yul\":259:324   */\n      swap1\n      pop\n        /* \"#utility.yul\":204:330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":336:432   */\n    tag_157:\n        /* \"#utility.yul\":373:380   */\n      0x00\n        /* \"#utility.yul\":402:426   */\n      tag_197\n        /* \"#utility.yul\":420:425   */\n      dup3\n        /* \"#utility.yul\":402:426   */\n      tag_156\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":391:426   */\n      swap1\n      pop\n        /* \"#utility.yul\":336:432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":438:546   */\n    tag_158:\n        /* \"#utility.yul\":515:539   */\n      tag_199\n        /* \"#utility.yul\":533:538   */\n      dup2\n        /* \"#utility.yul\":515:539   */\n      tag_157\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":510:513   */\n      dup3\n        /* \"#utility.yul\":503:540   */\n      mstore\n        /* \"#utility.yul\":438:546   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":606:2000   */\n    tag_159:\n        /* \"#utility.yul\":737:741   */\n      0xe0\n        /* \"#utility.yul\":732:735   */\n      dup3\n        /* \"#utility.yul\":728:742   */\n      add\n        /* \"#utility.yul\":824:828   */\n      0x00\n        /* \"#utility.yul\":817:822   */\n      dup3\n        /* \"#utility.yul\":813:829   */\n      add\n        /* \"#utility.yul\":807:830   */\n      mload\n        /* \"#utility.yul\":843:906   */\n      tag_201\n        /* \"#utility.yul\":900:904   */\n      0x00\n        /* \"#utility.yul\":895:898   */\n      dup6\n        /* \"#utility.yul\":891:905   */\n      add\n        /* \"#utility.yul\":877:889   */\n      dup3\n        /* \"#utility.yul\":843:906   */\n      tag_158\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":752:916   */\n      pop\n        /* \"#utility.yul\":1000:1004   */\n      0x20\n        /* \"#utility.yul\":993:998   */\n      dup3\n        /* \"#utility.yul\":989:1005   */\n      add\n        /* \"#utility.yul\":983:1006   */\n      mload\n        /* \"#utility.yul\":1019:1082   */\n      tag_202\n        /* \"#utility.yul\":1076:1080   */\n      0x20\n        /* \"#utility.yul\":1071:1074   */\n      dup6\n        /* \"#utility.yul\":1067:1081   */\n      add\n        /* \"#utility.yul\":1053:1065   */\n      dup3\n        /* \"#utility.yul\":1019:1082   */\n      tag_155\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":926:1092   */\n      pop\n        /* \"#utility.yul\":1175:1179   */\n      0x40\n        /* \"#utility.yul\":1168:1173   */\n      dup3\n        /* \"#utility.yul\":1164:1180   */\n      add\n        /* \"#utility.yul\":1158:1181   */\n      mload\n        /* \"#utility.yul\":1194:1257   */\n      tag_203\n        /* \"#utility.yul\":1251:1255   */\n      0x40\n        /* \"#utility.yul\":1246:1249   */\n      dup6\n        /* \"#utility.yul\":1242:1256   */\n      add\n        /* \"#utility.yul\":1228:1240   */\n      dup3\n        /* \"#utility.yul\":1194:1257   */\n      tag_155\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1102:1267   */\n      pop\n        /* \"#utility.yul\":1354:1358   */\n      0x60\n        /* \"#utility.yul\":1347:1352   */\n      dup3\n        /* \"#utility.yul\":1343:1359   */\n      add\n        /* \"#utility.yul\":1337:1360   */\n      mload\n        /* \"#utility.yul\":1373:1436   */\n      tag_204\n        /* \"#utility.yul\":1430:1434   */\n      0x60\n        /* \"#utility.yul\":1425:1428   */\n      dup6\n        /* \"#utility.yul\":1421:1435   */\n      add\n        /* \"#utility.yul\":1407:1419   */\n      dup3\n        /* \"#utility.yul\":1373:1436   */\n      tag_155\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1277:1446   */\n      pop\n        /* \"#utility.yul\":1541:1545   */\n      0x80\n        /* \"#utility.yul\":1534:1539   */\n      dup3\n        /* \"#utility.yul\":1530:1546   */\n      add\n        /* \"#utility.yul\":1524:1547   */\n      mload\n        /* \"#utility.yul\":1560:1623   */\n      tag_205\n        /* \"#utility.yul\":1617:1621   */\n      0x80\n        /* \"#utility.yul\":1612:1615   */\n      dup6\n        /* \"#utility.yul\":1608:1622   */\n      add\n        /* \"#utility.yul\":1594:1606   */\n      dup3\n        /* \"#utility.yul\":1560:1623   */\n      tag_155\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1456:1633   */\n      pop\n        /* \"#utility.yul\":1720:1724   */\n      0xa0\n        /* \"#utility.yul\":1713:1718   */\n      dup3\n        /* \"#utility.yul\":1709:1725   */\n      add\n        /* \"#utility.yul\":1703:1726   */\n      mload\n        /* \"#utility.yul\":1739:1802   */\n      tag_206\n        /* \"#utility.yul\":1796:1800   */\n      0xa0\n        /* \"#utility.yul\":1791:1794   */\n      dup6\n        /* \"#utility.yul\":1787:1801   */\n      add\n        /* \"#utility.yul\":1773:1785   */\n      dup3\n        /* \"#utility.yul\":1739:1802   */\n      tag_155\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1643:1812   */\n      pop\n        /* \"#utility.yul\":1901:1905   */\n      0xc0\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1890:1906   */\n      add\n        /* \"#utility.yul\":1884:1907   */\n      mload\n        /* \"#utility.yul\":1920:1983   */\n      tag_207\n        /* \"#utility.yul\":1977:1981   */\n      0xc0\n        /* \"#utility.yul\":1972:1975   */\n      dup6\n        /* \"#utility.yul\":1968:1982   */\n      add\n        /* \"#utility.yul\":1954:1966   */\n      dup3\n        /* \"#utility.yul\":1920:1983   */\n      tag_155\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1822:1993   */\n      pop\n        /* \"#utility.yul\":706:2000   */\n      pop\n        /* \"#utility.yul\":606:2000   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2078:2829   */\n    tag_160:\n        /* \"#utility.yul\":2237:2243   */\n      0x0120\n        /* \"#utility.yul\":2232:2235   */\n      dup3\n        /* \"#utility.yul\":2228:2244   */\n      add\n        /* \"#utility.yul\":2334:2338   */\n      0x00\n        /* \"#utility.yul\":2327:2332   */\n      dup3\n        /* \"#utility.yul\":2323:2339   */\n      add\n        /* \"#utility.yul\":2317:2340   */\n      mload\n        /* \"#utility.yul\":2353:2416   */\n      tag_209\n        /* \"#utility.yul\":2410:2414   */\n      0x00\n        /* \"#utility.yul\":2405:2408   */\n      dup6\n        /* \"#utility.yul\":2401:2415   */\n      add\n        /* \"#utility.yul\":2387:2399   */\n      dup3\n        /* \"#utility.yul\":2353:2416   */\n      tag_155\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2254:2426   */\n      pop\n        /* \"#utility.yul\":2511:2515   */\n      0x20\n        /* \"#utility.yul\":2504:2509   */\n      dup3\n        /* \"#utility.yul\":2500:2516   */\n      add\n        /* \"#utility.yul\":2494:2517   */\n      mload\n        /* \"#utility.yul\":2530:2593   */\n      tag_210\n        /* \"#utility.yul\":2587:2591   */\n      0x20\n        /* \"#utility.yul\":2582:2585   */\n      dup6\n        /* \"#utility.yul\":2578:2592   */\n      add\n        /* \"#utility.yul\":2564:2576   */\n      dup3\n        /* \"#utility.yul\":2530:2593   */\n      tag_155\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2436:2603   */\n      pop\n        /* \"#utility.yul\":2686:2690   */\n      0x40\n        /* \"#utility.yul\":2679:2684   */\n      dup3\n        /* \"#utility.yul\":2675:2691   */\n      add\n        /* \"#utility.yul\":2669:2692   */\n      mload\n        /* \"#utility.yul\":2705:2812   */\n      tag_211\n        /* \"#utility.yul\":2806:2810   */\n      0x40\n        /* \"#utility.yul\":2801:2804   */\n      dup6\n        /* \"#utility.yul\":2797:2811   */\n      add\n        /* \"#utility.yul\":2783:2795   */\n      dup3\n        /* \"#utility.yul\":2705:2812   */\n      tag_159\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2613:2822   */\n      pop\n        /* \"#utility.yul\":2206:2829   */\n      pop\n        /* \"#utility.yul\":2078:2829   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2835:3182   */\n    tag_20:\n        /* \"#utility.yul\":2990:2994   */\n      0x00\n        /* \"#utility.yul\":3028:3031   */\n      0x0120\n        /* \"#utility.yul\":3017:3026   */\n      dup3\n        /* \"#utility.yul\":3013:3032   */\n      add\n        /* \"#utility.yul\":3005:3032   */\n      swap1\n      pop\n        /* \"#utility.yul\":3042:3175   */\n      tag_213\n        /* \"#utility.yul\":3172:3173   */\n      0x00\n        /* \"#utility.yul\":3161:3170   */\n      dup4\n        /* \"#utility.yul\":3157:3174   */\n      add\n        /* \"#utility.yul\":3148:3154   */\n      dup5\n        /* \"#utility.yul\":3042:3175   */\n      tag_160\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2835:3182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3188:3306   */\n    tag_161:\n        /* \"#utility.yul\":3275:3299   */\n      tag_215\n        /* \"#utility.yul\":3293:3298   */\n      dup2\n        /* \"#utility.yul\":3275:3299   */\n      tag_154\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3270:3273   */\n      dup3\n        /* \"#utility.yul\":3263:3300   */\n      mstore\n        /* \"#utility.yul\":3188:3306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3312:3534   */\n    tag_24:\n        /* \"#utility.yul\":3405:3409   */\n      0x00\n        /* \"#utility.yul\":3443:3445   */\n      0x20\n        /* \"#utility.yul\":3432:3441   */\n      dup3\n        /* \"#utility.yul\":3428:3446   */\n      add\n        /* \"#utility.yul\":3420:3446   */\n      swap1\n      pop\n        /* \"#utility.yul\":3456:3527   */\n      tag_217\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3513:3522   */\n      dup4\n        /* \"#utility.yul\":3509:3526   */\n      add\n        /* \"#utility.yul\":3500:3506   */\n      dup5\n        /* \"#utility.yul\":3456:3527   */\n      tag_161\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3312:3534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3621:3738   */\n    tag_163:\n        /* \"#utility.yul\":3730:3731   */\n      0x00\n        /* \"#utility.yul\":3727:3728   */\n      dup1\n        /* \"#utility.yul\":3720:3732   */\n      revert\n        /* \"#utility.yul\":3867:3989   */\n    tag_165:\n        /* \"#utility.yul\":3940:3964   */\n      tag_222\n        /* \"#utility.yul\":3958:3963   */\n      dup2\n        /* \"#utility.yul\":3940:3964   */\n      tag_154\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3933:3938   */\n      dup2\n        /* \"#utility.yul\":3930:3965   */\n      eq\n        /* \"#utility.yul\":3920:3983   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3979:3980   */\n      0x00\n        /* \"#utility.yul\":3976:3977   */\n      dup1\n        /* \"#utility.yul\":3969:3981   */\n      revert\n        /* \"#utility.yul\":3920:3983   */\n    tag_223:\n        /* \"#utility.yul\":3867:3989   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3995:4134   */\n    tag_166:\n        /* \"#utility.yul\":4041:4046   */\n      0x00\n        /* \"#utility.yul\":4079:4085   */\n      dup2\n        /* \"#utility.yul\":4066:4086   */\n      calldataload\n        /* \"#utility.yul\":4057:4086   */\n      swap1\n      pop\n        /* \"#utility.yul\":4095:4128   */\n      tag_225\n        /* \"#utility.yul\":4122:4127   */\n      dup2\n        /* \"#utility.yul\":4095:4128   */\n      tag_165\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3995:4134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4140:4469   */\n    tag_32:\n        /* \"#utility.yul\":4199:4205   */\n      0x00\n        /* \"#utility.yul\":4248:4250   */\n      0x20\n        /* \"#utility.yul\":4236:4245   */\n      dup3\n        /* \"#utility.yul\":4227:4234   */\n      dup5\n        /* \"#utility.yul\":4223:4246   */\n      sub\n        /* \"#utility.yul\":4219:4251   */\n      slt\n        /* \"#utility.yul\":4216:4335   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":4254:4333   */\n      tag_228\n      tag_163\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4216:4335   */\n    tag_227:\n        /* \"#utility.yul\":4374:4375   */\n      0x00\n        /* \"#utility.yul\":4399:4452   */\n      tag_229\n        /* \"#utility.yul\":4444:4451   */\n      dup5\n        /* \"#utility.yul\":4435:4441   */\n      dup3\n        /* \"#utility.yul\":4424:4433   */\n      dup6\n        /* \"#utility.yul\":4420:4442   */\n      add\n        /* \"#utility.yul\":4399:4452   */\n      tag_166\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4389:4452   */\n      swap2\n      pop\n        /* \"#utility.yul\":4345:4462   */\n      pop\n        /* \"#utility.yul\":4140:4469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4475:4597   */\n    tag_167:\n        /* \"#utility.yul\":4548:4572   */\n      tag_231\n        /* \"#utility.yul\":4566:4571   */\n      dup2\n        /* \"#utility.yul\":4548:4572   */\n      tag_157\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4541:4546   */\n      dup2\n        /* \"#utility.yul\":4538:4573   */\n      eq\n        /* \"#utility.yul\":4528:4591   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4587:4588   */\n      0x00\n        /* \"#utility.yul\":4584:4585   */\n      dup1\n        /* \"#utility.yul\":4577:4589   */\n      revert\n        /* \"#utility.yul\":4528:4591   */\n    tag_232:\n        /* \"#utility.yul\":4475:4597   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4603:4742   */\n    tag_168:\n        /* \"#utility.yul\":4649:4654   */\n      0x00\n        /* \"#utility.yul\":4687:4693   */\n      dup2\n        /* \"#utility.yul\":4674:4694   */\n      calldataload\n        /* \"#utility.yul\":4665:4694   */\n      swap1\n      pop\n        /* \"#utility.yul\":4703:4736   */\n      tag_234\n        /* \"#utility.yul\":4730:4735   */\n      dup2\n        /* \"#utility.yul\":4703:4736   */\n      tag_167\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4603:4742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4748:5077   */\n    tag_37:\n        /* \"#utility.yul\":4807:4813   */\n      0x00\n        /* \"#utility.yul\":4856:4858   */\n      0x20\n        /* \"#utility.yul\":4844:4853   */\n      dup3\n        /* \"#utility.yul\":4835:4842   */\n      dup5\n        /* \"#utility.yul\":4831:4854   */\n      sub\n        /* \"#utility.yul\":4827:4859   */\n      slt\n        /* \"#utility.yul\":4824:4943   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":4862:4941   */\n      tag_237\n      tag_163\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4824:4943   */\n    tag_236:\n        /* \"#utility.yul\":4982:4983   */\n      0x00\n        /* \"#utility.yul\":5007:5060   */\n      tag_238\n        /* \"#utility.yul\":5052:5059   */\n      dup5\n        /* \"#utility.yul\":5043:5049   */\n      dup3\n        /* \"#utility.yul\":5032:5041   */\n      dup6\n        /* \"#utility.yul\":5028:5050   */\n      add\n        /* \"#utility.yul\":5007:5060   */\n      tag_168\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4997:5060   */\n      swap2\n      pop\n        /* \"#utility.yul\":4953:5070   */\n      pop\n        /* \"#utility.yul\":4748:5077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5083:5173   */\n    tag_169:\n        /* \"#utility.yul\":5117:5124   */\n      0x00\n        /* \"#utility.yul\":5160:5165   */\n      dup2\n        /* \"#utility.yul\":5153:5166   */\n      iszero\n        /* \"#utility.yul\":5146:5167   */\n      iszero\n        /* \"#utility.yul\":5135:5167   */\n      swap1\n      pop\n        /* \"#utility.yul\":5083:5173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5179:5288   */\n    tag_170:\n        /* \"#utility.yul\":5260:5281   */\n      tag_241\n        /* \"#utility.yul\":5275:5280   */\n      dup2\n        /* \"#utility.yul\":5260:5281   */\n      tag_169\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5255:5258   */\n      dup3\n        /* \"#utility.yul\":5248:5282   */\n      mstore\n        /* \"#utility.yul\":5179:5288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5504   */\n    tag_40:\n        /* \"#utility.yul\":5381:5385   */\n      0x00\n        /* \"#utility.yul\":5419:5421   */\n      0x20\n        /* \"#utility.yul\":5408:5417   */\n      dup3\n        /* \"#utility.yul\":5404:5422   */\n      add\n        /* \"#utility.yul\":5396:5422   */\n      swap1\n      pop\n        /* \"#utility.yul\":5432:5497   */\n      tag_243\n        /* \"#utility.yul\":5494:5495   */\n      0x00\n        /* \"#utility.yul\":5483:5492   */\n      dup4\n        /* \"#utility.yul\":5479:5496   */\n      add\n        /* \"#utility.yul\":5470:5476   */\n      dup5\n        /* \"#utility.yul\":5432:5497   */\n      tag_170\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5294:5504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5510:5679   */\n    tag_171:\n        /* \"#utility.yul\":5594:5605   */\n      0x00\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5623:5626   */\n      dup3\n        /* \"#utility.yul\":5616:5635   */\n      mstore\n        /* \"#utility.yul\":5668:5672   */\n      0x20\n        /* \"#utility.yul\":5663:5666   */\n      dup3\n        /* \"#utility.yul\":5659:5673   */\n      add\n        /* \"#utility.yul\":5644:5673   */\n      swap1\n      pop\n        /* \"#utility.yul\":5510:5679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5685:5854   */\n    tag_172:\n        /* \"#utility.yul\":5825:5846   */\n      0x596f7520617265206e6f74206120766f74657200000000000000000000000000\n        /* \"#utility.yul\":5821:5822   */\n      0x00\n        /* \"#utility.yul\":5813:5819   */\n      dup3\n        /* \"#utility.yul\":5809:5823   */\n      add\n        /* \"#utility.yul\":5802:5847   */\n      mstore\n        /* \"#utility.yul\":5685:5854   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5860:6226   */\n    tag_173:\n        /* \"#utility.yul\":6002:6005   */\n      0x00\n        /* \"#utility.yul\":6023:6090   */\n      tag_247\n        /* \"#utility.yul\":6087:6089   */\n      0x13\n        /* \"#utility.yul\":6082:6085   */\n      dup4\n        /* \"#utility.yul\":6023:6090   */\n      tag_171\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6016:6090   */\n      swap2\n      pop\n        /* \"#utility.yul\":6099:6192   */\n      tag_248\n        /* \"#utility.yul\":6188:6191   */\n      dup3\n        /* \"#utility.yul\":6099:6192   */\n      tag_172\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6217:6219   */\n      0x20\n        /* \"#utility.yul\":6212:6215   */\n      dup3\n        /* \"#utility.yul\":6208:6220   */\n      add\n        /* \"#utility.yul\":6201:6220   */\n      swap1\n      pop\n        /* \"#utility.yul\":5860:6226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6232:6651   */\n    tag_60:\n        /* \"#utility.yul\":6398:6402   */\n      0x00\n        /* \"#utility.yul\":6436:6438   */\n      0x20\n        /* \"#utility.yul\":6425:6434   */\n      dup3\n        /* \"#utility.yul\":6421:6439   */\n      add\n        /* \"#utility.yul\":6413:6439   */\n      swap1\n      pop\n        /* \"#utility.yul\":6485:6494   */\n      dup2\n        /* \"#utility.yul\":6479:6483   */\n      dup2\n        /* \"#utility.yul\":6475:6495   */\n      sub\n        /* \"#utility.yul\":6471:6472   */\n      0x00\n        /* \"#utility.yul\":6460:6469   */\n      dup4\n        /* \"#utility.yul\":6456:6473   */\n      add\n        /* \"#utility.yul\":6449:6496   */\n      mstore\n        /* \"#utility.yul\":6513:6644   */\n      tag_250\n        /* \"#utility.yul\":6639:6643   */\n      dup2\n        /* \"#utility.yul\":6513:6644   */\n      tag_173\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6505:6644   */\n      swap1\n      pop\n        /* \"#utility.yul\":6232:6651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6657:6829   */\n    tag_174:\n        /* \"#utility.yul\":6797:6821   */\n      0x596f752068617665206e6f7420766f7465642079657400000000000000000000\n        /* \"#utility.yul\":6793:6794   */\n      0x00\n        /* \"#utility.yul\":6785:6791   */\n      dup3\n        /* \"#utility.yul\":6781:6795   */\n      add\n        /* \"#utility.yul\":6774:6822   */\n      mstore\n        /* \"#utility.yul\":6657:6829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7201   */\n    tag_175:\n        /* \"#utility.yul\":6977:6980   */\n      0x00\n        /* \"#utility.yul\":6998:7065   */\n      tag_253\n        /* \"#utility.yul\":7062:7064   */\n      0x16\n        /* \"#utility.yul\":7057:7060   */\n      dup4\n        /* \"#utility.yul\":6998:7065   */\n      tag_171\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6991:7065   */\n      swap2\n      pop\n        /* \"#utility.yul\":7074:7167   */\n      tag_254\n        /* \"#utility.yul\":7163:7166   */\n      dup3\n        /* \"#utility.yul\":7074:7167   */\n      tag_174\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7192:7194   */\n      0x20\n        /* \"#utility.yul\":7187:7190   */\n      dup3\n        /* \"#utility.yul\":7183:7195   */\n      add\n        /* \"#utility.yul\":7176:7195   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:7201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7207:7626   */\n    tag_63:\n        /* \"#utility.yul\":7373:7377   */\n      0x00\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"#utility.yul\":7400:7409   */\n      dup3\n        /* \"#utility.yul\":7396:7414   */\n      add\n        /* \"#utility.yul\":7388:7414   */\n      swap1\n      pop\n        /* \"#utility.yul\":7460:7469   */\n      dup2\n        /* \"#utility.yul\":7454:7458   */\n      dup2\n        /* \"#utility.yul\":7450:7470   */\n      sub\n        /* \"#utility.yul\":7446:7447   */\n      0x00\n        /* \"#utility.yul\":7435:7444   */\n      dup4\n        /* \"#utility.yul\":7431:7448   */\n      add\n        /* \"#utility.yul\":7424:7471   */\n      mstore\n        /* \"#utility.yul\":7488:7619   */\n      tag_256\n        /* \"#utility.yul\":7614:7618   */\n      dup2\n        /* \"#utility.yul\":7488:7619   */\n      tag_175\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7480:7619   */\n      swap1\n      pop\n        /* \"#utility.yul\":7207:7626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7632:7812   */\n    tag_176:\n        /* \"#utility.yul\":7680:7757   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7677:7678   */\n      0x00\n        /* \"#utility.yul\":7670:7758   */\n      mstore\n        /* \"#utility.yul\":7777:7781   */\n      0x11\n        /* \"#utility.yul\":7774:7775   */\n      0x04\n        /* \"#utility.yul\":7767:7782   */\n      mstore\n        /* \"#utility.yul\":7801:7805   */\n      0x24\n        /* \"#utility.yul\":7798:7799   */\n      0x00\n        /* \"#utility.yul\":7791:7806   */\n      revert\n        /* \"#utility.yul\":7818:8009   */\n    tag_65:\n        /* \"#utility.yul\":7858:7862   */\n      0x00\n        /* \"#utility.yul\":7878:7898   */\n      tag_259\n        /* \"#utility.yul\":7896:7897   */\n      dup3\n        /* \"#utility.yul\":7878:7898   */\n      tag_154\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7873:7898   */\n      swap2\n      pop\n        /* \"#utility.yul\":7912:7932   */\n      tag_260\n        /* \"#utility.yul\":7930:7931   */\n      dup4\n        /* \"#utility.yul\":7912:7932   */\n      tag_154\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7907:7932   */\n      swap3\n      pop\n        /* \"#utility.yul\":7951:7952   */\n      dup3\n        /* \"#utility.yul\":7948:7949   */\n      dup3\n        /* \"#utility.yul\":7945:7953   */\n      lt\n        /* \"#utility.yul\":7942:7976   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":7956:7974   */\n      tag_262\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7942:7976   */\n    tag_261:\n        /* \"#utility.yul\":8001:8002   */\n      dup3\n        /* \"#utility.yul\":7998:7999   */\n      dup3\n        /* \"#utility.yul\":7994:8003   */\n      sub\n        /* \"#utility.yul\":7986:8003   */\n      swap1\n      pop\n        /* \"#utility.yul\":7818:8009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8320   */\n    tag_77:\n        /* \"#utility.yul\":8055:8058   */\n      0x00\n        /* \"#utility.yul\":8074:8094   */\n      tag_264\n        /* \"#utility.yul\":8092:8093   */\n      dup3\n        /* \"#utility.yul\":8074:8094   */\n      tag_154\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8069:8094   */\n      swap2\n      pop\n        /* \"#utility.yul\":8108:8128   */\n      tag_265\n        /* \"#utility.yul\":8126:8127   */\n      dup4\n        /* \"#utility.yul\":8108:8128   */\n      tag_154\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8103:8128   */\n      swap3\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      dup3\n        /* \"#utility.yul\":8194:8260   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8190:8264   */\n      sub\n        /* \"#utility.yul\":8187:8188   */\n      dup3\n        /* \"#utility.yul\":8184:8265   */\n      gt\n        /* \"#utility.yul\":8181:8288   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":8268:8286   */\n      tag_267\n      tag_176\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8181:8288   */\n    tag_266:\n        /* \"#utility.yul\":8312:8313   */\n      dup3\n        /* \"#utility.yul\":8309:8310   */\n      dup3\n        /* \"#utility.yul\":8305:8314   */\n      add\n        /* \"#utility.yul\":8298:8314   */\n      swap1\n      pop\n        /* \"#utility.yul\":8015:8320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8326:8497   */\n    tag_177:\n        /* \"#utility.yul\":8466:8489   */\n      0x596f75206861766520766f746564206265666f72650000000000000000000000\n        /* \"#utility.yul\":8462:8463   */\n      0x00\n        /* \"#utility.yul\":8454:8460   */\n      dup3\n        /* \"#utility.yul\":8450:8464   */\n      add\n        /* \"#utility.yul\":8443:8490   */\n      mstore\n        /* \"#utility.yul\":8326:8497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8503:8869   */\n    tag_178:\n        /* \"#utility.yul\":8645:8648   */\n      0x00\n        /* \"#utility.yul\":8666:8733   */\n      tag_270\n        /* \"#utility.yul\":8730:8732   */\n      0x15\n        /* \"#utility.yul\":8725:8728   */\n      dup4\n        /* \"#utility.yul\":8666:8733   */\n      tag_171\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":8659:8733   */\n      swap2\n      pop\n        /* \"#utility.yul\":8742:8835   */\n      tag_271\n        /* \"#utility.yul\":8831:8834   */\n      dup3\n        /* \"#utility.yul\":8742:8835   */\n      tag_177\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8860:8862   */\n      0x20\n        /* \"#utility.yul\":8855:8858   */\n      dup3\n        /* \"#utility.yul\":8851:8863   */\n      add\n        /* \"#utility.yul\":8844:8863   */\n      swap1\n      pop\n        /* \"#utility.yul\":8503:8869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8875:9294   */\n    tag_91:\n        /* \"#utility.yul\":9041:9045   */\n      0x00\n        /* \"#utility.yul\":9079:9081   */\n      0x20\n        /* \"#utility.yul\":9068:9077   */\n      dup3\n        /* \"#utility.yul\":9064:9082   */\n      add\n        /* \"#utility.yul\":9056:9082   */\n      swap1\n      pop\n        /* \"#utility.yul\":9128:9137   */\n      dup2\n        /* \"#utility.yul\":9122:9126   */\n      dup2\n        /* \"#utility.yul\":9118:9138   */\n      sub\n        /* \"#utility.yul\":9114:9115   */\n      0x00\n        /* \"#utility.yul\":9103:9112   */\n      dup4\n        /* \"#utility.yul\":9099:9116   */\n      add\n        /* \"#utility.yul\":9092:9139   */\n      mstore\n        /* \"#utility.yul\":9156:9287   */\n      tag_273\n        /* \"#utility.yul\":9282:9286   */\n      dup2\n        /* \"#utility.yul\":9156:9287   */\n      tag_178\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9148:9287   */\n      swap1\n      pop\n        /* \"#utility.yul\":8875:9294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9300:9465   */\n    tag_179:\n        /* \"#utility.yul\":9440:9457   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9428:9434   */\n      dup3\n        /* \"#utility.yul\":9424:9438   */\n      add\n        /* \"#utility.yul\":9417:9458   */\n      mstore\n        /* \"#utility.yul\":9300:9465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9471:9837   */\n    tag_180:\n        /* \"#utility.yul\":9613:9616   */\n      0x00\n        /* \"#utility.yul\":9634:9701   */\n      tag_276\n        /* \"#utility.yul\":9698:9700   */\n      0x0f\n        /* \"#utility.yul\":9693:9696   */\n      dup4\n        /* \"#utility.yul\":9634:9701   */\n      tag_171\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9627:9701   */\n      swap2\n      pop\n        /* \"#utility.yul\":9710:9803   */\n      tag_277\n        /* \"#utility.yul\":9799:9802   */\n      dup3\n        /* \"#utility.yul\":9710:9803   */\n      tag_179\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9828:9830   */\n      0x20\n        /* \"#utility.yul\":9823:9826   */\n      dup3\n        /* \"#utility.yul\":9819:9831   */\n      add\n        /* \"#utility.yul\":9812:9831   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9843:10262   */\n    tag_96:\n        /* \"#utility.yul\":10009:10013   */\n      0x00\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10036:10045   */\n      dup3\n        /* \"#utility.yul\":10032:10050   */\n      add\n        /* \"#utility.yul\":10024:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":10096:10105   */\n      dup2\n        /* \"#utility.yul\":10090:10094   */\n      dup2\n        /* \"#utility.yul\":10086:10106   */\n      sub\n        /* \"#utility.yul\":10082:10083   */\n      0x00\n        /* \"#utility.yul\":10071:10080   */\n      dup4\n        /* \"#utility.yul\":10067:10084   */\n      add\n        /* \"#utility.yul\":10060:10107   */\n      mstore\n        /* \"#utility.yul\":10124:10255   */\n      tag_279\n        /* \"#utility.yul\":10250:10254   */\n      dup2\n        /* \"#utility.yul\":10124:10255   */\n      tag_180\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10116:10255   */\n      swap1\n      pop\n        /* \"#utility.yul\":9843:10262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10268:10448   */\n    tag_151:\n        /* \"#utility.yul\":10316:10393   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10313:10314   */\n      0x00\n        /* \"#utility.yul\":10306:10394   */\n      mstore\n        /* \"#utility.yul\":10413:10417   */\n      0x12\n        /* \"#utility.yul\":10410:10411   */\n      0x04\n        /* \"#utility.yul\":10403:10418   */\n      mstore\n        /* \"#utility.yul\":10437:10441   */\n      0x24\n        /* \"#utility.yul\":10434:10435   */\n      0x00\n        /* \"#utility.yul\":10427:10442   */\n      revert\n        /* \"#utility.yul\":10454:10639   */\n    tag_101:\n        /* \"#utility.yul\":10494:10495   */\n      0x00\n        /* \"#utility.yul\":10511:10531   */\n      tag_282\n        /* \"#utility.yul\":10529:10530   */\n      dup3\n        /* \"#utility.yul\":10511:10531   */\n      tag_154\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10506:10531   */\n      swap2\n      pop\n        /* \"#utility.yul\":10545:10565   */\n      tag_283\n        /* \"#utility.yul\":10563:10564   */\n      dup4\n        /* \"#utility.yul\":10545:10565   */\n      tag_154\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10540:10565   */\n      swap3\n      pop\n        /* \"#utility.yul\":10584:10585   */\n      dup3\n        /* \"#utility.yul\":10574:10609   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":10589:10607   */\n      tag_285\n      tag_151\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10574:10609   */\n    tag_284:\n        /* \"#utility.yul\":10631:10632   */\n      dup3\n        /* \"#utility.yul\":10628:10629   */\n      dup3\n        /* \"#utility.yul\":10624:10633   */\n      div\n        /* \"#utility.yul\":10619:10633   */\n      swap1\n      pop\n        /* \"#utility.yul\":10454:10639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10645:10818   */\n    tag_181:\n        /* \"#utility.yul\":10785:10810   */\n      0x566f74696e67206973206e6f7420617661696c61626c65000000000000000000\n        /* \"#utility.yul\":10781:10782   */\n      0x00\n        /* \"#utility.yul\":10773:10779   */\n      dup3\n        /* \"#utility.yul\":10769:10783   */\n      add\n        /* \"#utility.yul\":10762:10811   */\n      mstore\n        /* \"#utility.yul\":10645:10818   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10824:11190   */\n    tag_182:\n        /* \"#utility.yul\":10966:10969   */\n      0x00\n        /* \"#utility.yul\":10987:11054   */\n      tag_288\n        /* \"#utility.yul\":11051:11053   */\n      0x17\n        /* \"#utility.yul\":11046:11049   */\n      dup4\n        /* \"#utility.yul\":10987:11054   */\n      tag_171\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10980:11054   */\n      swap2\n      pop\n        /* \"#utility.yul\":11063:11156   */\n      tag_289\n        /* \"#utility.yul\":11152:11155   */\n      dup3\n        /* \"#utility.yul\":11063:11156   */\n      tag_181\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11181:11183   */\n      0x20\n        /* \"#utility.yul\":11176:11179   */\n      dup3\n        /* \"#utility.yul\":11172:11184   */\n      add\n        /* \"#utility.yul\":11165:11184   */\n      swap1\n      pop\n        /* \"#utility.yul\":10824:11190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11196:11615   */\n    tag_106:\n        /* \"#utility.yul\":11362:11366   */\n      0x00\n        /* \"#utility.yul\":11400:11402   */\n      0x20\n        /* \"#utility.yul\":11389:11398   */\n      dup3\n        /* \"#utility.yul\":11385:11403   */\n      add\n        /* \"#utility.yul\":11377:11403   */\n      swap1\n      pop\n        /* \"#utility.yul\":11449:11458   */\n      dup2\n        /* \"#utility.yul\":11443:11447   */\n      dup2\n        /* \"#utility.yul\":11439:11459   */\n      sub\n        /* \"#utility.yul\":11435:11436   */\n      0x00\n        /* \"#utility.yul\":11424:11433   */\n      dup4\n        /* \"#utility.yul\":11420:11437   */\n      add\n        /* \"#utility.yul\":11413:11460   */\n      mstore\n        /* \"#utility.yul\":11477:11608   */\n      tag_291\n        /* \"#utility.yul\":11603:11607   */\n      dup2\n        /* \"#utility.yul\":11477:11608   */\n      tag_182\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11469:11608   */\n      swap1\n      pop\n        /* \"#utility.yul\":11196:11615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11621:11785   */\n    tag_183:\n        /* \"#utility.yul\":11761:11777   */\n      0x4e6f205374616b6520466f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":11757:11758   */\n      0x00\n        /* \"#utility.yul\":11749:11755   */\n      dup3\n        /* \"#utility.yul\":11745:11759   */\n      add\n        /* \"#utility.yul\":11738:11778   */\n      mstore\n        /* \"#utility.yul\":11621:11785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11791:12157   */\n    tag_184:\n        /* \"#utility.yul\":11933:11936   */\n      0x00\n        /* \"#utility.yul\":11954:12021   */\n      tag_294\n        /* \"#utility.yul\":12018:12020   */\n      0x0e\n        /* \"#utility.yul\":12013:12016   */\n      dup4\n        /* \"#utility.yul\":11954:12021   */\n      tag_171\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11947:12021   */\n      swap2\n      pop\n        /* \"#utility.yul\":12030:12123   */\n      tag_295\n        /* \"#utility.yul\":12119:12122   */\n      dup3\n        /* \"#utility.yul\":12030:12123   */\n      tag_183\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":12148:12150   */\n      0x20\n        /* \"#utility.yul\":12143:12146   */\n      dup3\n        /* \"#utility.yul\":12139:12151   */\n      add\n        /* \"#utility.yul\":12132:12151   */\n      swap1\n      pop\n        /* \"#utility.yul\":11791:12157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12163:12582   */\n    tag_110:\n        /* \"#utility.yul\":12329:12333   */\n      0x00\n        /* \"#utility.yul\":12367:12369   */\n      0x20\n        /* \"#utility.yul\":12356:12365   */\n      dup3\n        /* \"#utility.yul\":12352:12370   */\n      add\n        /* \"#utility.yul\":12344:12370   */\n      swap1\n      pop\n        /* \"#utility.yul\":12416:12425   */\n      dup2\n        /* \"#utility.yul\":12410:12414   */\n      dup2\n        /* \"#utility.yul\":12406:12426   */\n      sub\n        /* \"#utility.yul\":12402:12403   */\n      0x00\n        /* \"#utility.yul\":12391:12400   */\n      dup4\n        /* \"#utility.yul\":12387:12404   */\n      add\n        /* \"#utility.yul\":12380:12427   */\n      mstore\n        /* \"#utility.yul\":12444:12575   */\n      tag_297\n        /* \"#utility.yul\":12570:12574   */\n      dup2\n        /* \"#utility.yul\":12444:12575   */\n      tag_184\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":12436:12575   */\n      swap1\n      pop\n        /* \"#utility.yul\":12163:12582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12588:12936   */\n    tag_116:\n        /* \"#utility.yul\":12628:12635   */\n      0x00\n        /* \"#utility.yul\":12651:12671   */\n      tag_299\n        /* \"#utility.yul\":12669:12670   */\n      dup3\n        /* \"#utility.yul\":12651:12671   */\n      tag_154\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":12646:12671   */\n      swap2\n      pop\n        /* \"#utility.yul\":12685:12705   */\n      tag_300\n        /* \"#utility.yul\":12703:12704   */\n      dup4\n        /* \"#utility.yul\":12685:12705   */\n      tag_154\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12680:12705   */\n      swap3\n      pop\n        /* \"#utility.yul\":12873:12874   */\n      dup2\n        /* \"#utility.yul\":12805:12871   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12801:12875   */\n      div\n        /* \"#utility.yul\":12798:12799   */\n      dup4\n        /* \"#utility.yul\":12795:12876   */\n      gt\n        /* \"#utility.yul\":12790:12791   */\n      dup3\n        /* \"#utility.yul\":12783:12792   */\n      iszero\n        /* \"#utility.yul\":12776:12793   */\n      iszero\n        /* \"#utility.yul\":12772:12877   */\n      and\n        /* \"#utility.yul\":12769:12900   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":12880:12898   */\n      tag_302\n      tag_176\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":12769:12900   */\n    tag_301:\n        /* \"#utility.yul\":12928:12929   */\n      dup3\n        /* \"#utility.yul\":12925:12926   */\n      dup3\n        /* \"#utility.yul\":12921:12930   */\n      mul\n        /* \"#utility.yul\":12910:12930   */\n      swap1\n      pop\n        /* \"#utility.yul\":12588:12936   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12942:13109   */\n    tag_185:\n        /* \"#utility.yul\":13082:13101   */\n      0x4572726f722074696d657374616d702030000000000000000000000000000000\n        /* \"#utility.yul\":13078:13079   */\n      0x00\n        /* \"#utility.yul\":13070:13076   */\n      dup3\n        /* \"#utility.yul\":13066:13080   */\n      add\n        /* \"#utility.yul\":13059:13102   */\n      mstore\n        /* \"#utility.yul\":12942:13109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13115:13481   */\n    tag_186:\n        /* \"#utility.yul\":13257:13260   */\n      0x00\n        /* \"#utility.yul\":13278:13345   */\n      tag_305\n        /* \"#utility.yul\":13342:13344   */\n      0x11\n        /* \"#utility.yul\":13337:13340   */\n      dup4\n        /* \"#utility.yul\":13278:13345   */\n      tag_171\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13271:13345   */\n      swap2\n      pop\n        /* \"#utility.yul\":13354:13447   */\n      tag_306\n        /* \"#utility.yul\":13443:13446   */\n      dup3\n        /* \"#utility.yul\":13354:13447   */\n      tag_185\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13472:13474   */\n      0x20\n        /* \"#utility.yul\":13467:13470   */\n      dup3\n        /* \"#utility.yul\":13463:13475   */\n      add\n        /* \"#utility.yul\":13456:13475   */\n      swap1\n      pop\n        /* \"#utility.yul\":13115:13481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13487:13906   */\n    tag_136:\n        /* \"#utility.yul\":13653:13657   */\n      0x00\n        /* \"#utility.yul\":13691:13693   */\n      0x20\n        /* \"#utility.yul\":13680:13689   */\n      dup3\n        /* \"#utility.yul\":13676:13694   */\n      add\n        /* \"#utility.yul\":13668:13694   */\n      swap1\n      pop\n        /* \"#utility.yul\":13740:13749   */\n      dup2\n        /* \"#utility.yul\":13734:13738   */\n      dup2\n        /* \"#utility.yul\":13730:13750   */\n      sub\n        /* \"#utility.yul\":13726:13727   */\n      0x00\n        /* \"#utility.yul\":13715:13724   */\n      dup4\n        /* \"#utility.yul\":13711:13728   */\n      add\n        /* \"#utility.yul\":13704:13751   */\n      mstore\n        /* \"#utility.yul\":13768:13899   */\n      tag_308\n        /* \"#utility.yul\":13894:13898   */\n      dup2\n        /* \"#utility.yul\":13768:13899   */\n      tag_186\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":13760:13899   */\n      swap1\n      pop\n        /* \"#utility.yul\":13487:13906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13912:14011   */\n    tag_187:\n        /* \"#utility.yul\":13964:13970   */\n      0x00\n        /* \"#utility.yul\":13998:14003   */\n      dup2\n        /* \"#utility.yul\":13992:14004   */\n      mload\n        /* \"#utility.yul\":13982:14004   */\n      swap1\n      pop\n        /* \"#utility.yul\":13912:14011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14017:14324   */\n    tag_188:\n        /* \"#utility.yul\":14085:14086   */\n      0x00\n        /* \"#utility.yul\":14095:14208   */\n    tag_311:\n        /* \"#utility.yul\":14109:14115   */\n      dup4\n        /* \"#utility.yul\":14106:14107   */\n      dup2\n        /* \"#utility.yul\":14103:14116   */\n      lt\n        /* \"#utility.yul\":14095:14208   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":14194:14195   */\n      dup1\n        /* \"#utility.yul\":14189:14192   */\n      dup3\n        /* \"#utility.yul\":14185:14196   */\n      add\n        /* \"#utility.yul\":14179:14197   */\n      mload\n        /* \"#utility.yul\":14175:14176   */\n      dup2\n        /* \"#utility.yul\":14170:14173   */\n      dup5\n        /* \"#utility.yul\":14166:14177   */\n      add\n        /* \"#utility.yul\":14159:14198   */\n      mstore\n        /* \"#utility.yul\":14131:14133   */\n      0x20\n        /* \"#utility.yul\":14128:14129   */\n      dup2\n        /* \"#utility.yul\":14124:14134   */\n      add\n        /* \"#utility.yul\":14119:14134   */\n      swap1\n      pop\n        /* \"#utility.yul\":14095:14208   */\n      jump(tag_311)\n    tag_313:\n        /* \"#utility.yul\":14226:14232   */\n      dup4\n        /* \"#utility.yul\":14223:14224   */\n      dup2\n        /* \"#utility.yul\":14220:14233   */\n      gt\n        /* \"#utility.yul\":14217:14318   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":14306:14307   */\n      0x00\n        /* \"#utility.yul\":14297:14303   */\n      dup5\n        /* \"#utility.yul\":14292:14295   */\n      dup5\n        /* \"#utility.yul\":14288:14304   */\n      add\n        /* \"#utility.yul\":14281:14308   */\n      mstore\n        /* \"#utility.yul\":14217:14318   */\n    tag_314:\n        /* \"#utility.yul\":14066:14324   */\n      pop\n        /* \"#utility.yul\":14017:14324   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14330:14432   */\n    tag_189:\n        /* \"#utility.yul\":14371:14377   */\n      0x00\n        /* \"#utility.yul\":14422:14424   */\n      0x1f\n        /* \"#utility.yul\":14418:14425   */\n      not\n        /* \"#utility.yul\":14413:14415   */\n      0x1f\n        /* \"#utility.yul\":14406:14411   */\n      dup4\n        /* \"#utility.yul\":14402:14416   */\n      add\n        /* \"#utility.yul\":14398:14426   */\n      and\n        /* \"#utility.yul\":14388:14426   */\n      swap1\n      pop\n        /* \"#utility.yul\":14330:14432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14438:14802   */\n    tag_190:\n        /* \"#utility.yul\":14526:14529   */\n      0x00\n        /* \"#utility.yul\":14554:14593   */\n      tag_317\n        /* \"#utility.yul\":14587:14592   */\n      dup3\n        /* \"#utility.yul\":14554:14593   */\n      tag_187\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":14609:14680   */\n      tag_318\n        /* \"#utility.yul\":14673:14679   */\n      dup2\n        /* \"#utility.yul\":14668:14671   */\n      dup6\n        /* \"#utility.yul\":14609:14680   */\n      tag_171\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14602:14680   */\n      swap4\n      pop\n        /* \"#utility.yul\":14689:14741   */\n      tag_319\n        /* \"#utility.yul\":14734:14740   */\n      dup2\n        /* \"#utility.yul\":14729:14732   */\n      dup6\n        /* \"#utility.yul\":14722:14726   */\n      0x20\n        /* \"#utility.yul\":14715:14720   */\n      dup7\n        /* \"#utility.yul\":14711:14727   */\n      add\n        /* \"#utility.yul\":14689:14741   */\n      tag_188\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14766:14795   */\n      tag_320\n        /* \"#utility.yul\":14788:14794   */\n      dup2\n        /* \"#utility.yul\":14766:14795   */\n      tag_189\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":14761:14764   */\n      dup5\n        /* \"#utility.yul\":14757:14796   */\n      add\n        /* \"#utility.yul\":14750:14796   */\n      swap2\n      pop\n        /* \"#utility.yul\":14530:14802   */\n      pop\n        /* \"#utility.yul\":14438:14802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14808:15121   */\n    tag_148:\n        /* \"#utility.yul\":14921:14925   */\n      0x00\n        /* \"#utility.yul\":14959:14961   */\n      0x20\n        /* \"#utility.yul\":14948:14957   */\n      dup3\n        /* \"#utility.yul\":14944:14962   */\n      add\n        /* \"#utility.yul\":14936:14962   */\n      swap1\n      pop\n        /* \"#utility.yul\":15008:15017   */\n      dup2\n        /* \"#utility.yul\":15002:15006   */\n      dup2\n        /* \"#utility.yul\":14998:15018   */\n      sub\n        /* \"#utility.yul\":14994:14995   */\n      0x00\n        /* \"#utility.yul\":14983:14992   */\n      dup4\n        /* \"#utility.yul\":14979:14996   */\n      add\n        /* \"#utility.yul\":14972:15019   */\n      mstore\n        /* \"#utility.yul\":15036:15114   */\n      tag_322\n        /* \"#utility.yul\":15109:15113   */\n      dup2\n        /* \"#utility.yul\":15100:15106   */\n      dup5\n        /* \"#utility.yul\":15036:15114   */\n      tag_190\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":15028:15114   */\n      swap1\n      pop\n        /* \"#utility.yul\":14808:15121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e74d71534754eaaf60f723fa85dcbf1721de8782e4f2afb407610a175f12aa6f64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_359": {
									"entryPoint": null,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600f600081905550605060018190555061147d806100306000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a143a5f211610071578063a143a5f21461011c578063a3ec138d1461014c578063a7771ee31461017c578063b87da76d146101ac578063cb79c2e1146101ca578063cbb3e152146101e8576100a9565b8063070c8b74146100ae57806310486b6a146100b85780635f5300ff146100d6578063632a9a52146100f45780638891cf0d146100fe575b600080fd5b6100b6610206565b005b6100c06103e2565b6040516100cd9190610df2565b60405180910390f35b6100de610643565b6040516100eb9190610e1d565b60405180910390f35b6100fc610649565b005b61010661082d565b6040516101139190610e1d565b60405180910390f35b61013660048036038101906101319190610e69565b610833565b6040516101439190610e1d565b60405180910390f35b61016660048036038101906101619190610ec2565b61084b565b6040516101739190610f0a565b60405180910390f35b61019660048036038101906101919190610ec2565b610876565b6040516101a39190610f0a565b60405180910390f35b6101b461093e565b6040516101c19190610e1d565b60405180910390f35b6101d2610944565b6040516101df9190610e1d565b60405180910390f35b6101f061094a565b6040516101fd9190610e1d565b60405180910390f35b61020e610980565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029b90610f82565b60405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060009054906101000a900460ff1615151461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610fee565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060009054906101000a90505050600160076000600454815260200190815260200160002060008282546103d9919061103d565b92505081905550565b6103ea610c4d565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505081526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820154815250509050600060405180606001604052806000815260200160008152602001836000015181525090506105748160400151602001516109d1565b60006105838260400151610a17565b9050600042836040015160c0015111156105c1576000806105ac85604001516020015185610a77565b9150915080826105bc9190611071565b925050505b60006105d08560400151610ab3565b11156105ff5760006105e9846040015160200151610add565b905080846040015160800181815250505061060f565b6000836040015160800181815250505b8183604001516060018181525050808360200181815250508260400151602001518360000181815250508294505050505090565b60055481565b610651610980565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de90610f82565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060009054906101000a900460ff16151514610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078790611113565b60405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060006101000a81548160ff021916908315150217905550600160076000600454815260200190815260200160002060008282546108249190611071565b92505081905550565b60015481565b60076020528060005260406000206000915090505481565b60066020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de9061117f565b60405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60025481565b60005481565b600080600254146109785762093a8060025442610967919061103d565b61097191906111ce565b905061097d565b600090505b90565b600360009054906101000a900460ff166109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c69061124b565b60405180910390fd5b565b60008111610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b906112b7565b60405180910390fd5b50565b60008082602001511415610a2e5760009050610a72565b6a52b7d2dcc80cd2e4000000610a478360400151610b10565b8360a001518460200151610a5b91906112d7565b610a6591906112d7565b610a6f91906111ce565b90505b919050565b600080610a91610a8985600054610bbf565b6103e8610bd5565b610aa8610aa085600054610bbf565b6103e8610bd5565b915091509250929050565b6000610ad662093a808342610ac8919061103d565b610bd590919063ffffffff16565b9050919050565b60006301dfe2006103e860015484610af591906112d7565b610aff91906111ce565b610b0991906111ce565b9050919050565b6000808211610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b9061137d565b60405180910390fd5b610bb869d3c21bcecceda10000008342610b6e919061103d565b610b7891906112d7565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d70000000815250610beb565b9050919050565b60008183610bcd91906112d7565b905092915050565b60008183610be391906111ce565b905092915050565b60008083118290610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c299190611425565b60405180910390fd5b50828481610c4357610c4261119f565b5b0490509392505050565b60405180606001604052806000815260200160008152602001610c6e610c74565b81525090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b610cda81610cc7565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0b82610ce0565b9050919050565b610d1b81610d00565b82525050565b60e082016000820151610d376000850182610d12565b506020820151610d4a6020850182610cd1565b506040820151610d5d6040850182610cd1565b506060820151610d706060850182610cd1565b506080820151610d836080850182610cd1565b5060a0820151610d9660a0850182610cd1565b5060c0820151610da960c0850182610cd1565b50505050565b61012082016000820151610dc66000850182610cd1565b506020820151610dd96020850182610cd1565b506040820151610dec6040850182610d21565b50505050565b600061012082019050610e086000830184610daf565b92915050565b610e1781610cc7565b82525050565b6000602082019050610e326000830184610e0e565b92915050565b600080fd5b610e4681610cc7565b8114610e5157600080fd5b50565b600081359050610e6381610e3d565b92915050565b600060208284031215610e7f57610e7e610e38565b5b6000610e8d84828501610e54565b91505092915050565b610e9f81610d00565b8114610eaa57600080fd5b50565b600081359050610ebc81610e96565b92915050565b600060208284031215610ed857610ed7610e38565b5b6000610ee684828501610ead565b91505092915050565b60008115159050919050565b610f0481610eef565b82525050565b6000602082019050610f1f6000830184610efb565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f74206120766f74657200000000000000000000000000600082015250565b6000610f6c601383610f25565b9150610f7782610f36565b602082019050919050565b60006020820190508181036000830152610f9b81610f5f565b9050919050565b7f596f752068617665206e6f7420766f7465642079657400000000000000000000600082015250565b6000610fd8601683610f25565b9150610fe382610fa2565b602082019050919050565b6000602082019050818103600083015261100781610fcb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061104882610cc7565b915061105383610cc7565b9250828210156110665761106561100e565b5b828203905092915050565b600061107c82610cc7565b915061108783610cc7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110bc576110bb61100e565b5b828201905092915050565b7f596f75206861766520766f746564206265666f72650000000000000000000000600082015250565b60006110fd601583610f25565b9150611108826110c7565b602082019050919050565b6000602082019050818103600083015261112c816110f0565b9050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000611169600f83610f25565b915061117482611133565b602082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111d982610cc7565b91506111e483610cc7565b9250826111f4576111f361119f565b5b828204905092915050565b7f566f74696e67206973206e6f7420617661696c61626c65000000000000000000600082015250565b6000611235601783610f25565b9150611240826111ff565b602082019050919050565b6000602082019050818103600083015261126481611228565b9050919050565b7f4e6f205374616b6520466f756e64000000000000000000000000000000000000600082015250565b60006112a1600e83610f25565b91506112ac8261126b565b602082019050919050565b600060208201905081810360008301526112d081611294565b9050919050565b60006112e282610cc7565b91506112ed83610cc7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113265761132561100e565b5b828202905092915050565b7f4572726f722074696d657374616d702030000000000000000000000000000000600082015250565b6000611367601183610f25565b915061137282611331565b602082019050919050565b600060208201905081810360008301526113968161135a565b9050919050565b600081519050919050565b60005b838110156113c65780820151818401526020810190506113ab565b838111156113d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006113f78261139d565b6114018185610f25565b93506114118185602086016113a8565b61141a816113db565b840191505092915050565b6000602082019050818103600083015261143f81846113ec565b90509291505056fea2646970667358221220e74d71534754eaaf60f723fa85dcbf1721de8782e4f2afb407610a175f12aa6f64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x50 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x147D DUP1 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA143A5F2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xA7771EE3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x1E8 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x980 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x34D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE POP SWAP1 POP PUSH2 0x574 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xA17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x5AC DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xA77 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 DUP3 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x5D0 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0xAB3 JUMP JUMPDEST GT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 PUSH2 0x5E9 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0xADD JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x651 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DE SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD EQ PUSH2 0x978 JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP PUSH2 0x97D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xA72 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xA47 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0xB10 JUMP JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA91 PUSH2 0xA89 DUP6 PUSH1 0x0 SLOAD PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xAA8 PUSH2 0xAA0 DUP6 PUSH1 0x0 SLOAD PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xBD5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD6 PUSH3 0x93A80 DUP4 TIMESTAMP PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0xBD5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4B SWAP1 PUSH2 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB8 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0xC43 JUMPI PUSH2 0xC42 PUSH2 0x119F JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6E PUSH2 0xC74 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B DUP3 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1B DUP2 PUSH2 0xD00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xD37 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xD4A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD5D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xD70 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xD83 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xD96 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xDA9 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xDC6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xDD9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xDEC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xD21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0xE08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE46 DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE63 DUP2 PUSH2 0xE3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8D DUP5 DUP3 DUP6 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE9F DUP2 PUSH2 0xD00 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBC DUP2 PUSH2 0xE96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE6 DUP5 DUP3 DUP6 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C PUSH1 0x13 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP3 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF9B DUP2 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F7420766F7465642079657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD8 PUSH1 0x16 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE3 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1007 DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1048 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1053 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x100E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107C DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BB PUSH2 0x100E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206861766520766F746564206265666F72650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH1 0x15 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1108 DUP3 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x112C DUP2 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0xF DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1198 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E4 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11F4 JUMPI PUSH2 0x11F3 PUSH2 0x119F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x566F74696E67206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1235 PUSH1 0x17 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1240 DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 PUSH2 0x1228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F205374616B6520466F756E64000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A1 PUSH1 0xE DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AC DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D0 DUP2 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E2 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x12ED DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1325 PUSH2 0x100E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1367 PUSH1 0x11 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1372 DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1396 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP3 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x1401 DUP2 DUP6 PUSH2 0xF25 JUMP JUMPDEST SWAP4 POP PUSH2 0x1411 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x141A DUP2 PUSH2 0x13DB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x143F DUP2 DUP5 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0x4D PUSH18 0x534754EAAF60F723FA85DCBF1721DE8782E4 CALLCODE 0xAF 0xB4 SMOD PUSH2 0xA17 0x5F SLT 0xAA PUSH16 0x64736F6C634300080B00330000000000 ",
							"sourceMap": "155:10795:1:-:0;;;767:142;;;;;;;;;;874:2;853:18;:23;;;;900:2;886:11;:16;;;;155:10795;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateAirdrop_933": {
									"entryPoint": 2781,
									"id": 933,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateWeek_470": {
									"entryPoint": 2739,
									"id": 470,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkUserStake_372": {
									"entryPoint": 2513,
									"id": 372,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkVotingStatus_381": {
									"entryPoint": 2432,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropRate_330": {
									"entryPoint": 2093,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_332": {
									"entryPoint": 2366,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropWeek_1007": {
									"entryPoint": 2378,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculatePenalty_678": {
									"entryPoint": 2679,
									"id": 678,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@calculateStakeReward_646": {
									"entryPoint": 2583,
									"id": 646,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateStakingDuration_615": {
									"entryPoint": 2832,
									"id": 615,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 3029,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 3051,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_915": {
									"entryPoint": 994,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isVoter_1049": {
									"entryPoint": 2166,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 3007,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@retractVote_1141": {
									"entryPoint": 518,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_328": {
									"entryPoint": 2372,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalVoters_338": {
									"entryPoint": 1603,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_1095": {
									"entryPoint": 1609,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votedUsers_347": {
									"entryPoint": 2099,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_343": {
									"entryPoint": 2123,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$403_memory_ptr_to_t_struct$_Stake_$403_memory_ptr": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$419_memory_ptr_to_t_struct$_StakingSummary_$419_memory_ptr_fromStack": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$419_memory_ptr__to_t_struct$_StakingSummary_$419_memory_ptr__fromStack_reversed": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15124:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "162:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "185:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "167:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "167:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "155:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "155:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "133:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "140:3:2",
														"type": ""
													}
												],
												"src": "90:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "249:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "259:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "274:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "259:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "231:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "241:7:2",
														"type": ""
													}
												],
												"src": "204:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "381:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "391:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "420:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "402:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "391:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "363:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "373:7:2",
														"type": ""
													}
												],
												"src": "336:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "515:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "503:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "481:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "488:3:2",
														"type": ""
													}
												],
												"src": "438:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "706:1294:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "716:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "737:4:2",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "720:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "752:164:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "787:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "817:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "824:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "813:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "813:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "807:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "791:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "877:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "895:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "900:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "891:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "843:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "843:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "843:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "926:166:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "963:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "993:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1000:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "989:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "989:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "983:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "967:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1053:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1071:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1076:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1067:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1019:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1019:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1019:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1102:165:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1138:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1168:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1175:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1158:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1142:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1228:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1246:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1251:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1242:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1242:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1194:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1194:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1317:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1347:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1354:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1343:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1343:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1337:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1321:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1407:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1425:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1430:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1421:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1421:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1373:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1373:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1456:177:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1504:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1534:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1541:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1530:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1530:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1524:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1524:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1508:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1594:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1612:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1617:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1608:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1608:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1560:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1560:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1560:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1643:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1683:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1713:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1720:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1703:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1687:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1773:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1791:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1796:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1787:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1787:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1739:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1739:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1822:171:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1864:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1901:4:2",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1890:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1890:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1884:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1884:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1868:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1954:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1972:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1977:4:2",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1968:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1968:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1920:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1920:63:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$403_memory_ptr_to_t_struct$_Stake_$403_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "693:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "700:3:2",
														"type": ""
													}
												],
												"src": "606:1394:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2206:623:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2216:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2232:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2237:6:2",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:16:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2220:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2254:172:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2327:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2334:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2323:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2323:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2317:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2301:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2387:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2405:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2410:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2401:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2353:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2353:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2436:167:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2474:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2504:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2511:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2500:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2500:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2494:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2494:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2478:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2564:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2582:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2587:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2578:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2578:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2530:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2530:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2613:209:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2649:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2679:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2686:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2675:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2675:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2669:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2669:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2653:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2783:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2801:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2806:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Stake_$403_memory_ptr_to_t_struct$_Stake_$403_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2705:77:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:107:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2705:107:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$419_memory_ptr_to_t_struct$_StakingSummary_$419_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2193:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2200:3:2",
														"type": ""
													}
												],
												"src": "2078:751:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2995:187:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3005:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3017:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:3:2",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3005:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3148:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3161:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3172:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3157:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$419_memory_ptr_to_t_struct$_StakingSummary_$419_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3042:105:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:133:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:133:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$419_memory_ptr__to_t_struct$_StakingSummary_$419_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2967:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2979:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2990:4:2",
														"type": ""
													}
												],
												"src": "2835:347:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3253:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3270:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3293:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3275:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3275:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3263:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3263:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3241:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3248:3:2",
														"type": ""
													}
												],
												"src": "3188:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3420:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3432:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3443:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3428:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3420:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3500:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3513:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3524:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3456:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3456:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3382:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3394:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3405:4:2",
														"type": ""
													}
												],
												"src": "3312:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3580:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3590:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3606:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3600:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3573:6:2",
														"type": ""
													}
												],
												"src": "3540:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3710:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3727:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3730:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3720:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3720:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3621:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3833:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3850:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3853:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3843:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3843:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3843:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3744:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3910:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3967:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3976:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3979:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3969:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3969:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3933:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3958:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3940:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3940:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3930:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3930:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3923:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:43:2"
															},
															"nodeType": "YulIf",
															"src": "3920:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3903:5:2",
														"type": ""
													}
												],
												"src": "3867:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4047:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4057:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4079:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4066:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4057:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4122:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4095:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4095:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4025:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4033:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4041:5:2",
														"type": ""
													}
												],
												"src": "3995:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4206:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4252:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4254:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4254:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4227:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4236:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4248:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4219:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:32:2"
															},
															"nodeType": "YulIf",
															"src": "4216:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4345:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4360:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4374:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4364:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4389:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4424:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4435:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4420:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4420:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4444:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4399:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4399:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4389:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4176:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4187:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4199:6:2",
														"type": ""
													}
												],
												"src": "4140:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4518:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4575:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4584:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4577:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4577:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4577:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4541:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4566:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4548:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4548:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4538:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4538:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:43:2"
															},
															"nodeType": "YulIf",
															"src": "4528:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4511:5:2",
														"type": ""
													}
												],
												"src": "4475:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4665:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4687:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4674:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4665:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4730:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4703:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4703:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4703:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4633:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4641:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4649:5:2",
														"type": ""
													}
												],
												"src": "4603:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4814:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4860:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4862:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4862:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4862:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4835:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4844:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4856:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4827:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:32:2"
															},
															"nodeType": "YulIf",
															"src": "4824:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4953:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4968:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4982:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4972:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4997:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5032:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5043:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5028:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5028:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5052:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5007:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4997:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4784:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4795:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4807:6:2",
														"type": ""
													}
												],
												"src": "4748:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5125:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5135:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5160:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5153:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5153:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5135:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5107:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5117:7:2",
														"type": ""
													}
												],
												"src": "5083:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5238:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5255:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5275:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5260:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5260:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5248:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5248:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5226:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5233:3:2",
														"type": ""
													}
												],
												"src": "5179:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5386:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5396:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5408:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5396:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5470:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5494:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5479:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5432:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5432:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5358:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5370:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5381:4:2",
														"type": ""
													}
												],
												"src": "5294:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5623:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5628:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5644:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5663:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5668:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5659:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5659:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5644:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5578:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5583:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5594:11:2",
														"type": ""
													}
												],
												"src": "5510:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5791:63:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5813:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5821:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5809:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5809:14:2"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206120766f746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5825:21:2",
																		"type": "",
																		"value": "You are not a voter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5802:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5802:45:2"
														}
													]
												},
												"name": "store_literal_in_memory_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5783:6:2",
														"type": ""
													}
												],
												"src": "5685:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6006:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6016:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6082:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6087:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6023:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6016:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6188:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																	"nodeType": "YulIdentifier",
																	"src": "6099:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6099:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6201:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6212:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6208:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6201:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5994:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6002:3:2",
														"type": ""
													}
												],
												"src": "5860:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6403:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6413:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6425:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6436:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6421:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6413:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6460:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6471:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6456:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6456:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6479:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6475:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6475:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6449:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6449:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6449:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6505:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6639:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6513:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6513:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6505:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6383:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6398:4:2",
														"type": ""
													}
												],
												"src": "6232:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6763:66:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6785:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6793:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6781:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6781:14:2"
																	},
																	{
																		"hexValue": "596f752068617665206e6f7420766f74656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6797:24:2",
																		"type": "",
																		"value": "You have not voted yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6774:48:2"
														}
													]
												},
												"name": "store_literal_in_memory_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6755:6:2",
														"type": ""
													}
												],
												"src": "6657:172:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6981:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6991:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7057:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7062:2:2",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6998:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7163:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																	"nodeType": "YulIdentifier",
																	"src": "7074:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7074:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7074:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7176:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7187:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7192:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7183:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7176:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6969:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6977:3:2",
														"type": ""
													}
												],
												"src": "6835:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7378:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7388:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7400:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7388:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7435:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7446:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7431:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7431:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7454:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7460:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7424:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7424:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7480:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7488:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7480:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7358:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7373:4:2",
														"type": ""
													}
												],
												"src": "7207:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7660:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7680:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7774:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7777:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7767:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7767:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7767:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7798:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7801:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7791:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7791:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7791:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7632:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7863:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7873:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7896:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7878:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7873:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7907:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7930:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7912:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7907:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7954:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7956:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7956:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7956:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7948:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7951:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7945:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:8:2"
															},
															"nodeType": "YulIf",
															"src": "7942:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7998:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8001:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7994:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7994:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7986:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7849:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7852:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7858:4:2",
														"type": ""
													}
												],
												"src": "7818:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8059:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8069:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8092:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8074:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8069:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8103:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8126:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8108:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8103:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8266:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8268:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8268:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8268:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8187:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8194:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8262:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8190:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8184:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8184:81:2"
															},
															"nodeType": "YulIf",
															"src": "8181:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8298:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8309:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8312:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8305:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8305:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8298:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8046:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8049:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8055:3:2",
														"type": ""
													}
												],
												"src": "8015:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8432:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8454:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8462:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8450:14:2"
																	},
																	{
																		"hexValue": "596f75206861766520766f746564206265666f7265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8466:23:2",
																		"type": "",
																		"value": "You have voted before"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8443:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8443:47:2"
														}
													]
												},
												"name": "store_literal_in_memory_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8424:6:2",
														"type": ""
													}
												],
												"src": "8326:171:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8649:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8659:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8725:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:2",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8666:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8831:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																	"nodeType": "YulIdentifier",
																	"src": "8742:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8742:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8844:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8855:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8860:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8851:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8851:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8844:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8637:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8645:3:2",
														"type": ""
													}
												],
												"src": "8503:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9046:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9056:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9068:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9079:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9064:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9056:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9103:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9114:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9099:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9099:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9122:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9128:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9118:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9118:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9092:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9092:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9092:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9148:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9282:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9156:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9148:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9026:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9041:4:2",
														"type": ""
													}
												],
												"src": "8875:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9406:59:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9428:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9436:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9424:14:2"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9440:17:2",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:41:2"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9398:6:2",
														"type": ""
													}
												],
												"src": "9300:165:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9617:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9627:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9693:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9698:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9634:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9634:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9799:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nodeType": "YulIdentifier",
																	"src": "9710:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9812:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9823:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9828:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9819:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9819:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9605:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9613:3:2",
														"type": ""
													}
												],
												"src": "9471:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10014:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10024:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10036:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10032:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10024:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10082:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10067:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10090:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10060:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10060:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10116:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10250:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10124:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10124:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10116:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9994:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10009:4:2",
														"type": ""
													}
												],
												"src": "9843:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10296:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10313:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10316:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10306:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10306:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10306:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10410:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10413:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10403:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10403:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10403:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10434:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10437:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10427:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10427:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10268:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10496:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10506:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10529:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10511:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10511:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10506:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10540:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10563:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10545:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10545:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10540:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10587:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10589:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10589:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10589:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10584:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10577:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10577:9:2"
															},
															"nodeType": "YulIf",
															"src": "10574:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10619:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10628:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10631:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10624:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10624:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10619:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10485:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10488:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10494:1:2",
														"type": ""
													}
												],
												"src": "10454:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:67:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10773:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10781:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10769:14:2"
																	},
																	{
																		"hexValue": "566f74696e67206973206e6f7420617661696c61626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10785:25:2",
																		"type": "",
																		"value": "Voting is not available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10762:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10762:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10762:49:2"
														}
													]
												},
												"name": "store_literal_in_memory_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10743:6:2",
														"type": ""
													}
												],
												"src": "10645:173:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10970:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10980:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11046:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11051:2:2",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10987:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10980:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11152:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																	"nodeType": "YulIdentifier",
																	"src": "11063:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11063:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11063:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11165:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11176:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11181:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11172:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11165:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10958:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10966:3:2",
														"type": ""
													}
												],
												"src": "10824:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11367:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11377:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11389:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11400:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11385:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11385:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11377:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11435:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11420:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11443:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11449:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11439:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11439:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11413:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11469:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11603:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11477:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11469:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11347:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11362:4:2",
														"type": ""
													}
												],
												"src": "11196:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11727:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11749:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11757:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11745:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11745:14:2"
																	},
																	{
																		"hexValue": "4e6f205374616b6520466f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11761:16:2",
																		"type": "",
																		"value": "No Stake Found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11738:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11738:40:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11738:40:2"
														}
													]
												},
												"name": "store_literal_in_memory_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11719:6:2",
														"type": ""
													}
												],
												"src": "11621:164:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11937:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11947:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12013:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12018:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11954:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11954:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11947:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12119:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a",
																	"nodeType": "YulIdentifier",
																	"src": "12030:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12030:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12132:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12143:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12139:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12139:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12132:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11925:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11933:3:2",
														"type": ""
													}
												],
												"src": "11791:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12334:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12344:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12356:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12367:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12352:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12352:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12344:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12391:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12402:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12387:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12410:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12416:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12406:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12406:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12380:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12380:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12380:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12436:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12570:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12444:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12444:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12436:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12314:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12329:4:2",
														"type": ""
													}
												],
												"src": "12163:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12636:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12646:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12669:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12651:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12646:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12680:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12703:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12685:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12685:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12680:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12878:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12880:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12880:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12880:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12790:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12783:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12783:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12776:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12776:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12798:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12805:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12873:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12801:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12801:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12795:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12795:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12772:105:2"
															},
															"nodeType": "YulIf",
															"src": "12769:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12910:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12925:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12928:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12921:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12921:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12910:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12619:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12622:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12628:7:2",
														"type": ""
													}
												],
												"src": "12588:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13048:61:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13070:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13078:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13066:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13066:14:2"
																	},
																	{
																		"hexValue": "4572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13082:19:2",
																		"type": "",
																		"value": "Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13059:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13059:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13059:43:2"
														}
													]
												},
												"name": "store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13040:6:2",
														"type": ""
													}
												],
												"src": "12942:167:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13261:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13271:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13337:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13342:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13278:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13278:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13271:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13443:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																	"nodeType": "YulIdentifier",
																	"src": "13354:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13354:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13354:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13456:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13467:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13472:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13463:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13456:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13249:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13257:3:2",
														"type": ""
													}
												],
												"src": "13115:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13658:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13668:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13680:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13691:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13676:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13676:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13668:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13715:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13726:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13711:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13711:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13734:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13740:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13730:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13730:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13704:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13704:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13704:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13760:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13894:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13768:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13768:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13760:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13638:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13653:4:2",
														"type": ""
													}
												],
												"src": "13487:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13971:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13982:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13998:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13992:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13982:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13954:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13964:6:2",
														"type": ""
													}
												],
												"src": "13912:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14066:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14076:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14085:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14080:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14145:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14170:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14175:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14166:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14166:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14189:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14194:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14185:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14185:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14179:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14179:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14159:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14159:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14159:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14106:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14109:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14103:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14103:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14117:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14119:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14128:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14131:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14124:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14124:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14119:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14099:3:2",
																"statements": []
															},
															"src": "14095:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14242:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14292:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14297:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14288:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14288:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14306:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14281:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14281:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14281:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14223:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14226:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14220:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14220:13:2"
															},
															"nodeType": "YulIf",
															"src": "14217:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14048:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14053:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14058:6:2",
														"type": ""
													}
												],
												"src": "14017:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14378:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14388:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14406:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14413:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14402:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14402:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14422:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14418:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14418:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14398:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14398:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14371:6:2",
														"type": ""
													}
												],
												"src": "14330:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14530:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14540:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14587:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14554:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14554:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14544:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14602:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14668:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14673:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14609:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14609:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14602:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14715:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14722:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14711:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14711:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14729:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14734:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14689:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14689:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14689:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14750:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14761:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14788:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14766:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14766:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14757:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14750:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14511:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14518:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14526:3:2",
														"type": ""
													}
												],
												"src": "14438:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14926:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14936:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14948:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14959:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14944:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14944:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14936:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14983:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14994:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14979:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14979:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15002:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15008:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14998:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14998:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14972:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14972:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14972:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15028:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15100:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15109:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15036:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15028:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14898:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14910:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14921:4:2",
														"type": ""
													}
												],
												"src": "14808:313:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakable.Stake -> struct Stakable.Stake\n    function abi_encode_t_struct$_Stake_$403_memory_ptr_to_t_struct$_Stake_$403_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // claimable_airdrop\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    // struct Stakable.StakingSummary -> struct Stakable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$419_memory_ptr_to_t_struct$_StakingSummary_$419_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stake\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Stake_$403_memory_ptr_to_t_struct$_Stake_$403_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$419_memory_ptr__to_t_struct$_StakingSummary_$419_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_StakingSummary_$419_memory_ptr_to_t_struct$_StakingSummary_$419_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not a voter\")\n\n    }\n\n    function abi_encode_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not voted yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have voted before\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Voting is not available\")\n\n    }\n\n    function abi_encode_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Stake Found\")\n\n    }\n\n    function abi_encode_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error timestamp 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a143a5f211610071578063a143a5f21461011c578063a3ec138d1461014c578063a7771ee31461017c578063b87da76d146101ac578063cb79c2e1146101ca578063cbb3e152146101e8576100a9565b8063070c8b74146100ae57806310486b6a146100b85780635f5300ff146100d6578063632a9a52146100f45780638891cf0d146100fe575b600080fd5b6100b6610206565b005b6100c06103e2565b6040516100cd9190610df2565b60405180910390f35b6100de610643565b6040516100eb9190610e1d565b60405180910390f35b6100fc610649565b005b61010661082d565b6040516101139190610e1d565b60405180910390f35b61013660048036038101906101319190610e69565b610833565b6040516101439190610e1d565b60405180910390f35b61016660048036038101906101619190610ec2565b61084b565b6040516101739190610f0a565b60405180910390f35b61019660048036038101906101919190610ec2565b610876565b6040516101a39190610f0a565b60405180910390f35b6101b461093e565b6040516101c19190610e1d565b60405180910390f35b6101d2610944565b6040516101df9190610e1d565b60405180910390f35b6101f061094a565b6040516101fd9190610e1d565b60405180910390f35b61020e610980565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029b90610f82565b60405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060009054906101000a900460ff1615151461034d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034490610fee565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060009054906101000a90505050600160076000600454815260200190815260200160002060008282546103d9919061103d565b92505081905550565b6103ea610c4d565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505081526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820154815250509050600060405180606001604052806000815260200160008152602001836000015181525090506105748160400151602001516109d1565b60006105838260400151610a17565b9050600042836040015160c0015111156105c1576000806105ac85604001516020015185610a77565b9150915080826105bc9190611071565b925050505b60006105d08560400151610ab3565b11156105ff5760006105e9846040015160200151610add565b905080846040015160800181815250505061060f565b6000836040015160800181815250505b8183604001516060018181525050808360200181815250508260400151602001518360000181815250508294505050505090565b60055481565b610651610980565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de90610f82565b60405180910390fd5b60001515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060009054906101000a900460ff16151514610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078790611113565b60405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000600454815260200190815260200160002060006101000a81548160ff021916908315150217905550600160076000600454815260200190815260200160002060008282546108249190611071565b92505081905550565b60015481565b60076020528060005260406000206000915090505481565b60066020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de9061117f565b60405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60025481565b60005481565b600080600254146109785762093a8060025442610967919061103d565b61097191906111ce565b905061097d565b600090505b90565b600360009054906101000a900460ff166109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c69061124b565b60405180910390fd5b565b60008111610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b906112b7565b60405180910390fd5b50565b60008082602001511415610a2e5760009050610a72565b6a52b7d2dcc80cd2e4000000610a478360400151610b10565b8360a001518460200151610a5b91906112d7565b610a6591906112d7565b610a6f91906111ce565b90505b919050565b600080610a91610a8985600054610bbf565b6103e8610bd5565b610aa8610aa085600054610bbf565b6103e8610bd5565b915091509250929050565b6000610ad662093a808342610ac8919061103d565b610bd590919063ffffffff16565b9050919050565b60006301dfe2006103e860015484610af591906112d7565b610aff91906111ce565b610b0991906111ce565b9050919050565b6000808211610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b9061137d565b60405180910390fd5b610bb869d3c21bcecceda10000008342610b6e919061103d565b610b7891906112d7565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d70000000815250610beb565b9050919050565b60008183610bcd91906112d7565b905092915050565b60008183610be391906111ce565b905092915050565b60008083118290610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c299190611425565b60405180910390fd5b50828481610c4357610c4261119f565b5b0490509392505050565b60405180606001604052806000815260200160008152602001610c6e610c74565b81525090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b610cda81610cc7565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0b82610ce0565b9050919050565b610d1b81610d00565b82525050565b60e082016000820151610d376000850182610d12565b506020820151610d4a6020850182610cd1565b506040820151610d5d6040850182610cd1565b506060820151610d706060850182610cd1565b506080820151610d836080850182610cd1565b5060a0820151610d9660a0850182610cd1565b5060c0820151610da960c0850182610cd1565b50505050565b61012082016000820151610dc66000850182610cd1565b506020820151610dd96020850182610cd1565b506040820151610dec6040850182610d21565b50505050565b600061012082019050610e086000830184610daf565b92915050565b610e1781610cc7565b82525050565b6000602082019050610e326000830184610e0e565b92915050565b600080fd5b610e4681610cc7565b8114610e5157600080fd5b50565b600081359050610e6381610e3d565b92915050565b600060208284031215610e7f57610e7e610e38565b5b6000610e8d84828501610e54565b91505092915050565b610e9f81610d00565b8114610eaa57600080fd5b50565b600081359050610ebc81610e96565b92915050565b600060208284031215610ed857610ed7610e38565b5b6000610ee684828501610ead565b91505092915050565b60008115159050919050565b610f0481610eef565b82525050565b6000602082019050610f1f6000830184610efb565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f74206120766f74657200000000000000000000000000600082015250565b6000610f6c601383610f25565b9150610f7782610f36565b602082019050919050565b60006020820190508181036000830152610f9b81610f5f565b9050919050565b7f596f752068617665206e6f7420766f7465642079657400000000000000000000600082015250565b6000610fd8601683610f25565b9150610fe382610fa2565b602082019050919050565b6000602082019050818103600083015261100781610fcb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061104882610cc7565b915061105383610cc7565b9250828210156110665761106561100e565b5b828203905092915050565b600061107c82610cc7565b915061108783610cc7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110bc576110bb61100e565b5b828201905092915050565b7f596f75206861766520766f746564206265666f72650000000000000000000000600082015250565b60006110fd601583610f25565b9150611108826110c7565b602082019050919050565b6000602082019050818103600083015261112c816110f0565b9050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000611169600f83610f25565b915061117482611133565b602082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111d982610cc7565b91506111e483610cc7565b9250826111f4576111f361119f565b5b828204905092915050565b7f566f74696e67206973206e6f7420617661696c61626c65000000000000000000600082015250565b6000611235601783610f25565b9150611240826111ff565b602082019050919050565b6000602082019050818103600083015261126481611228565b9050919050565b7f4e6f205374616b6520466f756e64000000000000000000000000000000000000600082015250565b60006112a1600e83610f25565b91506112ac8261126b565b602082019050919050565b600060208201905081810360008301526112d081611294565b9050919050565b60006112e282610cc7565b91506112ed83610cc7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113265761132561100e565b5b828202905092915050565b7f4572726f722074696d657374616d702030000000000000000000000000000000600082015250565b6000611367601183610f25565b915061137282611331565b602082019050919050565b600060208201905081810360008301526113968161135a565b9050919050565b600081519050919050565b60005b838110156113c65780820151818401526020810190506113ab565b838111156113d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006113f78261139d565b6114018185610f25565b93506114118185602086016113a8565b61141a816113db565b840191505092915050565b6000602082019050818103600083015261143f81846113ec565b90509291505056fea2646970667358221220e74d71534754eaaf60f723fa85dcbf1721de8782e4f2afb407610a175f12aa6f64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA143A5F2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xA7771EE3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x1E8 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x980 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x34D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x344 SWAP1 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE POP SWAP1 POP PUSH2 0x574 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xA17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 TIMESTAMP DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xC0 ADD MLOAD GT ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x5AC DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xA77 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 DUP3 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x5D0 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0xAB3 JUMP JUMPDEST GT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 PUSH2 0x5E9 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0xADD JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP2 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x651 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DE SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DE SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD EQ PUSH2 0x978 JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x971 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP PUSH2 0x97D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xA72 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xA47 DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0xB10 JUMP JUMPDEST DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA91 PUSH2 0xA89 DUP6 PUSH1 0x0 SLOAD PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xAA8 PUSH2 0xAA0 DUP6 PUSH1 0x0 SLOAD PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xBD5 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD6 PUSH3 0x93A80 DUP4 TIMESTAMP PUSH2 0xAC8 SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0xBD5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xB54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4B SWAP1 PUSH2 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB8 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0xB6E SWAP2 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0xC43 JUMPI PUSH2 0xC42 PUSH2 0x119F JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6E PUSH2 0xC74 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0B DUP3 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1B DUP2 PUSH2 0xD00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xD37 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xD12 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xD4A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD5D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xD70 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xD83 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xD96 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xDA9 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xDC6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xDD9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xCD1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xDEC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xD21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0xE08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE46 DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE63 DUP2 PUSH2 0xE3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8D DUP5 DUP3 DUP6 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE9F DUP2 PUSH2 0xD00 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBC DUP2 PUSH2 0xE96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE6 DUP5 DUP3 DUP6 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206120766F74657200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C PUSH1 0x13 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP3 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF9B DUP2 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F7420766F7465642079657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD8 PUSH1 0x16 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE3 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1007 DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1048 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1053 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x100E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107C DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BB PUSH2 0x100E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206861766520766F746564206265666F72650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH1 0x15 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1108 DUP3 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x112C DUP2 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0xF DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1198 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x11E4 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11F4 JUMPI PUSH2 0x11F3 PUSH2 0x119F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x566F74696E67206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1235 PUSH1 0x17 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1240 DUP3 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1264 DUP2 PUSH2 0x1228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F205374616B6520466F756E64000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A1 PUSH1 0xE DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x12AC DUP3 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12D0 DUP2 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E2 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x12ED DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1325 PUSH2 0x100E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1367 PUSH1 0x11 DUP4 PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP PUSH2 0x1372 DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1396 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP3 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x1401 DUP2 DUP6 PUSH2 0xF25 JUMP JUMPDEST SWAP4 POP PUSH2 0x1411 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x141A DUP2 PUSH2 0x13DB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x143F DUP2 DUP5 PUSH2 0x13EC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0x4D PUSH18 0x534754EAAF60F723FA85DCBF1721DE8782E4 CALLCODE 0xAF 0xB4 SMOD PUSH2 0xA17 0x5F SLT 0xAA PUSH16 0x64736F6C634300080B00330000000000 ",
							"sourceMap": "155:10795:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10158:347;;;:::i;:::-;;7296:1066;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;638:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9814:338;;;:::i;:::-;;507:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;715:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;670:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9636:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;539:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;468:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9151:204;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10158:347;1289:20;:18;:20::i;:::-;10257:4:::1;10223:38;;:6;:18;10230:10;10223:18;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:38;;;10215:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;10355:4;10316:43;;:6;:18;10323:10;10316:18;;;;;;;;;;;;;;;:24;;:35;10341:9;;10316:35;;;;;;;;;;;;;;;;;;;;;:43;;;10295:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;10457:5;10418:44;;:6;:18;10425:10;10418:18;;;;;;;;;;;;;;;:24;;:35;10443:9;;10418:35;;;;;;;;;;;;;;;;;;::::0;;:44;10497:1:::1;10472:10;:21;10483:9;;10472:21;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;10158:347::o:0;7296:1066::-;7339:21;;:::i;:::-;7372:23;7398:12;:24;7411:10;7398:24;;;;;;;;;;;;;;;7372:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7432:29;7464:32;;;;;;;;7479:1;7464:32;;;;7482:1;7464:32;;;;7485:4;:10;;;7464:32;;;7432:64;;7506:37;7522:7;:13;;;:20;;;7506:15;:37::i;:::-;7554:23;7580:35;7601:7;:13;;;7580:20;:35::i;:::-;7554:61;;7625:15;7683;7655:7;:13;;;:25;;;:43;7651:281;;;7715:22;7739;7765:101;7799:7;:13;;;:20;;;7837:15;7765:16;:101::i;:::-;7714:152;;;;7907:14;7890;:31;;;;:::i;:::-;7880:41;;7700:232;;7651:281;7985:1;7946:36;7961:4;:20;;;7946:14;:36::i;:::-;:40;7942:249;;;8002:15;8020:39;8038:7;:13;;;:20;;;8020:17;:39::i;:::-;8002:57;;8107:7;8073;:13;;;:31;;:41;;;;;7988:137;7942:249;;;8179:1;8145:7;:13;;;:31;;:35;;;;;7942:249;8227:15;8201:7;:13;;;:23;;:41;;;;;8270:7;8252;:15;;:25;;;;;8310:7;:13;;;:20;;;8287:7;:20;;:43;;;;;8348:7;8341:14;;;;;;7296:1066;:::o;638:26::-;;;;:::o;9814:338::-;1289:20;:18;:20::i;:::-;9906:4:::1;9872:38;;:6;:18;9879:10;9872:18;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:38;;;9864:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;10004:5;9965:44;;:6;:18;9972:10;9965:18;;;;;;;;;;;;;;;:24;;:35;9990:9;;9965:35;;;;;;;;;;;;;;;;;;;;;:44;;;9944:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;10105:4;10067:6;:18;10074:10;10067:18;;;;;;;;;;;;;;;:24;;:35;10092:9;;10067:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;10144:1;10119:10;:21;10130:9;;10119:21;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;9814:338::o:0;507:26::-;;;;:::o;715:45::-;;;;;;;;;;;;;;;;;:::o;670:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9636:172::-;9691:4;9734:1;9715:21;;:7;:21;;;;9707:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;9774:6;:15;9781:7;9774:15;;;;;;;;;;;;;;;:27;;;;;;;;;;;;9767:34;;9636:172;;;:::o;539:27::-;;;;:::o;468:33::-;;;;:::o;9151:204::-;9195:7;9234:1;9218:12;;:17;9214:135;;9293:6;9277:12;;9259:15;:30;;;;:::i;:::-;9258:41;;;;:::i;:::-;9251:48;;;;9214:135;9337:1;9330:8;;9151:204;;:::o;1135:110::-;1197:13;;;;;;;;;;;1189:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1135:110::o;1020:109::-;1102:1;1093:6;:10;1085:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1020:109;:::o;5097:435::-;5199:7;5247:1;5226:10;:17;;;:22;5222:61;;;5271:1;5264:8;;;;5222:61;5521:4;5475:42;5500:10;:16;;;5475:24;:42::i;:::-;5436:10;:20;;;5400:10;:17;;;:56;;;;:::i;:::-;:117;;;;:::i;:::-;5399:126;;;;:::i;:::-;5380:145;;5097:435;;;;:::o;5538:309::-;5643:7;5652;5696:60;5709:40;5722:6;5730:18;;5709:12;:40::i;:::-;5751:4;5696:12;:60::i;:::-;5770;5783:40;5796:6;5804:18;;5783:12;:40::i;:::-;5825:4;5770:12;:60::i;:::-;5675:165;;;;5538:309;;;;;:::o;2916:132::-;2978:7;3004:37;3034:6;3023:5;3005:15;:23;;;;:::i;:::-;3004:29;;:37;;;;:::i;:::-;2997:44;;2916:132;;;:::o;8473:179::-;8568:7;8637:8;8629:4;8614:11;;8600;:25;;;;:::i;:::-;8599:34;;;;:::i;:::-;8598:47;;;;:::i;:::-;8591:54;;8473:179;;;:::o;4690:401::-;4787:7;4827:1;4818:6;:10;4810:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;4932:152;4991:4;4981:6;4963:15;:24;;;;:::i;:::-;4962:33;;;;:::i;:::-;5013:8;4932:152;;;;;;;;;;;;;;;;;:12;:152::i;:::-;4913:171;;4690:401;;;:::o;3451:96:0:-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;5660:230::-;5776:7;5831:1;5827;:5;5834:12;5819:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5861:12;;5660:230;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:108::-;167:24;185:5;167:24;:::i;:::-;162:3;155:37;90:108;;:::o;204:126::-;241:7;281:42;274:5;270:54;259:65;;204:126;;;:::o;336:96::-;373:7;402:24;420:5;402:24;:::i;:::-;391:35;;336:96;;;:::o;438:108::-;515:24;533:5;515:24;:::i;:::-;510:3;503:37;438:108;;:::o;606:1394::-;737:4;732:3;728:14;824:4;817:5;813:16;807:23;843:63;900:4;895:3;891:14;877:12;843:63;:::i;:::-;752:164;1000:4;993:5;989:16;983:23;1019:63;1076:4;1071:3;1067:14;1053:12;1019:63;:::i;:::-;926:166;1175:4;1168:5;1164:16;1158:23;1194:63;1251:4;1246:3;1242:14;1228:12;1194:63;:::i;:::-;1102:165;1354:4;1347:5;1343:16;1337:23;1373:63;1430:4;1425:3;1421:14;1407:12;1373:63;:::i;:::-;1277:169;1541:4;1534:5;1530:16;1524:23;1560:63;1617:4;1612:3;1608:14;1594:12;1560:63;:::i;:::-;1456:177;1720:4;1713:5;1709:16;1703:23;1739:63;1796:4;1791:3;1787:14;1773:12;1739:63;:::i;:::-;1643:169;1901:4;1894:5;1890:16;1884:23;1920:63;1977:4;1972:3;1968:14;1954:12;1920:63;:::i;:::-;1822:171;706:1294;606:1394;;:::o;2078:751::-;2237:6;2232:3;2228:16;2334:4;2327:5;2323:16;2317:23;2353:63;2410:4;2405:3;2401:14;2387:12;2353:63;:::i;:::-;2254:172;2511:4;2504:5;2500:16;2494:23;2530:63;2587:4;2582:3;2578:14;2564:12;2530:63;:::i;:::-;2436:167;2686:4;2679:5;2675:16;2669:23;2705:107;2806:4;2801:3;2797:14;2783:12;2705:107;:::i;:::-;2613:209;2206:623;2078:751;;:::o;2835:347::-;2990:4;3028:3;3017:9;3013:19;3005:27;;3042:133;3172:1;3161:9;3157:17;3148:6;3042:133;:::i;:::-;2835:347;;;;:::o;3188:118::-;3275:24;3293:5;3275:24;:::i;:::-;3270:3;3263:37;3188:118;;:::o;3312:222::-;3405:4;3443:2;3432:9;3428:18;3420:26;;3456:71;3524:1;3513:9;3509:17;3500:6;3456:71;:::i;:::-;3312:222;;;;:::o;3621:117::-;3730:1;3727;3720:12;3867:122;3940:24;3958:5;3940:24;:::i;:::-;3933:5;3930:35;3920:63;;3979:1;3976;3969:12;3920:63;3867:122;:::o;3995:139::-;4041:5;4079:6;4066:20;4057:29;;4095:33;4122:5;4095:33;:::i;:::-;3995:139;;;;:::o;4140:329::-;4199:6;4248:2;4236:9;4227:7;4223:23;4219:32;4216:119;;;4254:79;;:::i;:::-;4216:119;4374:1;4399:53;4444:7;4435:6;4424:9;4420:22;4399:53;:::i;:::-;4389:63;;4345:117;4140:329;;;;:::o;4475:122::-;4548:24;4566:5;4548:24;:::i;:::-;4541:5;4538:35;4528:63;;4587:1;4584;4577:12;4528:63;4475:122;:::o;4603:139::-;4649:5;4687:6;4674:20;4665:29;;4703:33;4730:5;4703:33;:::i;:::-;4603:139;;;;:::o;4748:329::-;4807:6;4856:2;4844:9;4835:7;4831:23;4827:32;4824:119;;;4862:79;;:::i;:::-;4824:119;4982:1;5007:53;5052:7;5043:6;5032:9;5028:22;5007:53;:::i;:::-;4997:63;;4953:117;4748:329;;;;:::o;5083:90::-;5117:7;5160:5;5153:13;5146:21;5135:32;;5083:90;;;:::o;5179:109::-;5260:21;5275:5;5260:21;:::i;:::-;5255:3;5248:34;5179:109;;:::o;5294:210::-;5381:4;5419:2;5408:9;5404:18;5396:26;;5432:65;5494:1;5483:9;5479:17;5470:6;5432:65;:::i;:::-;5294:210;;;;:::o;5510:169::-;5594:11;5628:6;5623:3;5616:19;5668:4;5663:3;5659:14;5644:29;;5510:169;;;;:::o;5685:::-;5825:21;5821:1;5813:6;5809:14;5802:45;5685:169;:::o;5860:366::-;6002:3;6023:67;6087:2;6082:3;6023:67;:::i;:::-;6016:74;;6099:93;6188:3;6099:93;:::i;:::-;6217:2;6212:3;6208:12;6201:19;;5860:366;;;:::o;6232:419::-;6398:4;6436:2;6425:9;6421:18;6413:26;;6485:9;6479:4;6475:20;6471:1;6460:9;6456:17;6449:47;6513:131;6639:4;6513:131;:::i;:::-;6505:139;;6232:419;;;:::o;6657:172::-;6797:24;6793:1;6785:6;6781:14;6774:48;6657:172;:::o;6835:366::-;6977:3;6998:67;7062:2;7057:3;6998:67;:::i;:::-;6991:74;;7074:93;7163:3;7074:93;:::i;:::-;7192:2;7187:3;7183:12;7176:19;;6835:366;;;:::o;7207:419::-;7373:4;7411:2;7400:9;7396:18;7388:26;;7460:9;7454:4;7450:20;7446:1;7435:9;7431:17;7424:47;7488:131;7614:4;7488:131;:::i;:::-;7480:139;;7207:419;;;:::o;7632:180::-;7680:77;7677:1;7670:88;7777:4;7774:1;7767:15;7801:4;7798:1;7791:15;7818:191;7858:4;7878:20;7896:1;7878:20;:::i;:::-;7873:25;;7912:20;7930:1;7912:20;:::i;:::-;7907:25;;7951:1;7948;7945:8;7942:34;;;7956:18;;:::i;:::-;7942:34;8001:1;7998;7994:9;7986:17;;7818:191;;;;:::o;8015:305::-;8055:3;8074:20;8092:1;8074:20;:::i;:::-;8069:25;;8108:20;8126:1;8108:20;:::i;:::-;8103:25;;8262:1;8194:66;8190:74;8187:1;8184:81;8181:107;;;8268:18;;:::i;:::-;8181:107;8312:1;8309;8305:9;8298:16;;8015:305;;;;:::o;8326:171::-;8466:23;8462:1;8454:6;8450:14;8443:47;8326:171;:::o;8503:366::-;8645:3;8666:67;8730:2;8725:3;8666:67;:::i;:::-;8659:74;;8742:93;8831:3;8742:93;:::i;:::-;8860:2;8855:3;8851:12;8844:19;;8503:366;;;:::o;8875:419::-;9041:4;9079:2;9068:9;9064:18;9056:26;;9128:9;9122:4;9118:20;9114:1;9103:9;9099:17;9092:47;9156:131;9282:4;9156:131;:::i;:::-;9148:139;;8875:419;;;:::o;9300:165::-;9440:17;9436:1;9428:6;9424:14;9417:41;9300:165;:::o;9471:366::-;9613:3;9634:67;9698:2;9693:3;9634:67;:::i;:::-;9627:74;;9710:93;9799:3;9710:93;:::i;:::-;9828:2;9823:3;9819:12;9812:19;;9471:366;;;:::o;9843:419::-;10009:4;10047:2;10036:9;10032:18;10024:26;;10096:9;10090:4;10086:20;10082:1;10071:9;10067:17;10060:47;10124:131;10250:4;10124:131;:::i;:::-;10116:139;;9843:419;;;:::o;10268:180::-;10316:77;10313:1;10306:88;10413:4;10410:1;10403:15;10437:4;10434:1;10427:15;10454:185;10494:1;10511:20;10529:1;10511:20;:::i;:::-;10506:25;;10545:20;10563:1;10545:20;:::i;:::-;10540:25;;10584:1;10574:35;;10589:18;;:::i;:::-;10574:35;10631:1;10628;10624:9;10619:14;;10454:185;;;;:::o;10645:173::-;10785:25;10781:1;10773:6;10769:14;10762:49;10645:173;:::o;10824:366::-;10966:3;10987:67;11051:2;11046:3;10987:67;:::i;:::-;10980:74;;11063:93;11152:3;11063:93;:::i;:::-;11181:2;11176:3;11172:12;11165:19;;10824:366;;;:::o;11196:419::-;11362:4;11400:2;11389:9;11385:18;11377:26;;11449:9;11443:4;11439:20;11435:1;11424:9;11420:17;11413:47;11477:131;11603:4;11477:131;:::i;:::-;11469:139;;11196:419;;;:::o;11621:164::-;11761:16;11757:1;11749:6;11745:14;11738:40;11621:164;:::o;11791:366::-;11933:3;11954:67;12018:2;12013:3;11954:67;:::i;:::-;11947:74;;12030:93;12119:3;12030:93;:::i;:::-;12148:2;12143:3;12139:12;12132:19;;11791:366;;;:::o;12163:419::-;12329:4;12367:2;12356:9;12352:18;12344:26;;12416:9;12410:4;12406:20;12402:1;12391:9;12387:17;12380:47;12444:131;12570:4;12444:131;:::i;:::-;12436:139;;12163:419;;;:::o;12588:348::-;12628:7;12651:20;12669:1;12651:20;:::i;:::-;12646:25;;12685:20;12703:1;12685:20;:::i;:::-;12680:25;;12873:1;12805:66;12801:74;12798:1;12795:81;12790:1;12783:9;12776:17;12772:105;12769:131;;;12880:18;;:::i;:::-;12769:131;12928:1;12925;12921:9;12910:20;;12588:348;;;;:::o;12942:167::-;13082:19;13078:1;13070:6;13066:14;13059:43;12942:167;:::o;13115:366::-;13257:3;13278:67;13342:2;13337:3;13278:67;:::i;:::-;13271:74;;13354:93;13443:3;13354:93;:::i;:::-;13472:2;13467:3;13463:12;13456:19;;13115:366;;;:::o;13487:419::-;13653:4;13691:2;13680:9;13676:18;13668:26;;13740:9;13734:4;13730:20;13726:1;13715:9;13711:17;13704:47;13768:131;13894:4;13768:131;:::i;:::-;13760:139;;13487:419;;;:::o;13912:99::-;13964:6;13998:5;13992:12;13982:22;;13912:99;;;:::o;14017:307::-;14085:1;14095:113;14109:6;14106:1;14103:13;14095:113;;;14194:1;14189:3;14185:11;14179:18;14175:1;14170:3;14166:11;14159:39;14131:2;14128:1;14124:10;14119:15;;14095:113;;;14226:6;14223:1;14220:13;14217:101;;;14306:1;14297:6;14292:3;14288:16;14281:27;14217:101;14066:258;14017:307;;;:::o;14330:102::-;14371:6;14422:2;14418:7;14413:2;14406:5;14402:14;14398:28;14388:38;;14330:102;;;:::o;14438:364::-;14526:3;14554:39;14587:5;14554:39;:::i;:::-;14609:71;14673:6;14668:3;14609:71;:::i;:::-;14602:78;;14689:52;14734:6;14729:3;14722:4;14715:5;14711:16;14689:52;:::i;:::-;14766:29;14788:6;14766:29;:::i;:::-;14761:3;14757:39;14750:46;;14530:272;14438:364;;;;:::o;14808:313::-;14921:4;14959:2;14948:9;14944:18;14936:26;;15008:9;15002:4;14998:20;14994:1;14983:9;14979:17;14972:47;15036:78;15109:4;15100:6;15036:78;:::i;:::-;15028:86;;14808:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1049000",
								"executionCost": "45315",
								"totalCost": "1094315"
							},
							"external": {
								"airdropRate()": "2518",
								"airdropSince()": "2495",
								"airdropWeek()": "infinite",
								"hasStake()": "infinite",
								"isVoter(address)": "2971",
								"retractVote()": "infinite",
								"stakingPenaltyRate()": "2517",
								"totalVoters()": "2474",
								"vote()": "infinite",
								"votedUsers(uint256)": "infinite",
								"voters(address)": "2892"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateWeek(uint256)": "infinite",
								"_changeAirdropPercentage(uint256)": "infinite",
								"_changePenaltyFee(uint256)": "infinite",
								"_checkUserStake(uint256)": "infinite",
								"_checkVotingStatus()": "infinite",
								"_claimAirdrop(address)": "infinite",
								"_getVotingResult()": "infinite",
								"_stake(address,uint256,uint256,uint256)": "infinite",
								"_startAirdropSince()": "infinite",
								"_startVoting()": "infinite",
								"_stopVoting()": "infinite",
								"_withdrawStake(address)": "infinite",
								"calculatePenalty(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakable.Stake memory)": "infinite",
								"calculateStakingDuration(uint256)": "infinite",
								"calculateStakingWithPenalty(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 155,
									"end": 10950,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 767,
									"end": 909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 767,
									"end": 909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 767,
									"end": 909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 767,
									"end": 909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 876,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 853,
									"end": 871,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 876,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 853,
									"end": 876,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 853,
									"end": 876,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 853,
									"end": 876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 900,
									"end": 902,
									"name": "PUSH",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 886,
									"end": 897,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 886,
									"end": 902,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 886,
									"end": 902,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 886,
									"end": 902,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 886,
									"end": 902,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 10950,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e74d71534754eaaf60f723fa85dcbf1721de8782e4f2afb407610a175f12aa6f64736f6c634300080b0033",
									".code": [
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "A143A5F2"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "A143A5F2"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "A3EC138D"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "A7771EE3"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "B87DA76D"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "CB79C2E1"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "CBB3E152"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "70C8B74"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "10486B6A"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "5F5300FF"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "632A9A52"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "8891CF0D"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 10950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10223,
											"end": 10261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10240,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10223,
											"end": 10253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10215,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10359,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10316,
											"end": 10359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10333,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10340,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10316,
											"end": 10340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10341,
											"end": 10350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10341,
											"end": 10350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10316,
											"end": 10351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10359,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10295,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10424,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10435,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10472,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10472,
											"end": 10498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7339,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7421,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7422,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7506,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7522,
											"end": 7529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7535,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7506,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7506,
											"end": 7543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7506,
											"end": 7543,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7506,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7601,
											"end": 7614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7580,
											"end": 7615,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7580,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7580,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7698,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7668,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7668,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7680,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7655,
											"end": 7680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7698,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7651,
											"end": 7932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7799,
											"end": 7806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7799,
											"end": 7812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7812,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7799,
											"end": 7819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7837,
											"end": 7852,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7890,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7921,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 7932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 7932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7932,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7651,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7986,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8038,
											"end": 8045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8051,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8058,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8020,
											"end": 8059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8020,
											"end": 8059,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8020,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8073,
											"end": 8086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8086,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8104,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8073,
											"end": 8104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8145,
											"end": 8158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8176,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8145,
											"end": 8176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7942,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8227,
											"end": 8242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8201,
											"end": 8214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8224,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8201,
											"end": 8224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8252,
											"end": 8267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8310,
											"end": 8323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8323,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8355,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8341,
											"end": 8355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 8362,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1289,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9872,
											"end": 9910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9879,
											"end": 9889,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9872,
											"end": 9902,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9910,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9864,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 10009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9971,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9972,
											"end": 9982,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9989,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9965,
											"end": 9989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9990,
											"end": 9999,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9990,
											"end": 9999,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9965,
											"end": 10000,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 10009,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9944,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10105,
											"end": 10109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10084,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10091,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10067,
											"end": 10091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10092,
											"end": 10101,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10145,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10119,
											"end": 10129,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 10152,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 670,
											"end": 709,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 670,
											"end": 709,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9707,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9780,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9774,
											"end": 9789,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9774,
											"end": 9801,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 566,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 501,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 468,
											"end": 501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9195,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9218,
											"end": 9230,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9214,
											"end": 9349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 9277,
											"end": 9289,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9277,
											"end": 9289,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9274,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9259,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9258,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 9251,
											"end": 9299,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9349,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9214,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9355,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1135,
											"end": 1245,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1135,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1189,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1245,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1103,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1085,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5226,
											"end": 5243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5248,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5222,
											"end": 5283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5264,
											"end": 5272,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5222,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 5475,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5500,
											"end": 5510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5475,
											"end": 5517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5475,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5475,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5436,
											"end": 5456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5400,
											"end": 5417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5400,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5400,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5399,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5696,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5709,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5722,
											"end": 5728,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5709,
											"end": 5749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5709,
											"end": 5749,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5709,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5755,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 5696,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5696,
											"end": 5756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5696,
											"end": 5756,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5696,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5822,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5783,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 5770,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5770,
											"end": 5830,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5770,
											"end": 5830,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5770,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5847,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2916,
											"end": 3048,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2916,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 3023,
											"end": 3028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3020,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 3048,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8473,
											"end": 8652,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 8473,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8568,
											"end": 8575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8645,
											"name": "PUSH",
											"source": 1,
											"value": "1DFE200"
										},
										{
											"begin": 8629,
											"end": 8633,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 8614,
											"end": 8625,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8614,
											"end": 8625,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8600,
											"end": 8625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8599,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8598,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4690,
											"end": 5091,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4690,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4810,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4978,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4963,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4962,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5021,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4932,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 5084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 5084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 5091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 5091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 5091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 5091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 185,
											"end": 190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 162,
											"end": 165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 155,
											"end": 192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 204,
											"end": 330,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 204,
											"end": 330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 274,
											"end": 279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 270,
											"end": 324,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 259,
											"end": 324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 330,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 204,
											"end": 330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 330,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 336,
											"end": 432,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 336,
											"end": 432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 402,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 402,
											"end": 426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 426,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 402,
											"end": 426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 391,
											"end": 426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 391,
											"end": 426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 336,
											"end": 432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 336,
											"end": 432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 336,
											"end": 432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 336,
											"end": 432,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 513,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 503,
											"end": 540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 546,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 606,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 606,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 741,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 728,
											"end": 742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 824,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 813,
											"end": 829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 843,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 900,
											"end": 904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 898,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 891,
											"end": 905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 889,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 843,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 843,
											"end": 906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 843,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 989,
											"end": 1005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1019,
											"end": 1082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1019,
											"end": 1082,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1019,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1181,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1249,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1347,
											"end": 1352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1425,
											"end": 1428,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1373,
											"end": 1436,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1373,
											"end": 1436,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 1373,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1545,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1612,
											"end": 1615,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1606,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1560,
											"end": 1623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1623,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1560,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1796,
											"end": 1800,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1787,
											"end": 1801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1905,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1977,
											"end": 1981,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 1982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1920,
											"end": 1983,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 1983,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1920,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 706,
											"end": 2000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 606,
											"end": 2000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 606,
											"end": 2000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 606,
											"end": 2000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2078,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2078,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2244,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2585,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2564,
											"end": 2576,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2530,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2692,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2804,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2705,
											"end": 2812,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2705,
											"end": 2812,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2705,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2829,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 2994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3157,
											"end": 3174,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3042,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3042,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 3182,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3188,
											"end": 3306,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3188,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 3293,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 3275,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3263,
											"end": 3300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3188,
											"end": 3306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3188,
											"end": 3306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3188,
											"end": 3306,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3445,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3456,
											"end": 3527,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3527,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 3456,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3534,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3621,
											"end": 3738,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3621,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3732,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3989,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3867,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 3958,
											"end": 3963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3940,
											"end": 3964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 3940,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 3938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3977,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3981,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3989,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4095,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4236,
											"end": 4245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4227,
											"end": 4234,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4246,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4251,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4216,
											"end": 4335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4254,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4254,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4254,
											"end": 4333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4254,
											"end": 4333,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4254,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4335,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4216,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4374,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4444,
											"end": 4451,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4435,
											"end": 4441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4424,
											"end": 4433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4399,
											"end": 4452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4452,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4399,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4469,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4475,
											"end": 4597,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4475,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4548,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4548,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4548,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4548,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4548,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4475,
											"end": 4597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4475,
											"end": 4597,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4649,
											"end": 4654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4674,
											"end": 4694,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4730,
											"end": 4735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4703,
											"end": 4736,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4703,
											"end": 4736,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4703,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4742,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4858,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4844,
											"end": 4853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4835,
											"end": 4842,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4831,
											"end": 4854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4827,
											"end": 4859,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4943,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4824,
											"end": 4943,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4862,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4862,
											"end": 4941,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4941,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 4862,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 4943,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4824,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5043,
											"end": 5049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5007,
											"end": 5060,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5007,
											"end": 5060,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5007,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4953,
											"end": 5070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 5077,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5083,
											"end": 5173,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5083,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5153,
											"end": 5166,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5146,
											"end": 5167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5135,
											"end": 5167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5173,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5179,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5179,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5275,
											"end": 5280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5260,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5255,
											"end": 5258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5381,
											"end": 5385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5432,
											"end": 5497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5432,
											"end": 5497,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5432,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5504,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5594,
											"end": 5605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5623,
											"end": 5626,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5635,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5672,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5510,
											"end": 5679,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5685,
											"end": 5854,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5685,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5825,
											"end": 5846,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520617265206E6F74206120766F74657200000000000000000000000000"
										},
										{
											"begin": 5821,
											"end": 5822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5854,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5860,
											"end": 6226,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5860,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6087,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6023,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6023,
											"end": 6090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6023,
											"end": 6090,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6023,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6090,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6188,
											"end": 6191,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6099,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6099,
											"end": 6192,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6099,
											"end": 6192,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6099,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6208,
											"end": 6220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6201,
											"end": 6220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6201,
											"end": 6220,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5860,
											"end": 6226,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5860,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5860,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5860,
											"end": 6226,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6232,
											"end": 6651,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6232,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6438,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6425,
											"end": 6434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 6439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 6439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6485,
											"end": 6494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6471,
											"end": 6472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6469,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6513,
											"end": 6644,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6513,
											"end": 6644,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6513,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6505,
											"end": 6644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6505,
											"end": 6644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6651,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6657,
											"end": 6829,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6657,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6797,
											"end": 6821,
											"name": "PUSH",
											"source": 2,
											"value": "596F752068617665206E6F7420766F7465642079657400000000000000000000"
										},
										{
											"begin": 6793,
											"end": 6794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6781,
											"end": 6795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6774,
											"end": 6822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6829,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6835,
											"end": 7201,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6835,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "PUSH",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 7057,
											"end": 7060,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6998,
											"end": 7065,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6998,
											"end": 7065,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6998,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6991,
											"end": 7065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6991,
											"end": 7065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7074,
											"end": 7167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7074,
											"end": 7167,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7074,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7192,
											"end": 7194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7187,
											"end": 7190,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 7201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 7201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 7201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 7201,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7431,
											"end": 7448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7424,
											"end": 7471,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7480,
											"end": 7619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7480,
											"end": 7619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 7812,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7632,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7680,
											"end": 7757,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7677,
											"end": 7678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7777,
											"end": 7781,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7767,
											"end": 7782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7805,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7858,
											"end": 7862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7878,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7878,
											"end": 7898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7878,
											"end": 7898,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7878,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7873,
											"end": 7898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7873,
											"end": 7898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7930,
											"end": 7931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7951,
											"end": 7952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7945,
											"end": 7953,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 7976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7942,
											"end": 7976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 7976,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 7942,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7998,
											"end": 7999,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7994,
											"end": 8003,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8009,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8055,
											"end": 8058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8092,
											"end": 8093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8069,
											"end": 8094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8069,
											"end": 8094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8108,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8108,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8108,
											"end": 8128,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8108,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8108,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8103,
											"end": 8128,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8103,
											"end": 8128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8194,
											"end": 8260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8190,
											"end": 8264,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8288,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8181,
											"end": 8288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8288,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8181,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8309,
											"end": 8310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8305,
											"end": 8314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8298,
											"end": 8314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8298,
											"end": 8314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8015,
											"end": 8320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8326,
											"end": 8497,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8326,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8466,
											"end": 8489,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206861766520766F746564206265666F72650000000000000000000000"
										},
										{
											"begin": 8462,
											"end": 8463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8450,
											"end": 8464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8443,
											"end": 8490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8326,
											"end": 8497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8326,
											"end": 8497,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8503,
											"end": 8869,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 8503,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 8725,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8666,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8666,
											"end": 8733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8666,
											"end": 8733,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 8666,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8659,
											"end": 8733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8659,
											"end": 8733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8831,
											"end": 8834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8742,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 8742,
											"end": 8835,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8742,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 8742,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8860,
											"end": 8862,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8855,
											"end": 8858,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8851,
											"end": 8863,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8869,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8875,
											"end": 9294,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8875,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9041,
											"end": 9045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9068,
											"end": 9077,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9064,
											"end": 9082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9056,
											"end": 9082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9056,
											"end": 9082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9128,
											"end": 9137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9122,
											"end": 9126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9118,
											"end": 9138,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9114,
											"end": 9115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9099,
											"end": 9116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9156,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 9282,
											"end": 9286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9156,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9156,
											"end": 9287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9156,
											"end": 9287,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 9156,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9148,
											"end": 9287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9148,
											"end": 9287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 9294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 9294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 9294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8875,
											"end": 9294,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9300,
											"end": 9465,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9300,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9457,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9424,
											"end": 9438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9465,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9698,
											"end": 9700,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 9693,
											"end": 9696,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9799,
											"end": 9802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9828,
											"end": 9830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10009,
											"end": 10013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10090,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10060,
											"end": 10107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10268,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10268,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10316,
											"end": 10393,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10313,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10413,
											"end": 10417,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 10410,
											"end": 10411,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10403,
											"end": 10418,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10434,
											"end": 10435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10442,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10494,
											"end": 10495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10511,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10511,
											"end": 10531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10511,
											"end": 10531,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 10511,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10506,
											"end": 10531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10565,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10584,
											"end": 10585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10574,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10574,
											"end": 10609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10589,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10574,
											"end": 10609,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10574,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10631,
											"end": 10632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10629,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10624,
											"end": 10633,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10619,
											"end": 10633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10619,
											"end": 10633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 10639,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10645,
											"end": 10818,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10645,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10785,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "566F74696E67206973206E6F7420617661696C61626C65000000000000000000"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10769,
											"end": 10783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10818,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 11051,
											"end": 11053,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10980,
											"end": 11054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10980,
											"end": 11054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 11152,
											"end": 11155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11181,
											"end": 11183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11176,
											"end": 11179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11172,
											"end": 11184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11402,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11389,
											"end": 11398,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11377,
											"end": 11403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11377,
											"end": 11403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11443,
											"end": 11447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11439,
											"end": 11459,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11433,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11420,
											"end": 11437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11413,
											"end": 11460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11469,
											"end": 11608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11469,
											"end": 11608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11621,
											"end": 11785,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 11621,
											"end": 11785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11761,
											"end": 11777,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F205374616B6520466F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 11757,
											"end": 11758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11745,
											"end": 11759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11738,
											"end": 11778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11621,
											"end": 11785,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11791,
											"end": 12157,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 11791,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11933,
											"end": 11936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11954,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 12018,
											"end": 12020,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11954,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11954,
											"end": 12021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11954,
											"end": 12021,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 11954,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11947,
											"end": 12021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11947,
											"end": 12021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12030,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 12119,
											"end": 12122,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12030,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12030,
											"end": 12123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12030,
											"end": 12123,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 12030,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12148,
											"end": 12150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12143,
											"end": 12146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12139,
											"end": 12151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12132,
											"end": 12151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12132,
											"end": 12151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11791,
											"end": 12157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11791,
											"end": 12157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11791,
											"end": 12157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11791,
											"end": 12157,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12163,
											"end": 12582,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 12163,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12329,
											"end": 12333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12367,
											"end": 12369,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12356,
											"end": 12365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12416,
											"end": 12425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12410,
											"end": 12414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12406,
											"end": 12426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12400,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12387,
											"end": 12404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12380,
											"end": 12427,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12444,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 12570,
											"end": 12574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12444,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12444,
											"end": 12575,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12444,
											"end": 12575,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 12444,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12436,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12436,
											"end": 12575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12163,
											"end": 12582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12163,
											"end": 12582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12163,
											"end": 12582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12163,
											"end": 12582,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12628,
											"end": 12635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12651,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 12669,
											"end": 12670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12651,
											"end": 12671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 12651,
											"end": 12671,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12651,
											"end": 12671,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 12651,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12646,
											"end": 12671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12646,
											"end": 12671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12685,
											"end": 12705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 12703,
											"end": 12704,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12685,
											"end": 12705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 12685,
											"end": 12705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12685,
											"end": 12705,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 12685,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12705,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12680,
											"end": 12705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12873,
											"end": 12874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12805,
											"end": 12871,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12801,
											"end": 12875,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12795,
											"end": 12876,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12790,
											"end": 12791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12783,
											"end": 12792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12793,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12772,
											"end": 12877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12900,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 12769,
											"end": 12900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12900,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 12769,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12928,
											"end": 12929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12910,
											"end": 12930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12910,
											"end": 12930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12936,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12942,
											"end": 13109,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 12942,
											"end": 13109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13082,
											"end": 13101,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F722074696D657374616D702030000000000000000000000000000000"
										},
										{
											"begin": 13078,
											"end": 13079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13066,
											"end": 13080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13059,
											"end": 13102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12942,
											"end": 13109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12942,
											"end": 13109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13115,
											"end": 13481,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13115,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 13342,
											"end": 13344,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 13337,
											"end": 13340,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13278,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 13278,
											"end": 13345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13278,
											"end": 13345,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 13278,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13271,
											"end": 13345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13271,
											"end": 13345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 13443,
											"end": 13446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 13354,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13472,
											"end": 13474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13467,
											"end": 13470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13463,
											"end": 13475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13456,
											"end": 13475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13456,
											"end": 13475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13115,
											"end": 13481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13487,
											"end": 13906,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 13487,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13653,
											"end": 13657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13691,
											"end": 13693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13680,
											"end": 13689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13668,
											"end": 13694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13668,
											"end": 13694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13740,
											"end": 13749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13734,
											"end": 13738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13730,
											"end": 13750,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13726,
											"end": 13727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13715,
											"end": 13724,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13711,
											"end": 13728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13704,
											"end": 13751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13768,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 13894,
											"end": 13898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13768,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13768,
											"end": 13899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13768,
											"end": 13899,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 13768,
											"end": 13899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 13899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 13899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13487,
											"end": 13906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13487,
											"end": 13906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13487,
											"end": 13906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13487,
											"end": 13906,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13912,
											"end": 14011,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 13912,
											"end": 14011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13964,
											"end": 13970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14003,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13992,
											"end": 14004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13982,
											"end": 14004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13982,
											"end": 14004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13912,
											"end": 14011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13912,
											"end": 14011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13912,
											"end": 14011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13912,
											"end": 14011,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14017,
											"end": 14324,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 14017,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14109,
											"end": 14115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14106,
											"end": 14107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14103,
											"end": 14116,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14189,
											"end": 14192,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14185,
											"end": 14196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14179,
											"end": 14197,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14175,
											"end": 14176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14170,
											"end": 14173,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14166,
											"end": 14177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14159,
											"end": 14198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14131,
											"end": 14133,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14128,
											"end": 14129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14119,
											"end": 14134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14119,
											"end": 14134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 14095,
											"end": 14208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14226,
											"end": 14232,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14223,
											"end": 14224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14220,
											"end": 14233,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14217,
											"end": 14318,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14217,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 14217,
											"end": 14318,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14306,
											"end": 14307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14303,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14292,
											"end": 14295,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14281,
											"end": 14308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14217,
											"end": 14318,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 14217,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14066,
											"end": 14324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14017,
											"end": 14324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14017,
											"end": 14324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14017,
											"end": 14324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14017,
											"end": 14324,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14330,
											"end": 14432,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 14330,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14371,
											"end": 14377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14424,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14418,
											"end": 14425,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14413,
											"end": 14415,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14406,
											"end": 14411,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14402,
											"end": 14416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14398,
											"end": 14426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14388,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14388,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14330,
											"end": 14432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14330,
											"end": 14432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14330,
											"end": 14432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14330,
											"end": 14432,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14526,
											"end": 14529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14554,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14587,
											"end": 14592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14554,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 14554,
											"end": 14593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14554,
											"end": 14593,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14554,
											"end": 14593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14668,
											"end": 14671,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14609,
											"end": 14680,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14609,
											"end": 14680,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14609,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14602,
											"end": 14680,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14602,
											"end": 14680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14689,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 14734,
											"end": 14740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14729,
											"end": 14732,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14722,
											"end": 14726,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14715,
											"end": 14720,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14711,
											"end": 14727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14689,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 14689,
											"end": 14741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14689,
											"end": 14741,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 14689,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14766,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 14788,
											"end": 14794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14766,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 14766,
											"end": 14795,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14766,
											"end": 14795,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 14766,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14761,
											"end": 14764,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14757,
											"end": 14796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14750,
											"end": 14796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14750,
											"end": 14796,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14530,
											"end": 14802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14438,
											"end": 14802,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14921,
											"end": 14925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 14961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14948,
											"end": 14957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14944,
											"end": 14962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14936,
											"end": 14962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14936,
											"end": 14962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15008,
											"end": 15017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15002,
											"end": 15006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14998,
											"end": 15018,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14994,
											"end": 14995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14983,
											"end": 14992,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 14996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14972,
											"end": 15019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15109,
											"end": 15113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15100,
											"end": 15106,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15036,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 15036,
											"end": 15114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15036,
											"end": 15114,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15036,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15028,
											"end": 15114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15028,
											"end": 15114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14808,
											"end": 15121,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"airdropWeek()": "cbb3e152",
							"hasStake()": "10486b6a",
							"isVoter(address)": "a7771ee3",
							"retractVote()": "070c8b74",
							"stakingPenaltyRate()": "cb79c2e1",
							"totalVoters()": "5f5300ff",
							"vote()": "632a9a52",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable_airdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"isVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retractVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0xdb7c3cb146bb07afead78e844d9e32c286d67f1863164085755e96aebc1ca309\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://793d6cd81eb6c29c499d590ade25ce8bcbcc50cdb10daefff3037c2f2da04d75\",\"dweb:/ipfs/QmTvPSRnWsMuTa6LbY22QbK33Dmg2woAvE7983R5Q3si93\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 328,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 330,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropSince",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 336,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 338,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "totalVoters",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 343,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "voters",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Voter)326_storage)"
							},
							{
								"astId": 347,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "votedUsers",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 425,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(Stakeholder)411_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stakeholder)411_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stakeholder)",
								"numberOfBytes": "32",
								"value": "t_struct(Stakeholder)411_storage"
							},
							"t_mapping(t_address,t_struct(Voter)326_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)326_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)403_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 390,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 392,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 394,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 396,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 398,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable_airdrop",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 400,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 402,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Stakeholder)411_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stakeholder",
								"members": [
									{
										"astId": 406,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "stake",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Stake)403_storage"
									},
									{
										"astId": 408,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "7",
										"type": "t_address"
									},
									{
										"astId": 410,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(Voter)326_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Voter",
								"members": [
									{
										"astId": 321,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 325,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							1191
						],
						"Voting___votingStatus": [
							316
						]
					},
					"id": 1192,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 312,
							"src": "64:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 316,
							"name": "Voting___votingStatus",
							"nameLocation": "129:21:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 315,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "150:2:1"
							},
							"src": "123:30:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1191,
							"linearizedBaseContracts": [
								1191
							],
							"name": "Stakable",
							"nameLocation": "164:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 319,
									"libraryName": {
										"id": 317,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "185:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "179:27:1",
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "198:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Stakable.Voter",
									"id": 326,
									"members": [
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "404:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "399:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 320,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "399:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 325,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "450:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 326,
											"src": "425:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 324,
												"keyType": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "425:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "383:5:1",
									"nodeType": "StructDefinition",
									"scope": 1191,
									"src": "376:86:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 328,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "483:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "468:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "468:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 330,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "522:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "507:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 332,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "554:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "539:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "539:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "587:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "573:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 333,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "573:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "623:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "606:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "606:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 338,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "653:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "638:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 343,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "703:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "670:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
										"typeString": "mapping(address => struct Stakable.Voter)"
									},
									"typeName": {
										"id": 342,
										"keyType": {
											"id": 339,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "678:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "670:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
											"typeString": "mapping(address => struct Stakable.Voter)"
										},
										"valueType": {
											"id": 341,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 340,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "689:5:1"
											},
											"referencedDeclaration": 326,
											"src": "689:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$326_storage_ptr",
												"typeString": "struct Stakable.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 347,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "750:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "715:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 346,
										"keyType": {
											"id": 344,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "723:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "715:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 345,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "734:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "781:128:1",
										"statements": [
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 350,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "853:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "874:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "853:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "853:23:1"
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 354,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "886:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "900:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "886:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "886:16:1"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:2:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:0:1"
									},
									"scope": 1191,
									"src": "767:142:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1075:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1093:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1102:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1093:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f205374616b6520466f756e64",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1105:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a",
																"typeString": "literal_string \"No Stake Found\""
															},
															"value": "No Stake Found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1382668451cba5249c84b6eb3589abcd763b454d2442595ce729b0e20103df5a",
																"typeString": "literal_string \"No Stake Found\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "1085:37:1"
											}
										]
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkUserStake",
									"nameLocation": "1029:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1053:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1045:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:16:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:1"
									},
									"scope": 1191,
									"src": "1020:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "1179:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "_votingStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1197:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e67206973206e6f7420617661696c61626c65",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1212:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																"typeString": "literal_string \"Voting is not available\""
															},
															"value": "Voting is not available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1138f52ee430448b689d4755fc6ce7436d74d91a0eb9cb2ca57801bbd4b77ccc",
																"typeString": "literal_string \"Voting is not available\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1189:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "1189:49:1"
											}
										]
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVotingStatus",
									"nameLocation": "1144:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:2:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:0:1"
									},
									"scope": 1191,
									"src": "1135:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "1279:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 383,
														"name": "_checkVotingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "1289:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1289:20:1"
											},
											{
												"id": 386,
												"nodeType": "PlaceholderStatement",
												"src": "1319:1:1"
											}
										]
									},
									"id": 388,
									"name": "votingStatusTrue",
									"nameLocation": "1260:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:1"
									},
									"src": "1251:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 403,
									"members": [
										{
											"constant": false,
											"id": 390,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1591:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1583:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 389,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1583:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 392,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1613:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1605:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 391,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1605:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "1637:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1629:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1629:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1759:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1751:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1751:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"mutability": "mutable",
											"name": "claimable_airdrop",
											"nameLocation": "1786:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1778:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1778:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1821:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1813:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 399,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1813:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 402,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1848:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 403,
											"src": "1840:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1840:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1567:5:1",
									"nodeType": "StructDefinition",
									"scope": 1191,
									"src": "1560:306:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 411,
									"members": [
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1984:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "1978:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$403_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 405,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 404,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 403,
													"src": "1978:5:1"
												},
												"referencedDeclaration": 403,
												"src": "1978:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$403_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 408,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "2007:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "1999:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 407,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1999:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 410,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "2029:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "2021:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 409,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2021:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1956:11:1",
									"nodeType": "StructDefinition",
									"scope": 1191,
									"src": "1949:102:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 419,
									"members": [
										{
											"constant": false,
											"id": 413,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2228:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 419,
											"src": "2220:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2220:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2258:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 419,
											"src": "2250:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 414,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2250:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 418,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2281:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 419,
											"src": "2275:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$403_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 417,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 416,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 403,
													"src": "2275:5:1"
												},
												"referencedDeclaration": 403,
												"src": "2275:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$403_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2195:14:1",
									"nodeType": "StructDefinition",
									"scope": 1191,
									"src": "2188:105:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2299:111:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 425,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "2456:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "2415:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
										"typeString": "mapping(address => struct Stakable.Stakeholder)"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 421,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2423:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2415:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
											"typeString": "mapping(address => struct Stakable.Stakeholder)"
										},
										"valueType": {
											"id": 423,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 422,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 411,
												"src": "2434:11:1"
											},
											"referencedDeclaration": 411,
											"src": "2434:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$411_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "2475:124:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 436,
									"name": "Staked",
									"nameLocation": "2610:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2642:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "2626:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2664:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "2656:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2688:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "2680:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2715:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "2707:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2616:116:1"
									},
									"src": "2604:129:1"
								},
								{
									"anonymous": false,
									"id": 440,
									"name": "PenaltyChanged",
									"nameLocation": "2745:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2768:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2760:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:16:1"
									},
									"src": "2739:37:1"
								},
								{
									"anonymous": false,
									"id": 444,
									"name": "AirdropChanged",
									"nameLocation": "2787:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2810:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2802:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2801:16:1"
									},
									"src": "2781:37:1"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2863:47:1",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 447,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2873:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 448,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2888:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2888:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2873:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2873:30:1"
											}
										]
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startAirdropSince",
									"nameLocation": "2833:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2851:2:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2863:0:1"
									},
									"scope": 1191,
									"src": "2824:86:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "2987:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3034:6:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															}
														],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 460,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3005:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3005:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 462,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "3023:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3005:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 464,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3004:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "3004:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3004:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 459,
												"id": 468,
												"nodeType": "Return",
												"src": "2997:44:1"
											}
										]
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateWeek",
									"nameLocation": "2925:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "2948:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2940:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:15:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2978:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:9:1"
									},
									"scope": 1191,
									"src": "2916:132:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "3397:850:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 483,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "3469:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3479:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3469:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3482:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3461:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3461:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3461:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 490,
																			"name": "stakeholders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "3523:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
																				"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																			}
																		},
																		"id": 492,
																		"indexExpression": {
																			"id": 491,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "3536:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3523:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$411_storage",
																			"typeString": "struct Stakable.Stakeholder storage ref"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 406,
																	"src": "3523:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$403_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 392,
																"src": "3523:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3559:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3523:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722069732061207374616b6572",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															},
															"value": "User is a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "3515:66:1"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "3592:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3607:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3592:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3592:16:1"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 504,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "3618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 506,
															"indexExpression": {
																"id": 505,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "3625:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3618:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$326_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "3618:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3646:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3618:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3618:32:1"
											},
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3756:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "3748:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 511,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3748:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"expression": {
														"id": 513,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3768:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3768:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3748:35:1"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 516,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "3911:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																}
															},
															"id": 518,
															"indexExpression": {
																"id": 517,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "3924:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3911:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$411_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 406,
														"src": "3911:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$403_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 521,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "3958:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 522,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "3977:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 523,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "3998:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4021:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 526,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "4051:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 527,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "4077:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 528,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 512,
																			"src": "4092:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4077:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 530,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4076:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 520,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3939:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$403_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3939:173:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "3911:201:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$403_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "3911:201:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 535,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "4186:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4193:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 537,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "4202:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 538,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "4214:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 539,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "4229:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4214:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4213:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "4179:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4179:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "EmitStatement",
												"src": "4174:66:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "3054:200:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "3268:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3292:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3284:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3284:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3315:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3307:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3307:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "3340:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3332:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "3370:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3362:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3274:113:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:0:1"
									},
									"scope": 1191,
									"src": "3259:988:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "4306:155:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "4324:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4335:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4324:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c7479206665652063616e6e6f742065786365656420332070657263656e742e",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4339:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															},
															"value": "Penalty fee cannot exceed 3 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4316:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4316:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "4316:62:1"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "4388:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 558,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4388:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "4388:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 562,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4446:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "4431:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "4426:28:1"
											}
										]
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changePenaltyFee",
									"nameLocation": "4262:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "4288:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4280:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4279:17:1"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4306:0:1"
									},
									"scope": 1191,
									"src": "4253:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4527:157:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "4545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323030",
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4556:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "4545:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f702050657263656e746167652063616e6e6f74206578636565642032302070657263656e742e",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4561:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															},
															"value": "Airdrop Percentage cannot exceed 20 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4537:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "4537:71:1"
											},
											{
												"expression": {
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 578,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "4618:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 579,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "4632:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4618:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "4618:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 583,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4669:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 582,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4654:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4654:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "EmitStatement",
												"src": "4649:28:1"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAirdropPercentage",
									"nameLocation": "4476:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "4509:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4501:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4500:17:1"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4527:0:1"
									},
									"scope": 1191,
									"src": "4467:217:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4800:291:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 595,
																"name": "since_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "4818:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4827:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4818:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722074696d657374616d702030",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															},
															"value": "Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4810:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4810:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "4810:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 603,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4963:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4963:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 605,
																			"name": "since_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "4981:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4963:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 607,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4962:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4991:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "4962:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5013:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5039:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 601,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4932:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "4932:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4932:152:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 593,
												"id": 613,
												"nodeType": "Return",
												"src": "4913:171:1"
											}
										]
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingDuration",
									"nameLocation": "4699:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "since_",
												"nameLocation": "4732:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4724:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:16:1"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4787:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:9:1"
									},
									"scope": 1191,
									"src": "4690:401:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "5212:320:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 623,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5226:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "5226:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5247:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5226:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "5222:61:1",
												"trueBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "5250:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5271:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 622,
															"id": 628,
															"nodeType": "Return",
															"src": "5264:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 631,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 618,
																			"src": "5400:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "5400:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 633,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 618,
																			"src": "5436:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 400,
																		"src": "5436:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5400:56:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 637,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 618,
																				"src": "5500:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 638,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 394,
																			"src": "5500:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 636,
																		"name": "calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "5475:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5475:42:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5400:117:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 641,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5399:119:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5521:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "5399:126:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 644,
												"nodeType": "Return",
												"src": "5380:145:1"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "5106:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "5140:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5127:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 403,
														"src": "5127:5:1"
													},
													"referencedDeclaration": 403,
													"src": "5127:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$403_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5126:25:1"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5199:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5198:9:1"
									},
									"scope": 1191,
									"src": "5097:435:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "5665:182:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 661,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "5722:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 662,
																			"name": "stakingPenaltyRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "5730:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 659,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "5709:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "5709:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5709:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5751:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 657,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5696:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "5696:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5696:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 670,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "5796:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 671,
																			"name": "stakingPenaltyRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "5804:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 668,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "5783:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 205,
																		"src": "5783:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5783:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5825:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"expression": {
																	"id": 666,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5770:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "5770:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5770:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 675,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5682:158:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 656,
												"id": 676,
												"nodeType": "Return",
												"src": "5675:165:1"
											}
										]
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePenalty",
									"nameLocation": "5547:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5572:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5564:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5564:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5588:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5580:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5563:32:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5643:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5642:18:1"
									},
									"scope": 1191,
									"src": "5538:309:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "5991:326:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "6005:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6015:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6005:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "6001:55:1",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "6018:38:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6040:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6043:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 694,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6039:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 688,
															"id": 695,
															"nodeType": "Return",
															"src": "6032:13:1"
														}
													]
												}
											},
											{
												"assignments": [
													699,
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "amount_penalty",
														"nameLocation": "6075:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "6067:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6067:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "reward_penalty",
														"nameLocation": "6099:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "6091:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [
														{
															"id": 703,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "6147:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 704,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "6167:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "calculatePenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "6117:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6117:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6066:117:1"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 709,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "6227:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 710,
																	"name": "amount_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "6235:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 707,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6214:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6214:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6214:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 714,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "6277:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 715,
																	"name": "reward_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "6285:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 712,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "6264:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "6264:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6264:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 717,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6200:110:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 688,
												"id": 718,
												"nodeType": "Return",
												"src": "6193:117:1"
											}
										]
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingWithPenalty",
									"nameLocation": "5862:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5898:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5890:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5890:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5914:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5906:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5889:32:1"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5969:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5969:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5978:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5978:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5968:18:1"
									},
									"scope": 1191,
									"src": "5853:464:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "6736:554:1",
										"statements": [
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "6832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "6819:18:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 731,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 730,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 403,
																"src": "6819:5:1"
															},
															"referencedDeclaration": 403,
															"src": "6819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 733,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6840:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 735,
														"indexExpression": {
															"id": 734,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "6853:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6840:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$411_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 406,
													"src": "6840:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$403_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6819:46:1"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6884:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "6876:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6876:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [
														{
															"id": 741,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6914:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 740,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "6893:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$403_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6893:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6876:44:1"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6931:26:1",
													"subExpression": {
														"baseExpression": {
															"id": 744,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6938:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 746,
														"indexExpression": {
															"id": 745,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "6951:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6938:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$411_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "6931:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 749,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6972:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 402,
														"src": "6972:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 751,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6992:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6992:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6972:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "6968:203:1",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "7009:162:1",
													"statements": [
														{
															"expression": {
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 754,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7023:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7038:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7023:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 757,
															"nodeType": "ExpressionStatement",
															"src": "7023:16:1"
														},
														{
															"expression": {
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "7053:37:1",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 758,
																				"name": "voters",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "7060:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																					"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																				}
																			},
																			"id": 760,
																			"indexExpression": {
																				"id": 759,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "7067:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7060:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Voter_$326_storage",
																				"typeString": "struct Stakable.Voter storage ref"
																			}
																		},
																		"id": 761,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 325,
																		"src": "7060:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 763,
																	"indexExpression": {
																		"id": 762,
																		"name": "_votingId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "7080:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7060:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "7053:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 767,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 732,
																			"src": "7139:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "7139:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 769,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "7153:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 766,
																	"name": "calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "7111:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7111:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 729,
															"id": 771,
															"nodeType": "Return",
															"src": "7104:56:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 774,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "7181:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7196:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7181:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "7181:16:1"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7207:37:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 778,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "7214:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 780,
																"indexExpression": {
																	"id": 779,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "7221:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7214:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "7214:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 783,
														"indexExpression": {
															"id": 782,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7234:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7214:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "7207:37:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 786,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "7262:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 392,
															"src": "7262:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 788,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7276:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 789,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7261:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 729,
												"id": 790,
												"nodeType": "Return",
												"src": "7254:29:1"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "6323:333:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "6670:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6693:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6685:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6685:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:15:1"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6718:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6718:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6727:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6727:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6717:18:1"
									},
									"scope": 1191,
									"src": "6661:629:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "7362:1000:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "7391:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "7372:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 799,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 798,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 411,
																"src": "7372:11:1"
															},
															"referencedDeclaration": 411,
															"src": "7372:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$411_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"baseExpression": {
														"id": 801,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "7398:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 804,
													"indexExpression": {
														"expression": {
															"id": 802,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7411:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7411:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7398:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$411_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7372:50:1"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "7454:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "7432:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 807,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 806,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 419,
																"src": "7432:14:1"
															},
															"referencedDeclaration": 419,
															"src": "7432:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$419_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7479:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7482:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 812,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "7485:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																	"typeString": "struct Stakable.Stakeholder memory"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 406,
															"src": "7485:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 809,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "7464:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$419_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7464:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7432:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 817,
																	"name": "summary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "7522:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																		"typeString": "struct Stakable.StakingSummary memory"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 418,
																"src": "7522:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 392,
															"src": "7522:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "_checkUserStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "7506:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
															"typeString": "function (uint256) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7506:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "7506:37:1"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "availableReward",
														"nameLocation": "7562:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "7554:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7554:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 825,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "7601:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 418,
															"src": "7601:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 824,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "7580:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$403_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7580:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7554:61:1"
											},
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "7633:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "7625:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 829,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"nodeType": "VariableDeclarationStatement",
												"src": "7625:15:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 832,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "7655:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 418,
															"src": "7655:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 402,
														"src": "7655:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 835,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7683:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7683:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7655:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "7651:281:1",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "7700:232:1",
													"statements": [
														{
															"assignments": [
																839,
																841
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 839,
																	"mutability": "mutable",
																	"name": "amount_penalty",
																	"nameLocation": "7723:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 855,
																	"src": "7715:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7715:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 841,
																	"mutability": "mutable",
																	"name": "reward_penalty",
																	"nameLocation": "7747:14:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 855,
																	"src": "7739:22:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 840,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7739:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 848,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 843,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "7799:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 844,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 418,
																			"src": "7799:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "7799:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 846,
																		"name": "availableReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "7837:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 842,
																	"name": "calculatePenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "7765:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7765:101:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7714:152:1"
														},
														{
															"expression": {
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 849,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "7880:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 850,
																		"name": "amount_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "7890:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 851,
																		"name": "reward_penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "7907:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7890:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7880:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 854,
															"nodeType": "ExpressionStatement",
															"src": "7880:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 858,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "7961:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 410,
																"src": "7961:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 857,
															"name": "_calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "7946:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7946:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7985:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7946:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "8131:60:1",
													"statements": [
														{
															"expression": {
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 880,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "8145:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 418,
																		"src": "8145:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable_airdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 398,
																	"src": "8145:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8179:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8145:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 887,
															"nodeType": "ExpressionStatement",
															"src": "8145:35:1"
														}
													]
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "7942:249:1",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "7988:137:1",
													"statements": [
														{
															"assignments": [
																864
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 864,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "8010:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 879,
																	"src": "8002:15:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 863,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8002:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 870,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"expression": {
																				"id": 866,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "8038:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																					"typeString": "struct Stakable.StakingSummary memory"
																				}
																			},
																			"id": 867,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stake",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 418,
																			"src": "8038:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "8038:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 865,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "8020:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8020:39:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8002:57:1"
														},
														{
															"expression": {
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 871,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "8073:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 418,
																		"src": "8073:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable_airdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 398,
																	"src": "8073:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 876,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "8107:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8073:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "8073:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 890,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "8201:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 418,
															"src": "8201:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 396,
														"src": "8201:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 895,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "8227:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8201:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "8201:41:1"
											},
											{
												"expression": {
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 898,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8252:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 415,
														"src": "8252:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 901,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "8270:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8252:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "8252:25:1"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 904,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8287:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "8287:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 907,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "8310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 418,
															"src": "8310:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "8310:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8287:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "8287:43:1"
											},
											{
												"expression": {
													"id": 912,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "8348:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 797,
												"id": 913,
												"nodeType": "Return",
												"src": "8341:14:1"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "7305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7313:2:1"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "7339:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$419_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 795,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 794,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 419,
														"src": "7339:14:1"
													},
													"referencedDeclaration": 419,
													"src": "7339:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$419_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7338:23:1"
									},
									"scope": 1191,
									"src": "7296:1066:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "8581:71:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 922,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "8600:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 923,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "8614:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8600:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 925,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8599:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8629:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "8599:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 928,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8598:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8637:8:1",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "8598:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 921,
												"id": 931,
												"nodeType": "Return",
												"src": "8591:54:1"
											}
										]
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "8482:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "8508:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8500:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8499:21:1"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8567:9:1"
									},
									"scope": 1191,
									"src": "8473:179:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "8730:415:1",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "stakeholder",
														"nameLocation": "8759:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "8740:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 941,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 940,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 411,
																"src": "8740:11:1"
															},
															"referencedDeclaration": 411,
															"src": "8740:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$411_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"baseExpression": {
														"id": 943,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "8773:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$411_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 945,
													"indexExpression": {
														"id": 944,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "8786:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8773:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$411_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8740:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 948,
																	"name": "stakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "8821:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 406,
																"src": "8821:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 392,
															"src": "8821:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 947,
														"name": "_checkUserStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "8805:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
															"typeString": "function (uint256) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8805:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "8805:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 955,
																			"name": "stakeholder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "8893:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																				"typeString": "struct Stakable.Stakeholder memory"
																			}
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDrop",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 410,
																		"src": "8893:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 954,
																	"name": "_calculateWeek",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "8878:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8878:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8878:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d61626c65206f6e63652061207765656b",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8939:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																"typeString": "literal_string \"Claimable once a week\""
															},
															"value": "Claimable once a week"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																"typeString": "literal_string \"Claimable once a week\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8857:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8857:115:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "8857:115:1"
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 963,
																"name": "stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "8983:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																	"typeString": "struct Stakable.Stakeholder memory"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 406,
															"src": "8983:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable_airdrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 398,
														"src": "8983:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9021:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8983:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "8983:39:1"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 971,
															"name": "stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "9032:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																"typeString": "struct Stakable.Stakeholder memory"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "9032:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 974,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9062:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9062:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9032:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "9032:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 979,
																	"name": "stakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9113:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$411_memory_ptr",
																		"typeString": "struct Stakable.Stakeholder memory"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 406,
																"src": "9113:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$403_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 392,
															"src": "9113:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "_calculateAirdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "9095:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9095:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 983,
												"nodeType": "Return",
												"src": "9088:50:1"
											}
										]
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimAirdrop",
									"nameLocation": "8667:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "8689:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "8681:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8681:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8680:17:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "8721:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8720:9:1"
									},
									"scope": 1191,
									"src": "8658:487:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "9204:151:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 990,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9218:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9234:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9218:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "9316:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9337:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 989,
															"id": 1003,
															"nodeType": "Return",
															"src": "9330:8:1"
														}
													]
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "9214:135:1",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "9237:73:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 993,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "9259:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "9259:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 995,
																				"name": "airdropSince",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "9277:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9259:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 997,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9258:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9293:6:1",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "7"
																},
																"src": "9258:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 989,
															"id": 1000,
															"nodeType": "Return",
															"src": "9251:48:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cbb3e152",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "airdropWeek",
									"nameLocation": "9160:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9171:2:1"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "9195:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9194:9:1"
									},
									"scope": 1191,
									"src": "9151:204:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "9499:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "_votingStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "9517:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9534:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "9517:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720697320616c72656164792072756e6e696e67",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9541:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0",
																"typeString": "literal_string \"Voting is already running\""
															},
															"value": "Voting is already running"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_969fcb32819a2e5a3a691d23a4d49e930347b87e51b5eda1c61c0d5f2288a7a0",
																"typeString": "literal_string \"Voting is already running\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9509:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "9509:60:1"
											},
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "9579:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9595:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9579:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "9579:20:1"
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1021,
														"name": "_votingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "9609:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9622:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9609:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "9609:14:1"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startVoting",
									"nameLocation": "9475:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:2:1"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9499:0:1"
									},
									"scope": 1191,
									"src": "9466:164:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "9697:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "9715:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9734:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9726:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9726:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9715:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9738:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9707:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "9707:49:1"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1043,
															"name": "voters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9774:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																"typeString": "mapping(address => struct Stakable.Voter storage ref)"
															}
														},
														"id": 1045,
														"indexExpression": {
															"id": 1044,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "9781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9774:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$326_storage",
															"typeString": "struct Stakable.Voter storage ref"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "votingRight",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 321,
													"src": "9774:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1047,
												"nodeType": "Return",
												"src": "9767:34:1"
											}
										]
									},
									"functionSelector": "a7771ee3",
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVoter",
									"nameLocation": "9645:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "9661:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "9653:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9652:17:1"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "9691:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1030,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9690:6:1"
									},
									"scope": 1191,
									"src": "9636:172:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "9854:298:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1055,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "9872:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1058,
																	"indexExpression": {
																		"expression": {
																			"id": 1056,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9879:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9879:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9872:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votingRight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "9872:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9906:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "9872:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120766f746572",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9912:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															},
															"value": "You are not a voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9864:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9864:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "9864:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1066,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "9965:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																				"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																			}
																		},
																		"id": 1069,
																		"indexExpression": {
																			"expression": {
																				"id": 1067,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9972:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9972:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9965:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$326_storage",
																			"typeString": "struct Stakable.Voter storage ref"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 325,
																	"src": "9965:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1072,
																"indexExpression": {
																	"id": 1071,
																	"name": "_votingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "9990:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9965:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10004:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "9965:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206861766520766f746564206265666f7265",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10023:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																"typeString": "literal_string \"You have voted before\""
															},
															"value": "You have voted before"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6cd3dc8b58b044759ec8a04a341cee3ac69749cc7b33a3876a5b0ed36f28215",
																"typeString": "literal_string \"You have voted before\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9944:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9944:112:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "9944:112:1"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1078,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "10067:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1081,
																"indexExpression": {
																	"expression": {
																		"id": 1079,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10074:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10074:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10067:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "10067:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"id": 1083,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10092:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10067:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10105:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10067:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "10067:42:1"
											},
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1088,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10119:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1090,
														"indexExpression": {
															"id": 1089,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10130:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10119:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10144:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10119:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "10119:26:1"
											}
										]
									},
									"functionSelector": "632a9a52",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1052,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1051,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "9837:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "9837:16:1"
										}
									],
									"name": "vote",
									"nameLocation": "9823:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9827:2:1"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9854:0:1"
									},
									"scope": 1191,
									"src": "9814:338:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "10205:300:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1101,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "10223:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1104,
																	"indexExpression": {
																		"expression": {
																			"id": 1102,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10230:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10230:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10223:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$326_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "votingRight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "10223:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10257:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10223:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120766f746572",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10263:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															},
															"value": "You are not a voter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1622962dddbb0bc5b80d9842cc6f818a1dcbb631c25adc1827fc170d7b8f3f56",
																"typeString": "literal_string \"You are not a voter\""
															}
														],
														"id": 1100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10215:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10215:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "10215:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1112,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "10316:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																				"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																			}
																		},
																		"id": 1115,
																		"indexExpression": {
																			"expression": {
																				"id": 1113,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "10323:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "10323:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10316:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$326_storage",
																			"typeString": "struct Stakable.Voter storage ref"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 325,
																	"src": "10316:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1118,
																"indexExpression": {
																	"id": 1117,
																	"name": "_votingId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "10341:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10316:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10355:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10316:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f7420766f74656420796574",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10373:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																"typeString": "literal_string \"You have not voted yet\""
															},
															"value": "You have not voted yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a8853ea1660661101fb36486911b88875a73ac2790e2973573eaa89a7746d10",
																"typeString": "literal_string \"You have not voted yet\""
															}
														],
														"id": 1111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10295:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10295:112:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "10295:112:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1124,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "10418:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$326_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1127,
																"indexExpression": {
																	"expression": {
																		"id": 1125,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10425:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10425:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10418:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$326_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 325,
															"src": "10418:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1130,
														"indexExpression": {
															"id": 1129,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10443:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10418:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10457:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10418:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "10418:44:1"
											},
											{
												"expression": {
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1134,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10472:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1136,
														"indexExpression": {
															"id": 1135,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10483:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10472:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10497:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10472:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "10472:26:1"
											}
										]
									},
									"functionSelector": "070c8b74",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "10188:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10188:16:1"
										}
									],
									"name": "retractVote",
									"nameLocation": "10167:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10178:2:1"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10205:0:1"
									},
									"scope": 1191,
									"src": "10158:347:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "10585:270:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1149,
																"name": "totalVoters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "10603:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10617:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10603:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f74657273",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10620:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171",
																"typeString": "literal_string \"Not enough voters\""
															},
															"value": "Not enough voters"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8443067fe584654845e3de9005bf323ce8e62d22ddf82e3572418fb8e736e171",
																"typeString": "literal_string \"Not enough voters\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10595:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "10595:45:1"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "half_voters",
														"nameLocation": "10658:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "10650:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1161,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "10698:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10711:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"expression": {
																	"id": 1159,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "10685:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "10685:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10685:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3130",
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10715:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1157,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "10672:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "10672:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10672:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10650:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1167,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "10733:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1168,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10744:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10733:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1170,
														"name": "half_voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "10757:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10733:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "10812:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10833:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1147,
															"id": 1176,
															"nodeType": "Return",
															"src": "10826:12:1"
														}
													]
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "10729:120:1",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "10770:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10791:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1147,
															"id": 1173,
															"nodeType": "Return",
															"src": "10784:11:1"
														}
													]
												}
											}
										]
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "10553:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10553:16:1"
										}
									],
									"name": "_getVotingResult",
									"nameLocation": "10520:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10536:2:1"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "10579:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10579:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10578:6:1"
									},
									"scope": 1191,
									"src": "10511:344:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "10910:38:1",
										"statements": [
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10920:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10936:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10920:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "10920:21:1"
											}
										]
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1182,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "10893:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10893:16:1"
										}
									],
									"name": "_stopVoting",
									"nameLocation": "10870:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:2:1"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10910:0:1"
									},
									"scope": 1191,
									"src": "10861:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1192,
							"src": "155:10795:1",
							"usedErrors": []
						}
					],
					"src": "39:10912:1"
				},
				"id": 1
			}
		}
	}
}