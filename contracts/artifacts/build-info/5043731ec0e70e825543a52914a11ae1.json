{
	"id": "5043731ec0e70e825543a52914a11ae1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Whitelist.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./Interfaces.sol\";\n\ncontract Whitelist {\n    using SafeMath for uint256;\n    uint256 public privateSaleUsers;\n\n    uint256 public privateSaleAmount;\n    uint256 internal constant _phase1 = 73395000 * 1e18;\n    uint256 internal constant _phase2 = 3820562 * 1e18; // daily limit\n\n    uint256 public startPrivateSale;\n\n    struct WhitelistStruct {\n        uint256 lockedAmount;\n        uint256 amount;\n        bool isPhase1Claimed;\n        uint256 latestClaimDay;\n    }\n\n    // beneficiary of tokens after they are released\n    mapping(address => WhitelistStruct) private _beneficiary;\n\n    address talaxAddress;\n\n    constructor() {\n        privateSaleAmount = 1467900000 * 1e18;\n        talaxAddress = msg.sender;\n    }\n\n    /* ------------------------------------------ modifier ------------------------------------------ */\n    function _onlyTalax() internal view {\n        require(msg.sender == talaxAddress, \"Not authorized\");\n    }\n\n    modifier onlyTalax() {\n        _onlyTalax();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyTalax {\n        talaxAddress = talax;\n    }\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        )\n    {\n        WhitelistStruct memory beneficiary = _beneficiary[user];\n        return (\n            beneficiary.lockedAmount,\n            beneficiary.amount,\n            beneficiary.isPhase1Claimed,\n            beneficiary.latestClaimDay\n        );\n    }\n\n    function initiateWhitelist() external onlyTalax {\n        startPrivateSale = block.timestamp;\n    }\n\n    function hasWhitelist(address user)\n        external\n        view\n        returns (WhitelistStruct memory)\n    {\n        return _beneficiary[user];\n    }\n\n    /**\n     *  @dev \t\tMain Functions\n     *  @return \tClaimable amount from Locked Wallet\n     */\n    function _calculateClaimableAmount(address user)\n        internal\n        returns (uint256)\n    {\n        uint256 claimable;\n\n        uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days;\n\n        //Phase 1 of locked wallet release - monthly\n        if (lockDuration < 16 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                claimable = claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase1, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n                _beneficiary[user].isPhase1Claimed = true;\n            }\n            _beneficiary[user].latestClaimDay = 15 * 30;\n        }\n        //Phase 2 of locked wallet release - daily\n        else if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {\n            if (_beneficiary[user].isPhase1Claimed == false) {\n                claimable = claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase1, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n                _beneficiary[user].isPhase1Claimed = true;\n            }\n\n            uint256 sinceLatestClaim = lockDuration -\n                _beneficiary[user].latestClaimDay;\n            claimable =\n                sinceLatestClaim *\n                claimable.add(\n                    SafeMath.div(\n                        SafeMath.mul(_phase2, _beneficiary[user].lockedAmount),\n                        privateSaleAmount\n                    )\n                );\n            _beneficiary[user].latestClaimDay = lockDuration;\n        }\n\n        require(claimable != 0, \"Nothing to claim yet\");\n        return claimable;\n    }\n\n    function addBeneficiary(address user, uint256 amount)\n        external\n        onlyTalax\n    {\n        require(amount <= privateSaleAmount, \"Insufficient Total Balance\");\n        require(_beneficiary[user].amount == 0, \"Cannot add Registered User\");\n\n        _beneficiary[user].lockedAmount = amount;\n        _beneficiary[user].amount = amount;\n        _beneficiary[user].isPhase1Claimed = false;\n        _beneficiary[user].latestClaimDay = 1;\n\n        privateSaleUsers += 1;\n        privateSaleAmount -= amount;\n    }\n\n    function deleteBeneficiary(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        require(_beneficiary[user].amount != 0, \"User not Registered\");\n        privateSaleUsers -= 1;\n        privateSaleAmount += _beneficiary[user].amount;\n        uint256 ex_amount = _beneficiary[user].amount;\n\n        delete _beneficiary[user];\n        return ex_amount;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function releaseClaimable(address user)\n        external\n        onlyTalax\n        returns (uint256)\n    {\n        require(_beneficiary[user].amount > 0, \"No Tokens Left\");\n\n        uint256 claimableLockedAmount = _calculateClaimableAmount(user);\n\n        require(claimableLockedAmount > 0, \"No Tokens to Release for Now\");\n\n        _beneficiary[user].amount = SafeMath.sub(\n            _beneficiary[user].amount,\n            claimableLockedAmount\n        );\n\n        return claimableLockedAmount;\n    }\n}\n"
			},
			"contracts/Interfaces.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\ninterface IStakable {\n    function stakingPenaltyRate() external view returns (uint256);\n\n    function airdropRate() external view returns (uint256);\n\n    function airdropSince() external view returns (uint256);\n\n    function totalVoters() external view returns (uint256);\n\n    function getVoters(address user) external view returns (bool, bool); // votingRight and voted\n\n    function votedUsers(uint256 id) external view returns (uint256);\n\n    function startAirdropSince() external;\n\n    function changeTalaxAddress(address talax) external;\n\n    function stake(\n        address user,\n        uint256 amount,\n        uint256 stakePeriod,\n        uint256 rewardRate\n    ) external;\n\n    function changePenaltyFee(uint256 amount) external;\n\n    function changeAirdropPercentage(uint256 amount) external;\n\n    function withdrawStake(address user) external returns (uint256, uint256);\n\n    function claimAirdrop(address user) external view returns (uint256);\n\n    function startVoting() external;\n\n    function getVotingResult() external view returns (bool);\n\n    function stopVoting() external;\n}\n\ninterface IWhitelist {\n    function privateSaleUsers() external view returns (uint256);\n\n    function privateSaleAmount() external view returns (uint256);\n\n    function startPrivateSale() external view returns (uint256);\n\n    function changeTalaxAddress(address talax) external;\n\n    function beneficiary(address user)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            bool,\n            uint256\n        ); // lockedAmount, amount, isPhase1Claimed, latestClaimDay\n\n    function initiateWhitelist() external;\n\n    function addBeneficiary(address user, uint256 amount) external;\n\n    function deleteBeneficiary(address user) external returns (uint256);\n\n    function releaseClaimable(address user) external returns (uint256);\n}\n\ninterface ILockable {\n    function beneficiary() external view returns (address);\n\n    function changeTalaxAddress(address talax) external;\n\n    function startLockedWallet() external view returns (uint256);\n\n    function initiateLockedWallet() external;\n\n    function releaseClaimable(uint256[51] memory amount)\n        external\n        returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xF7F CALLDATACOPY GASLIMIT ISZERO 0x27 PUSH29 0x40DC0699C995F2B4C7F397D9F3BFD9AE759628B3F81D334D64736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610f7f374515277c40dc0699c995f2b4c7f397d9f3bfd9ae759628b3f81d334d64736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Interfaces.sol": {
				"ILockable": {
					"abi": [
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateLockedWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[51]",
									"name": "amount",
									"type": "uint256[51]"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startLockedWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"changeTalaxAddress(address)": "1d77b00b",
							"initiateLockedWallet()": "c8cca41e",
							"releaseClaimable(uint256[51])": "0a95606e",
							"startLockedWallet()": "b580aa9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateLockedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[51]\",\"name\":\"amount\",\"type\":\"uint256[51]\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startLockedWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"ILockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0xad241fdd2cfa1040f00a41f75e08d4d0b3b15920d243154ce805836d1519f2d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3164a7677cfcc5ec84557dccd72f344f42b23ec4c175ca4bb0f6c19a0162003f\",\"dweb:/ipfs/QmRdqWJtnV5yFpCXmtKBtk87qTj7qsqPprqEUCviLsBVTT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStakable": {
					"abi": [
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdropSince",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdropSince()": "71e3db87",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"votedUsers(uint256)": "a143a5f2",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdropSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IStakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0xad241fdd2cfa1040f00a41f75e08d4d0b3b15920d243154ce805836d1519f2d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3164a7677cfcc5ec84557dccd72f344f42b23ec4c175ca4bb0f6c19a0162003f\",\"dweb:/ipfs/QmRdqWJtnV5yFpCXmtKBtk87qTj7qsqPprqEUCviLsBVTT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWhitelist": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces.sol\":\"IWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Interfaces.sol\":{\"keccak256\":\"0xad241fdd2cfa1040f00a41f75e08d4d0b3b15920d243154ce805836d1519f2d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3164a7677cfcc5ec84557dccd72f344f42b23ec4c175ca4bb0f6c19a0162003f\",\"dweb:/ipfs/QmRdqWJtnV5yFpCXmtKBtk87qTj7qsqPprqEUCviLsBVTT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "deleteBeneficiary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "hasWhitelist",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "lockedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isPhase1Claimed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "latestClaimDay",
											"type": "uint256"
										}
									],
									"internalType": "struct Whitelist.WhitelistStruct",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initiateWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "releaseClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Whitelist.sol\":150:5446  contract Whitelist {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Whitelist.sol\":745:848  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Whitelist.sol\":789:806  1467900000 * 1e18 */\n  0x04be37ea7317415c45800000\n    /* \"contracts/Whitelist.sol\":769:786  privateSaleAmount */\n  0x01\n    /* \"contracts/Whitelist.sol\":769:806  privateSaleAmount = 1467900000 * 1e18 */\n  sstore\n    /* \"contracts/Whitelist.sol\":816:828  talaxAddress */\n  0x04\n    /* \"contracts/Whitelist.sol\":816:841  talaxAddress = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Whitelist.sol\":831:841  msg.sender */\n  caller\n    /* \"contracts/Whitelist.sol\":816:841  talaxAddress = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Whitelist.sol\":150:5446  contract Whitelist {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Whitelist.sol\":150:5446  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x81008568\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8cdb7e8b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8cdb7e8b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x96074e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xefdd8796\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x81008568\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8b2b423a\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x338dbf59\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x549dee0b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7d3bca76\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x5171f4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Whitelist.sol\":4941:5444  function releaseClaimable(address user)... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":552:577   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":525:543   */\n      add\n        /* \"contracts/Whitelist.sol\":4941:5444  function releaseClaimable(address user)... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Whitelist.sol\":1244:1343  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Whitelist.sol\":412:443  uint256 public startPrivateSale */\n    tag_5:\n      tag_16\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":207:238  uint256 public privateSaleUsers */\n    tag_6:\n      tag_16\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":4465:4854  function deleteBeneficiary(address user)... */\n    tag_7:\n      tag_16\n      tag_32\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":1349:1776  function beneficiary(address user)... */\n    tag_8:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":1573:1591  _beneficiary[user] */\n      and\n        /* \"contracts/Whitelist.sol\":1444:1451  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1573:1591  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":1573:1585  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":1573:1591  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":1536:1591  WhitelistStruct memory beneficiary = _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap6\n      dup3\n      add\n      dup7\n      swap1\n      mstore\n      swap2\n      swap1\n      swap4\n      add\n      sload\n      0x60\n      swap1\n      swap4\n      add\n      dup4\n      swap1\n      mstore\n      swap4\n      swap1\n      swap3\n      swap2\n      swap1\n        /* \"contracts/Whitelist.sol\":1349:1776  function beneficiary(address user)... */\n      jump\n    tag_35:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":813:838   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":869:871   */\n      0x20\n        /* \"#utility.yul\":854:872   */\n      dup6\n      add\n        /* \"#utility.yul\":847:881   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":924:938   */\n      swap1\n      iszero\n        /* \"#utility.yul\":917:939   */\n      iszero\n        /* \"#utility.yul\":897:915   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":890:940   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":971:973   */\n      0x60\n        /* \"#utility.yul\":956:974   */\n      dup3\n      add\n        /* \"#utility.yul\":949:983   */\n      mstore\n        /* \"#utility.yul\":800:803   */\n      0x80\n        /* \"#utility.yul\":785:804   */\n      add\n        /* \"contracts/Whitelist.sol\":1349:1776  function beneficiary(address user)... */\n      tag_20\n        /* \"#utility.yul\":588:989   */\n      jump\n        /* \"contracts/Whitelist.sol\":245:277  uint256 public privateSaleAmount */\n    tag_9:\n      tag_16\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/Whitelist.sol\":1887:2040  function hasWhitelist(address user)... */\n    tag_10:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n        /* \"#utility.yul\":1223:1236   */\n      dup2\n      mload\n        /* \"#utility.yul\":1205:1237   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1293:1297   */\n      0x20\n        /* \"#utility.yul\":1281:1298   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1275:1299   */\n      mload\n        /* \"#utility.yul\":1253:1273   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1246:1300   */\n      mstore\n        /* \"#utility.yul\":1370:1374   */\n      0x40\n        /* \"#utility.yul\":1358:1375   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":1352:1376   */\n      mload\n        /* \"#utility.yul\":1345:1377   */\n      iszero\n        /* \"#utility.yul\":1338:1378   */\n      iszero\n        /* \"#utility.yul\":1316:1336   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1309:1379   */\n      mstore\n        /* \"#utility.yul\":1435:1439   */\n      0x60\n        /* \"#utility.yul\":1423:1440   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":1417:1441   */\n      mload\n        /* \"#utility.yul\":1395:1415   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1388:1442   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1192:1195   */\n      0x80\n        /* \"#utility.yul\":1177:1196   */\n      add\n      swap1\n        /* \"#utility.yul\":994:1448   */\n      jump\n        /* \"contracts/Whitelist.sol\":3941:4459  function addBeneficiary(address user, uint256 amount)... */\n    tag_11:\n      tag_22\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":1782:1881  function initiateWhitelist() external onlyTalax {... */\n    tag_12:\n      tag_22\n      tag_53\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":4941:5444  function releaseClaimable(address user)... */\n    tag_19:\n        /* \"contracts/Whitelist.sol\":5033:5040  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      tag_55\n        /* \"contracts/Whitelist.sol\":1102:1112  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5064:5082  _beneficiary[user] */\n      dup3\n      and\n        /* \"contracts/Whitelist.sol\":5092:5093  0 */\n      0x00\n        /* \"contracts/Whitelist.sol\":5064:5082  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5064:5076  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5064:5082  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5064:5089  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":5056:5112  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1914:1916   */\n      0x20\n        /* \"contracts/Whitelist.sol\":5056:5112  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1896:1917   */\n      mstore\n        /* \"#utility.yul\":1953:1955   */\n      0x0e\n        /* \"#utility.yul\":1933:1951   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1926:1956   */\n      mstore\n        /* \"#utility.yul\":1992:2008   */\n      0x4e6f20546f6b656e73204c656674000000000000000000000000000000000000\n        /* \"#utility.yul\":1972:1990   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1965:2009   */\n      mstore\n        /* \"#utility.yul\":2026:2044   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":5056:5112  require(_beneficiary[user].amount > 0, \"No Tokens Left\") */\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/Whitelist.sol\":5123:5152  uint256 claimableLockedAmount */\n      0x00\n        /* \"contracts/Whitelist.sol\":5155:5186  _calculateClaimableAmount(user) */\n      tag_61\n        /* \"contracts/Whitelist.sol\":5181:5185  user */\n      dup4\n        /* \"contracts/Whitelist.sol\":5155:5180  _calculateClaimableAmount */\n      tag_62\n        /* \"contracts/Whitelist.sol\":5155:5186  _calculateClaimableAmount(user) */\n      jump\t// in\n    tag_61:\n        /* \"contracts/Whitelist.sol\":5123:5186  uint256 claimableLockedAmount = _calculateClaimableAmount(user) */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":5229:5230  0 */\n      0x00\n        /* \"contracts/Whitelist.sol\":5205:5226  claimableLockedAmount */\n      dup2\n        /* \"contracts/Whitelist.sol\":5205:5230  claimableLockedAmount > 0 */\n      gt\n        /* \"contracts/Whitelist.sol\":5197:5263  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2257:2259   */\n      0x20\n        /* \"contracts/Whitelist.sol\":5197:5263  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2239:2260   */\n      mstore\n        /* \"#utility.yul\":2296:2298   */\n      0x1c\n        /* \"#utility.yul\":2276:2294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2269:2299   */\n      mstore\n        /* \"#utility.yul\":2335:2365   */\n      0x4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f7700000000\n        /* \"#utility.yul\":2315:2333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2308:2366   */\n      mstore\n        /* \"#utility.yul\":2383:2401   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":5197:5263  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n      tag_59\n        /* \"#utility.yul\":2055:2407   */\n      jump\n        /* \"contracts/Whitelist.sol\":5197:5263  require(claimableLockedAmount > 0, \"No Tokens to Release for Now\") */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5328:5346  _beneficiary[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5328:5340  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5328:5346  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5328:5353  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":5302:5398  SafeMath.sub(... */\n      tag_66\n      swap1\n        /* \"contracts/Whitelist.sol\":5367:5388  claimableLockedAmount */\n      dup3\n        /* \"contracts/Whitelist.sol\":5302:5314  SafeMath.sub */\n      tag_67\n        /* \"contracts/Whitelist.sol\":5302:5398  SafeMath.sub(... */\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":5274:5292  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":5274:5286  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":5274:5292  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":5274:5299  _beneficiary[user].amount */\n      0x01\n      add\n        /* \"contracts/Whitelist.sol\":5274:5398  _beneficiary[user].amount = SafeMath.sub(... */\n      sstore\n        /* \"contracts/Whitelist.sol\":5416:5437  claimableLockedAmount */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":1124:1125  _ */\n    tag_57:\n        /* \"contracts/Whitelist.sol\":4941:5444  function releaseClaimable(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1244:1343  function changeTalaxAddress(address talax) external onlyTalax {... */\n    tag_24:\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      tag_69\n        /* \"contracts/Whitelist.sol\":1102:1112  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Whitelist.sol\":1316:1328  talaxAddress */\n      0x04\n        /* \"contracts/Whitelist.sol\":1316:1336  talaxAddress = talax */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":1244:1343  function changeTalaxAddress(address talax) external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":4465:4854  function deleteBeneficiary(address user)... */\n    tag_33:\n        /* \"contracts/Whitelist.sol\":4558:4565  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      tag_72\n        /* \"contracts/Whitelist.sol\":1102:1112  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4589:4607  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4589:4601  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4589:4607  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":4589:4614  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4581:4643  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2614:2616   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4581:4643  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2596:2617   */\n      mstore\n        /* \"#utility.yul\":2653:2655   */\n      0x13\n        /* \"#utility.yul\":2633:2651   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2626:2656   */\n      mstore\n        /* \"#utility.yul\":2692:2713   */\n      0x55736572206e6f74205265676973746572656400000000000000000000000000\n        /* \"#utility.yul\":2672:2690   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2665:2714   */\n      mstore\n        /* \"#utility.yul\":2731:2749   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4581:4643  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n      tag_59\n        /* \"#utility.yul\":2412:2755   */\n      jump\n        /* \"contracts/Whitelist.sol\":4581:4643  require(_beneficiary[user].amount != 0, \"User not Registered\") */\n    tag_74:\n        /* \"contracts/Whitelist.sol\":4673:4674  1 */\n      0x01\n        /* \"contracts/Whitelist.sol\":4653:4669  privateSaleUsers */\n      0x00\n      dup1\n        /* \"contracts/Whitelist.sol\":4653:4674  privateSaleUsers -= 1 */\n      dup3\n      dup3\n      sload\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4705:4723  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4705:4717  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4705:4723  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Whitelist.sol\":4705:4730  _beneficiary[user].amount */\n      0x01\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4684:4730  privateSaleAmount += _beneficiary[user].amount */\n      dup2\n      sload\n        /* \"contracts/Whitelist.sol\":4705:4730  _beneficiary[user].amount */\n      swap1\n      swap3\n        /* \"contracts/Whitelist.sol\":4705:4723  _beneficiary[user] */\n      swap1\n        /* \"contracts/Whitelist.sol\":4684:4730  privateSaleAmount += _beneficiary[user].amount */\n      tag_79\n      swap1\n        /* \"contracts/Whitelist.sol\":4705:4730  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":4684:4730  privateSaleAmount += _beneficiary[user].amount */\n      tag_80\n      jump\t// in\n    tag_79:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4760:4778  _beneficiary[user] */\n      and\n        /* \"contracts/Whitelist.sol\":4740:4757  uint256 ex_amount */\n      0x00\n        /* \"contracts/Whitelist.sol\":4760:4778  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4760:4772  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4760:4778  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":4760:4785  _beneficiary[user].amount */\n      0x01\n      dup2\n      add\n      dup1\n      sload\n        /* \"contracts/Whitelist.sol\":4796:4821  delete _beneficiary[user] */\n      dup5\n      dup4\n      sstore\n      swap1\n      dup5\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      swap2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Whitelist.sol\":4760:4785  _beneficiary[user].amount */\n      swap1\n        /* \"contracts/Whitelist.sol\":4465:4854  function deleteBeneficiary(address user)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1887:2040  function hasWhitelist(address user)... */\n    tag_45:\n        /* \"contracts/Whitelist.sol\":1970:1992  WhitelistStruct memory */\n      tag_82\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_82:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2015:2033  _beneficiary[user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2015:2027  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2015:2033  _beneficiary[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2008:2033  return _beneficiary[user] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/Whitelist.sol\":1887:2040  function hasWhitelist(address user)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":3941:4459  function addBeneficiary(address user, uint256 amount)... */\n    tag_51:\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      tag_86\n        /* \"contracts/Whitelist.sol\":1102:1112  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Whitelist.sol\":4062:4079  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/Whitelist.sol\":4052:4058  amount */\n      dup2\n        /* \"contracts/Whitelist.sol\":4052:4079  amount <= privateSaleAmount */\n      gt\n      iszero\n        /* \"contracts/Whitelist.sol\":4044:4110  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3414:3416   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4044:4110  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3396:3417   */\n      mstore\n        /* \"#utility.yul\":3453:3455   */\n      0x1a\n        /* \"#utility.yul\":3433:3451   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3426:3456   */\n      mstore\n        /* \"#utility.yul\":3492:3520   */\n      0x496e73756666696369656e7420546f74616c2042616c616e6365000000000000\n        /* \"#utility.yul\":3472:3490   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3465:3521   */\n      mstore\n        /* \"#utility.yul\":3538:3556   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4044:4110  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n      tag_59\n        /* \"#utility.yul\":3212:3562   */\n      jump\n        /* \"contracts/Whitelist.sol\":4044:4110  require(amount <= privateSaleAmount, \"Insufficient Total Balance\") */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4128:4146  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4128:4140  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4128:4146  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":4128:4153  _beneficiary[user].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":4128:4158  _beneficiary[user].amount == 0 */\n      iszero\n        /* \"contracts/Whitelist.sol\":4120:4189  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3769:3771   */\n      0x20\n        /* \"contracts/Whitelist.sol\":4120:4189  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3751:3772   */\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x1a\n        /* \"#utility.yul\":3788:3806   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3781:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3875   */\n      0x43616e6e6f742061646420526567697374657265642055736572000000000000\n        /* \"#utility.yul\":3827:3845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3820:3876   */\n      mstore\n        /* \"#utility.yul\":3893:3911   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":4120:4189  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n      tag_59\n        /* \"#utility.yul\":3567:3917   */\n      jump\n        /* \"contracts/Whitelist.sol\":4120:4189  require(_beneficiary[user].amount == 0, \"Cannot add Registered User\") */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":4200:4218  _beneficiary[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":4200:4212  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":4200:4218  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":4200:4240  _beneficiary[user].lockedAmount = amount */\n      dup4\n      dup2\n      sstore\n        /* \"contracts/Whitelist.sol\":4250:4275  _beneficiary[user].amount */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"contracts/Whitelist.sol\":4250:4284  _beneficiary[user].amount = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4294:4328  _beneficiary[user].isPhase1Claimed */\n      0x02\n      dup3\n      add\n        /* \"contracts/Whitelist.sol\":4294:4336  _beneficiary[user].isPhase1Claimed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4346:4379  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/Whitelist.sol\":4346:4383  _beneficiary[user].latestClaimDay = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":4394:4415  privateSaleUsers += 1 */\n      dup2\n      sload\n        /* \"contracts/Whitelist.sol\":4250:4275  _beneficiary[user].amount */\n      swap1\n      swap2\n        /* \"contracts/Whitelist.sol\":4200:4218  _beneficiary[user] */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Whitelist.sol\":4394:4415  privateSaleUsers += 1 */\n      tag_94\n      swap1\n        /* \"contracts/Whitelist.sol\":4250:4275  _beneficiary[user].amount */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":4394:4415  privateSaleUsers += 1 */\n      tag_80\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Whitelist.sol\":4446:4452  amount */\n      dup1\n        /* \"contracts/Whitelist.sol\":4425:4442  privateSaleAmount */\n      0x01\n      0x00\n        /* \"contracts/Whitelist.sol\":4425:4452  privateSaleAmount -= amount */\n      dup3\n      dup3\n      sload\n      tag_95\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_95:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Whitelist.sol\":3941:4459  function addBeneficiary(address user, uint256 amount)... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":1782:1881  function initiateWhitelist() external onlyTalax {... */\n    tag_53:\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      tag_97\n        /* \"contracts/Whitelist.sol\":1102:1112  _onlyTalax */\n      tag_56\n        /* \"contracts/Whitelist.sol\":1102:1114  _onlyTalax() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Whitelist.sol\":1859:1874  block.timestamp */\n      timestamp\n        /* \"contracts/Whitelist.sol\":1840:1856  startPrivateSale */\n      0x02\n        /* \"contracts/Whitelist.sol\":1840:1874  startPrivateSale = block.timestamp */\n      sstore\n        /* \"contracts/Whitelist.sol\":1782:1881  function initiateWhitelist() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":959:1065  function _onlyTalax() internal view {... */\n    tag_56:\n        /* \"contracts/Whitelist.sol\":1027:1039  talaxAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Whitelist.sol\":1013:1023  msg.sender */\n      caller\n        /* \"contracts/Whitelist.sol\":1013:1039  msg.sender == talaxAddress */\n      eq\n        /* \"contracts/Whitelist.sol\":1005:1058  require(msg.sender == talaxAddress, \"Not authorized\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4124:4126   */\n      0x20\n        /* \"contracts/Whitelist.sol\":1005:1058  require(msg.sender == talaxAddress, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4106:4127   */\n      mstore\n        /* \"#utility.yul\":4163:4165   */\n      0x0e\n        /* \"#utility.yul\":4143:4161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4136:4166   */\n      mstore\n        /* \"#utility.yul\":4202:4218   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":4182:4200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4175:4219   */\n      mstore\n        /* \"#utility.yul\":4236:4254   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":1005:1058  require(msg.sender == talaxAddress, \"Not authorized\") */\n      tag_59\n        /* \"#utility.yul\":3922:4260   */\n      jump\n        /* \"contracts/Whitelist.sol\":1005:1058  require(msg.sender == talaxAddress, \"Not authorized\") */\n    tag_100:\n        /* \"contracts/Whitelist.sol\":959:1065  function _onlyTalax() internal view {... */\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":2145:3935  function _calculateClaimableAmount(address user)... */\n    tag_62:\n        /* \"contracts/Whitelist.sol\":2228:2235  uint256 */\n      0x00\n        /* \"contracts/Whitelist.sol\":2251:2268  uint256 claimable */\n      dup1\n        /* \"contracts/Whitelist.sol\":2279:2299  uint256 lockDuration */\n      0x00\n        /* \"contracts/Whitelist.sol\":2341:2347  1 days */\n      0x015180\n        /* \"contracts/Whitelist.sol\":2321:2337  startPrivateSale */\n      sload(0x02)\n        /* \"contracts/Whitelist.sol\":2303:2318  block.timestamp */\n      timestamp\n        /* \"contracts/Whitelist.sol\":2303:2337  block.timestamp - startPrivateSale */\n      tag_104\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"contracts/Whitelist.sol\":2302:2347  (block.timestamp - startPrivateSale) / 1 days */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/Whitelist.sol\":2279:2347  uint256 lockDuration = (block.timestamp - startPrivateSale) / 1 days */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":2430:2437  16 * 30 */\n      0x01e0\n        /* \"contracts/Whitelist.sol\":2415:2427  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2415:2437  lockDuration < 16 * 30 */\n      lt\n        /* \"contracts/Whitelist.sol\":2411:3845  if (lockDuration < 16 * 30) {... */\n      iszero\n      tag_107\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2457:2475  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2457:2469  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2457:2475  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2457:2491  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":2453:2816  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_108\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2627:2645  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2627:2639  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2627:2645  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2627:2658  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":2532:2742  claimable.add(... */\n      tag_109\n      swap1\n        /* \"contracts/Whitelist.sol\":2567:2724  SafeMath.div(... */\n      tag_110\n      swap1\n        /* \"contracts/Whitelist.sol\":2605:2659  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      tag_111\n      swap1\n        /* \"contracts/Whitelist.sol\":319:334  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n      swap1\n        /* \"contracts/Whitelist.sol\":2605:2617  SafeMath.mul */\n      tag_112\n        /* \"contracts/Whitelist.sol\":2605:2659  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Whitelist.sol\":2685:2702  privateSaleAmount */\n      sload(0x01)\n        /* \"contracts/Whitelist.sol\":2567:2579  SafeMath.div */\n      tag_113\n        /* \"contracts/Whitelist.sol\":2567:2724  SafeMath.div(... */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Whitelist.sol\":2532:2541  claimable */\n      dup4\n      swap1\n        /* \"contracts/Whitelist.sol\":2532:2545  claimable.add */\n      tag_114\n        /* \"contracts/Whitelist.sol\":2532:2742  claimable.add(... */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2760:2778  _beneficiary[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2760:2772  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2760:2778  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":2760:2794  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n        /* \"contracts/Whitelist.sol\":2760:2801  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Whitelist.sol\":2797:2801  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":2760:2801  _beneficiary[user].isPhase1Claimed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":2520:2742  claimable = claimable.add(... */\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":2453:2816  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":2829:2847  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":2829:2841  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":2829:2847  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Whitelist.sol\":2865:2872  15 * 30 */\n      0x01c2\n        /* \"contracts/Whitelist.sol\":2829:2862  _beneficiary[user].latestClaimDay */\n      swap2\n      add\n        /* \"contracts/Whitelist.sol\":2829:2872  _beneficiary[user].latestClaimDay = 15 * 30 */\n      sstore\n        /* \"contracts/Whitelist.sol\":2411:3845  if (lockDuration < 16 * 30) {... */\n      jump(tag_117)\n    tag_107:\n        /* \"contracts/Whitelist.sol\":2968:2975  16 * 30 */\n      0x01e0\n        /* \"contracts/Whitelist.sol\":2952:2964  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2952:2975  lockDuration >= 16 * 30 */\n      lt\n      iszero\n        /* \"contracts/Whitelist.sol\":2952:3001  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/Whitelist.sol\":2994:3001  28 * 30 */\n      0x0348\n        /* \"contracts/Whitelist.sol\":2979:2991  lockDuration */\n      dup2\n        /* \"contracts/Whitelist.sol\":2979:3001  lockDuration < 28 * 30 */\n      lt\n        /* \"contracts/Whitelist.sol\":2952:3001  lockDuration >= 16 * 30 && lockDuration < 28 * 30 */\n    tag_116:\n        /* \"contracts/Whitelist.sol\":2948:3845  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n      iszero\n      tag_117\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3021:3039  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3021:3033  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3021:3039  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3021:3055  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":3017:3380  if (_beneficiary[user].isPhase1Claimed == false) {... */\n      tag_118\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3191:3209  _beneficiary[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3191:3203  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3191:3209  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3191:3222  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":3096:3306  claimable.add(... */\n      tag_119\n      swap1\n        /* \"contracts/Whitelist.sol\":3131:3288  SafeMath.div(... */\n      tag_110\n      swap1\n        /* \"contracts/Whitelist.sol\":3169:3223  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      tag_111\n      swap1\n        /* \"contracts/Whitelist.sol\":319:334  73395000 * 1e18 */\n      0x3cb5feec27901169e00000\n      swap1\n        /* \"contracts/Whitelist.sol\":3169:3181  SafeMath.mul */\n      tag_112\n        /* \"contracts/Whitelist.sol\":3169:3223  SafeMath.mul(_phase1, _beneficiary[user].lockedAmount) */\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":3096:3306  claimable.add(... */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3324:3342  _beneficiary[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3324:3336  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3324:3342  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3324:3358  _beneficiary[user].isPhase1Claimed */\n      0x02\n      add\n        /* \"contracts/Whitelist.sol\":3324:3365  _beneficiary[user].isPhase1Claimed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Whitelist.sol\":3361:3365  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":3324:3365  _beneficiary[user].isPhase1Claimed = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":3084:3306  claimable = claimable.add(... */\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":3017:3380  if (_beneficiary[user].isPhase1Claimed == false) {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3452:3470  _beneficiary[user] */\n      dup5\n      and\n        /* \"contracts/Whitelist.sol\":3394:3418  uint256 sinceLatestClaim */\n      0x00\n        /* \"contracts/Whitelist.sol\":3452:3470  _beneficiary[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3452:3464  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3452:3470  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Whitelist.sol\":3452:3485  _beneficiary[user].latestClaimDay */\n      add\n      sload\n        /* \"contracts/Whitelist.sol\":3421:3485  lockDuration -... */\n      tag_122\n      swap1\n        /* \"contracts/Whitelist.sol\":3421:3433  lockDuration */\n      dup4\n        /* \"contracts/Whitelist.sol\":3421:3485  lockDuration -... */\n      tag_78\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3657:3675  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3657:3669  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3657:3675  _beneficiary[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Whitelist.sol\":3657:3688  _beneficiary[user].lockedAmount */\n      sload\n        /* \"contracts/Whitelist.sol\":3394:3485  uint256 sinceLatestClaim = lockDuration -... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Whitelist.sol\":3562:3772  claimable.add(... */\n      tag_123\n      swap1\n        /* \"contracts/Whitelist.sol\":3597:3754  SafeMath.div(... */\n      tag_124\n      swap1\n        /* \"contracts/Whitelist.sol\":3635:3689  SafeMath.mul(_phase2, _beneficiary[user].lockedAmount) */\n      tag_111\n      swap1\n        /* \"contracts/Whitelist.sol\":376:390  3820562 * 1e18 */\n      0x03290914be1afb75080000\n      swap1\n        /* \"contracts/Whitelist.sol\":3635:3647  SafeMath.mul */\n      tag_112\n        /* \"contracts/Whitelist.sol\":3635:3689  SafeMath.mul(_phase2, _beneficiary[user].lockedAmount) */\n      jump\t// in\n        /* \"contracts/Whitelist.sol\":3597:3754  SafeMath.div(... */\n    tag_124:\n        /* \"contracts/Whitelist.sol\":3562:3571  claimable */\n      dup5\n      swap1\n        /* \"contracts/Whitelist.sol\":3562:3575  claimable.add */\n      tag_114\n        /* \"contracts/Whitelist.sol\":3562:3772  claimable.add(... */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Whitelist.sol\":3527:3772  sinceLatestClaim *... */\n      tag_126\n      swap1\n        /* \"contracts/Whitelist.sol\":3527:3543  sinceLatestClaim */\n      dup3\n        /* \"contracts/Whitelist.sol\":3527:3772  sinceLatestClaim *... */\n      tag_127\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Whitelist.sol\":3786:3804  _beneficiary[user] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Whitelist.sol\":3786:3798  _beneficiary */\n      0x03\n        /* \"contracts/Whitelist.sol\":3786:3804  _beneficiary[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Whitelist.sol\":3786:3819  _beneficiary[user].latestClaimDay */\n      add\n        /* \"contracts/Whitelist.sol\":3786:3834  _beneficiary[user].latestClaimDay = lockDuration */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":3499:3772  claimable =... */\n      swap3\n      pop\n      pop\n        /* \"contracts/Whitelist.sol\":2948:3845  if (lockDuration >= 16 * 30 && lockDuration < 28 * 30) {... */\n    tag_117:\n        /* \"contracts/Whitelist.sol\":3863:3877  claimable != 0 */\n      dup2\n        /* \"contracts/Whitelist.sol\":3855:3902  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4919:4921   */\n      0x20\n        /* \"contracts/Whitelist.sol\":3855:3902  require(claimable != 0, \"Nothing to claim yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4901:4922   */\n      mstore\n        /* \"#utility.yul\":4958:4960   */\n      0x14\n        /* \"#utility.yul\":4938:4956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4931:4961   */\n      mstore\n        /* \"#utility.yul\":4997:5019   */\n      0x4e6f7468696e6720746f20636c61696d20796574000000000000000000000000\n        /* \"#utility.yul\":4977:4995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4970:5020   */\n      mstore\n        /* \"#utility.yul\":5037:5055   */\n      0x64\n      add\n        /* \"contracts/Whitelist.sol\":3855:3902  require(claimable != 0, \"Nothing to claim yet\") */\n      tag_59\n        /* \"#utility.yul\":4717:5061   */\n      jump\n        /* \"contracts/Whitelist.sol\":3855:3902  require(claimable != 0, \"Nothing to claim yet\") */\n    tag_128:\n      pop\n        /* \"contracts/Whitelist.sol\":3919:3928  claimable */\n      swap3\n        /* \"contracts/Whitelist.sol\":2145:3935  function _calculateClaimableAmount(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_78\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_106\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_80\n      jump\t// in\n        /* \"#utility.yul\":14:210   */\n    tag_139:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:401   */\n    tag_18:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_145:\n        /* \"#utility.yul\":366:395   */\n      tag_132\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":1453:1707   */\n    tag_50:\n        /* \"#utility.yul\":1521:1527   */\n      0x00\n        /* \"#utility.yul\":1529:1535   */\n      dup1\n        /* \"#utility.yul\":1582:1584   */\n      0x40\n        /* \"#utility.yul\":1570:1579   */\n      dup4\n        /* \"#utility.yul\":1561:1568   */\n      dup6\n        /* \"#utility.yul\":1557:1580   */\n      sub\n        /* \"#utility.yul\":1553:1585   */\n      slt\n        /* \"#utility.yul\":1550:1602   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1598:1599   */\n      0x00\n        /* \"#utility.yul\":1595:1596   */\n      dup1\n        /* \"#utility.yul\":1588:1600   */\n      revert\n        /* \"#utility.yul\":1550:1602   */\n    tag_151:\n        /* \"#utility.yul\":1621:1650   */\n      tag_152\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1621:1650   */\n      tag_139\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1611:1650   */\n      swap5\n        /* \"#utility.yul\":1697:1699   */\n      0x20\n        /* \"#utility.yul\":1682:1700   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1669:1701   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1453:1707   */\n      jump\t// out\n        /* \"#utility.yul\":2760:2944   */\n    tag_140:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2802:2890   */\n      mstore\n        /* \"#utility.yul\":2909:2913   */\n      0x11\n        /* \"#utility.yul\":2906:2907   */\n      0x04\n        /* \"#utility.yul\":2899:2914   */\n      mstore\n        /* \"#utility.yul\":2933:2937   */\n      0x24\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2923:2938   */\n      revert\n        /* \"#utility.yul\":2949:3074   */\n    tag_78:\n        /* \"#utility.yul\":2989:2993   */\n      0x00\n        /* \"#utility.yul\":3017:3018   */\n      dup3\n        /* \"#utility.yul\":3014:3015   */\n      dup3\n        /* \"#utility.yul\":3011:3019   */\n      lt\n        /* \"#utility.yul\":3008:3042   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3022:3040   */\n      tag_159\n      tag_140\n      jump\t// in\n    tag_159:\n      pop\n        /* \"#utility.yul\":3059:3068   */\n      sub\n      swap1\n        /* \"#utility.yul\":2949:3074   */\n      jump\t// out\n        /* \"#utility.yul\":3079:3207   */\n    tag_80:\n        /* \"#utility.yul\":3119:3122   */\n      0x00\n        /* \"#utility.yul\":3150:3151   */\n      dup3\n        /* \"#utility.yul\":3146:3152   */\n      not\n        /* \"#utility.yul\":3143:3144   */\n      dup3\n        /* \"#utility.yul\":3140:3153   */\n      gt\n        /* \"#utility.yul\":3137:3176   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3156:3174   */\n      tag_162\n      tag_140\n      jump\t// in\n    tag_162:\n      pop\n        /* \"#utility.yul\":3192:3201   */\n      add\n      swap1\n        /* \"#utility.yul\":3079:3207   */\n      jump\t// out\n        /* \"#utility.yul\":4265:4539   */\n    tag_106:\n        /* \"#utility.yul\":4305:4306   */\n      0x00\n        /* \"#utility.yul\":4331:4332   */\n      dup3\n        /* \"#utility.yul\":4321:4510   */\n      tag_167\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4363:4364   */\n      0x00\n        /* \"#utility.yul\":4356:4444   */\n      mstore\n        /* \"#utility.yul\":4467:4471   */\n      0x12\n        /* \"#utility.yul\":4464:4465   */\n      0x04\n        /* \"#utility.yul\":4457:4472   */\n      mstore\n        /* \"#utility.yul\":4495:4499   */\n      0x24\n        /* \"#utility.yul\":4492:4493   */\n      0x00\n        /* \"#utility.yul\":4485:4500   */\n      revert\n        /* \"#utility.yul\":4321:4510   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":4524:4533   */\n      div\n      swap1\n        /* \"#utility.yul\":4265:4539   */\n      jump\t// out\n        /* \"#utility.yul\":4544:4712   */\n    tag_127:\n        /* \"#utility.yul\":4584:4591   */\n      0x00\n        /* \"#utility.yul\":4650:4651   */\n      dup2\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4642:4648   */\n      not\n        /* \"#utility.yul\":4638:4652   */\n      div\n        /* \"#utility.yul\":4635:4636   */\n      dup4\n        /* \"#utility.yul\":4632:4653   */\n      gt\n        /* \"#utility.yul\":4627:4628   */\n      dup3\n        /* \"#utility.yul\":4620:4629   */\n      iszero\n        /* \"#utility.yul\":4613:4630   */\n      iszero\n        /* \"#utility.yul\":4609:4654   */\n      and\n        /* \"#utility.yul\":4606:4677   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":4657:4675   */\n      tag_170\n      tag_140\n      jump\t// in\n    tag_170:\n      pop\n        /* \"#utility.yul\":4697:4706   */\n      mul\n      swap1\n        /* \"#utility.yul\":4544:4712   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f764e3b5f0e427cfcd77b7d60ab64bcadf8a91477759789bc40541bad9ebdac264736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_546": {
									"entryPoint": null,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506b04be37ea7317415c45800000600155600480546001600160a01b03191633179055610a3c806100426000396000f3fe608060405234801561001057600080fd5b50600436106100bd5760003560e01c806381008568116100765780638cdb7e8b1161005b5780638cdb7e8b146101b657806396074e70146101fe578063efdd87961461021157600080fd5b806381008568146101225780638b2b423a146101ad57600080fd5b8063338dbf59116100a7578063338dbf59146100fd578063549dee0b146101065780637d3bca761461010f57600080fd5b80625171f4146100c25780631d77b00b146100e8575b600080fd5b6100d56100d036600461093b565b610219565b6040519081526020015b60405180910390f35b6100fb6100f636600461093b565b610337565b005b6100d560025481565b6100d560005481565b6100d561011d36600461093b565b610379565b61018761013036600461093b565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100df565b6100d560015481565b6101c96101c436600461093b565b610471565b6040516100df919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b6100fb61020c366004610956565b6104ee565b6100fb61061b565b6000610223610629565b6001600160a01b0382166000908152600360205260409020600101546102905760405162461bcd60e51b815260206004820152600e60248201527f4e6f20546f6b656e73204c65667400000000000000000000000000000000000060448201526064015b60405180910390fd5b600061029b83610685565b9050600081116102ed5760405162461bcd60e51b815260206004820152601c60248201527f4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77000000006044820152606401610287565b6001600160a01b03831660009081526003602052604090206001015461031390826108ed565b6001600160a01b03841660009081526003602052604090206001015590505b919050565b61033f610629565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610383610629565b6001600160a01b0382166000908152600360205260409020600101546103eb5760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f742052656769737465726564000000000000000000000000006044820152606401610287565b60016000808282546103fd9190610996565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906104309084906109ad565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b61049e60405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b6104f6610629565b6001548111156105485760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420546f74616c2042616c616e63650000000000006044820152606401610287565b6001600160a01b038216600090815260036020526040902060010154156105b15760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420616464205265676973746572656420557365720000000000006044820152606401610287565b6001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff191690559101819055815490919081906105f99084906109ad565b9250508190555080600160008282546106129190610996565b90915550505050565b610623610629565b42600255565b6004546001600160a01b031633146106835760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152606401610287565b565b6000806000620151806002544261069c9190610996565b6106a691906109c5565b90506101e081101561076a576001600160a01b03841660009081526003602052604090206002015460ff16610744576001600160a01b03841660009081526003602052604090205461071b906107149061070c906a3cb5feec27901169e0000090610900565b60015461090c565b8390610918565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260409091206101c2910155610899565b6101e0811015801561077d575061034881105b15610899576001600160a01b03841660009081526003602052604090206002015460ff16610805576001600160a01b0384166000908152600360205260409020546107dc906107149061070c906a3cb5feec27901169e0000090610900565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260408220015461082b9083610996565b6001600160a01b03861660009081526003602052604090205490915061086c906108659061070c906a03290914be1afb7508000090610900565b8490610918565b61087690826109e7565b6001600160a01b0386166000908152600360208190526040909120018390559250505b816108e65760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d207965740000000000000000000000006044820152606401610287565b5092915050565b60006108f98284610996565b9392505050565b60006108f982846109e7565b60006108f982846109c5565b60006108f982846109ad565b80356001600160a01b038116811461033257600080fd5b60006020828403121561094d57600080fd5b6108f982610924565b6000806040838503121561096957600080fd5b61097283610924565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109a8576109a8610980565b500390565b600082198211156109c0576109c0610980565b500190565b6000826109e257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a0157610a01610980565b50029056fea2646970667358221220f764e3b5f0e427cfcd77b7d60ab64bcadf8a91477759789bc40541bad9ebdac264736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH12 0x4BE37EA7317415C45800000 PUSH1 0x1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xA3C DUP1 PUSH2 0x42 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x8CDB7E8B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81008568 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x338DBF59 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0xFB PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E73204C656674000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x313 SWAP1 DUP3 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F PUSH2 0x629 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74205265676973746572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x430 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x49E PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420546F74616C2042616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420526567697374657265642055736572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x5F9 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x623 PUSH2 0x629 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x744 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71B SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x90C JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1C2 SWAP2 ADD SSTORE PUSH2 0x899 JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x899 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x805 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x82B SWAP1 DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x86C SWAP1 PUSH2 0x865 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3290914BE1AFB75080000 SWAP1 PUSH2 0x900 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x876 SWAP1 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP3 POP POP JUMPDEST DUP2 PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9AD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x972 DUP4 PUSH2 0x924 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x980 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x980 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0x980 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH5 0xE3B5F0E427 0xCF 0xCD PUSH24 0xB7D60AB64BCADF8A91477759789BC40541BAD9EBDAC26473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "150:5296:2:-:0;;;745:103;;;;;;;;;-1:-1:-1;789:17:2;769;:37;816:12;:25;;-1:-1:-1;;;;;;816:25:2;831:10;816:25;;;150:5296;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateClaimableAmount_794": {
									"entryPoint": 1669,
									"id": 794,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_onlyTalax_558": {
									"entryPoint": 1577,
									"id": 558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addBeneficiary_857": {
									"entryPoint": 1262,
									"id": 857,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 2328,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@beneficiary_608": {
									"entryPoint": null,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@changeTalaxAddress_577": {
									"entryPoint": 823,
									"id": 577,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteBeneficiary_902": {
									"entryPoint": 889,
									"id": 902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 2316,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasWhitelist_632": {
									"entryPoint": 1137,
									"id": 632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initiateWhitelist_619": {
									"entryPoint": 1563,
									"id": 619,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 2304,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@privateSaleAmount_503": {
									"entryPoint": null,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleUsers_501": {
									"entryPoint": null,
									"id": 501,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseClaimable_952": {
									"entryPoint": 537,
									"id": 952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startPrivateSale_515": {
									"entryPoint": null,
									"id": 515,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 2285,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_WhitelistStruct_$524_memory_ptr__to_t_struct$_WhitelistStruct_$524_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5063:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:3"
															},
															"nodeType": "YulIf",
															"src": "111:93:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "14:196:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:3"
															},
															"nodeType": "YulIf",
															"src": "295:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:3",
														"type": ""
													}
												],
												"src": "215:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "529:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "517:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "570:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "487:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "498:4:3",
														"type": ""
													}
												],
												"src": "406:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "767:222:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "777:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "820:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "831:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "813:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "813:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "858:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "869:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "874:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "901:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "912:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "897:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "897:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "931:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "924:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "917:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "890:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:50:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "949:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "949:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "723:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "731:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "739:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "758:4:3",
														"type": ""
													}
												],
												"src": "588:401:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1159:289:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1169:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1181:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1169:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1223:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1205:32:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1268:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1285:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1293:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1281:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1281:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1275:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1246:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:54:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1246:54:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1320:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1331:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "1362:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1370:4:3",
																										"type": "",
																										"value": "0x40"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1358:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1358:17:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "1352:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1352:24:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1345:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1345:32:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1338:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:40:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1309:70:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1399:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1410:4:3",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1427:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1435:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1423:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1423:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1417:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1388:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:54:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1388:54:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_WhitelistStruct_$524_memory_ptr__to_t_struct$_WhitelistStruct_$524_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1128:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1139:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1150:4:3",
														"type": ""
													}
												],
												"src": "994:454:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1540:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1586:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1595:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1588:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1588:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1588:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1561:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1570:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1557:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1553:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:32:3"
															},
															"nodeType": "YulIf",
															"src": "1550:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1611:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1640:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1621:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1659:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1686:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1697:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1682:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1682:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1669:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1498:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1509:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1521:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1529:6:3",
														"type": ""
													}
												],
												"src": "1453:254:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1886:164:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1903:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1896:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1953:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1987:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:18:3"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e73204c656674",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1992:16:3",
																		"type": "",
																		"value": "No Tokens Left"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:44:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2018:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2041:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2026:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2018:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1863:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1877:4:3",
														"type": ""
													}
												],
												"src": "1712:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2229:178:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2246:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2239:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2280:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2291:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:2:3",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:18:3"
																	},
																	{
																		"hexValue": "4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2335:30:3",
																		"type": "",
																		"value": "No Tokens to Release for Now"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2308:58:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2375:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2387:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2375:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2206:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2220:4:3",
														"type": ""
													}
												],
												"src": "2055:352:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:169:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2603:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2614:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2596:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2596:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2596:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2637:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2648:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2633:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2653:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2626:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2676:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2687:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2672:18:3"
																	},
																	{
																		"hexValue": "55736572206e6f742052656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2692:21:3",
																		"type": "",
																		"value": "User not Registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2665:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:49:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2665:49:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2723:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2735:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2731:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2723:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2563:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2577:4:3",
														"type": ""
													}
												],
												"src": "2412:343:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2812:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2802:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2906:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2909:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2923:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2760:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2998:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3020:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3022:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3022:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3014:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3017:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:8:3"
															},
															"nodeType": "YulIf",
															"src": "3008:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3051:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3063:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3066:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3051:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2980:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2983:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2989:4:3",
														"type": ""
													}
												],
												"src": "2949:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3154:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3156:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3156:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3143:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3150:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3140:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:13:3"
															},
															"nodeType": "YulIf",
															"src": "3137:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3196:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3199:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3110:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3113:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3119:3:3",
														"type": ""
													}
												],
												"src": "3079:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3414:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3396:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3437:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3448:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3433:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3453:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3487:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:18:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f74616c2042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3492:28:3",
																		"type": "",
																		"value": "Insufficient Total Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3465:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3530:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3530:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3363:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3377:4:3",
														"type": ""
													}
												],
												"src": "3212:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3741:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3751:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3803:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3781:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:3"
																	},
																	{
																		"hexValue": "43616e6e6f742061646420526567697374657265642055736572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3847:28:3",
																		"type": "",
																		"value": "Cannot add Registered User"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3885:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3897:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3885:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3718:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3732:4:3",
														"type": ""
													}
												],
												"src": "3567:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4096:164:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4113:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4124:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4106:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4158:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4143:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4136:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4136:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4186:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4197:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4182:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4182:18:3"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4202:16:3",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4175:44:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4240:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4228:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4073:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4087:4:3",
														"type": ""
													}
												],
												"src": "3922:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:228:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4342:168:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4363:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4366:77:3",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4356:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4356:88:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4356:88:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4464:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4467:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4457:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4457:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4457:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4492:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4495:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4485:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4485:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4485:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4331:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:9:3"
															},
															"nodeType": "YulIf",
															"src": "4321:189:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4519:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4528:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4531:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4524:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4524:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4519:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4296:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4299:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4305:1:3",
														"type": ""
													}
												],
												"src": "4265:274:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4596:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4655:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4657:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4657:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4657:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4627:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4620:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4620:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4613:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4613:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4635:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4646:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4642:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4642:6:3"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4650:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4638:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4638:14:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4632:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4632:21:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:45:3"
															},
															"nodeType": "YulIf",
															"src": "4606:71:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4686:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4701:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4704:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4686:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4575:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4578:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4584:7:3",
														"type": ""
													}
												],
												"src": "4544:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4908:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4901:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4953:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4931:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4981:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4977:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:18:3"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4997:22:3",
																		"type": "",
																		"value": "Nothing to claim yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4970:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5029:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5029:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4868:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4882:4:3",
														"type": ""
													}
												],
												"src": "4717:344:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_struct$_WhitelistStruct_$524_memory_ptr__to_t_struct$_WhitelistStruct_$524_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No Tokens Left\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"No Tokens to Release for Now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"User not Registered\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient Total Balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Cannot add Registered User\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Nothing to claim yet\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100bd5760003560e01c806381008568116100765780638cdb7e8b1161005b5780638cdb7e8b146101b657806396074e70146101fe578063efdd87961461021157600080fd5b806381008568146101225780638b2b423a146101ad57600080fd5b8063338dbf59116100a7578063338dbf59146100fd578063549dee0b146101065780637d3bca761461010f57600080fd5b80625171f4146100c25780631d77b00b146100e8575b600080fd5b6100d56100d036600461093b565b610219565b6040519081526020015b60405180910390f35b6100fb6100f636600461093b565b610337565b005b6100d560025481565b6100d560005481565b6100d561011d36600461093b565b610379565b61018761013036600461093b565b6001600160a01b0316600090815260036020818152604092839020835160808101855281548082526001830154938201849052600283015460ff161515958201869052919093015460609093018390529390929190565b6040805194855260208501939093529015159183019190915260608201526080016100df565b6100d560015481565b6101c96101c436600461093b565b610471565b6040516100df919081518152602080830151908201526040808301511515908201526060918201519181019190915260800190565b6100fb61020c366004610956565b6104ee565b6100fb61061b565b6000610223610629565b6001600160a01b0382166000908152600360205260409020600101546102905760405162461bcd60e51b815260206004820152600e60248201527f4e6f20546f6b656e73204c65667400000000000000000000000000000000000060448201526064015b60405180910390fd5b600061029b83610685565b9050600081116102ed5760405162461bcd60e51b815260206004820152601c60248201527f4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77000000006044820152606401610287565b6001600160a01b03831660009081526003602052604090206001015461031390826108ed565b6001600160a01b03841660009081526003602052604090206001015590505b919050565b61033f610629565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610383610629565b6001600160a01b0382166000908152600360205260409020600101546103eb5760405162461bcd60e51b815260206004820152601360248201527f55736572206e6f742052656769737465726564000000000000000000000000006044820152606401610287565b60016000808282546103fd9190610996565b90915550506001600160a01b038216600090815260036020526040812060019081015481549092906104309084906109ad565b9091555050506001600160a01b0316600090815260036020819052604082206001810180548483559084905560028201805460ff1916905591019190915590565b61049e60405180608001604052806000815260200160008152602001600015158152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160808101855281548152600182015492810192909252600281015460ff16151593820193909352910154606082015290565b6104f6610629565b6001548111156105485760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420546f74616c2042616c616e63650000000000006044820152606401610287565b6001600160a01b038216600090815260036020526040902060010154156105b15760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420616464205265676973746572656420557365720000000000006044820152606401610287565b6001600160a01b03821660009081526003602081905260408220838155600180820185905560028201805460ff191690559101819055815490919081906105f99084906109ad565b9250508190555080600160008282546106129190610996565b90915550505050565b610623610629565b42600255565b6004546001600160a01b031633146106835760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a65640000000000000000000000000000000000006044820152606401610287565b565b6000806000620151806002544261069c9190610996565b6106a691906109c5565b90506101e081101561076a576001600160a01b03841660009081526003602052604090206002015460ff16610744576001600160a01b03841660009081526003602052604090205461071b906107149061070c906a3cb5feec27901169e0000090610900565b60015461090c565b8390610918565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260409091206101c2910155610899565b6101e0811015801561077d575061034881105b15610899576001600160a01b03841660009081526003602052604090206002015460ff16610805576001600160a01b0384166000908152600360205260409020546107dc906107149061070c906a3cb5feec27901169e0000090610900565b6001600160a01b0385166000908152600360205260409020600201805460ff1916600117905591505b6001600160a01b03841660009081526003602081905260408220015461082b9083610996565b6001600160a01b03861660009081526003602052604090205490915061086c906108659061070c906a03290914be1afb7508000090610900565b8490610918565b61087690826109e7565b6001600160a01b0386166000908152600360208190526040909120018390559250505b816108e65760405162461bcd60e51b815260206004820152601460248201527f4e6f7468696e6720746f20636c61696d207965740000000000000000000000006044820152606401610287565b5092915050565b60006108f98284610996565b9392505050565b60006108f982846109e7565b60006108f982846109c5565b60006108f982846109ad565b80356001600160a01b038116811461033257600080fd5b60006020828403121561094d57600080fd5b6108f982610924565b6000806040838503121561096957600080fd5b61097283610924565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109a8576109a8610980565b500390565b600082198211156109c0576109c0610980565b500190565b6000826109e257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610a0157610a01610980565b50029056fea2646970667358221220f764e3b5f0e427cfcd77b7d60ab64bcadf8a91477759789bc40541bad9ebdac264736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81008568 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x8CDB7E8B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8CDB7E8B EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x96074E70 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xEFDD8796 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81008568 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x8B2B423A EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x338DBF59 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x549DEE0B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x7D3BCA76 EQ PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x5171F4 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP6 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x60 SWAP1 SWAP4 ADD DUP4 SWAP1 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0xFB PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E73204C656674000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP4 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x313 SWAP1 DUP3 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F PUSH2 0x629 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206E6F74205265676973746572656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP2 SLOAD SWAP1 SWAP3 SWAP1 PUSH2 0x430 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP5 DUP4 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x49E PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420546F74616C2042616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742061646420526567697374657265642055736572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 ADD DUP2 SWAP1 SSTORE DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x5F9 SWAP1 DUP5 SWAP1 PUSH2 0x9AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x623 PUSH2 0x629 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x15180 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x6A6 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E0 DUP2 LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x744 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71B SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x90C JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x1C2 SWAP2 ADD SSTORE PUSH2 0x899 JUMP JUMPDEST PUSH2 0x1E0 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI POP PUSH2 0x348 DUP2 LT JUMPDEST ISZERO PUSH2 0x899 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x805 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x714 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3CB5FEEC27901169E00000 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x82B SWAP1 DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x86C SWAP1 PUSH2 0x865 SWAP1 PUSH2 0x70C SWAP1 PUSH11 0x3290914BE1AFB75080000 SWAP1 PUSH2 0x900 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x876 SWAP1 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP3 POP POP JUMPDEST DUP2 PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D20796574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x287 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 DUP3 DUP5 PUSH2 0x9AD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F9 DUP3 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x972 DUP4 PUSH2 0x924 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x980 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x980 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA01 PUSH2 0x980 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH5 0xE3B5F0E427 0xCF 0xCD PUSH24 0xB7D60AB64BCADF8A91477759789BC40541BAD9EBDAC26473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "150:5296:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4941:503;;;;;;:::i;:::-;;:::i;:::-;;;552:25:3;;;540:2;525:18;4941:503:2;;;;;;;;1244:99;;;;;;:::i;:::-;;:::i;:::-;;412:31;;;;;;207;;;;;;4465:389;;;;;;:::i;:::-;;:::i;1349:427::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1573:18:2;1444:7;1573:18;;;:12;:18;;;;;;;;;1536:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:427;;;;;813:25:3;;;869:2;854:18;;847:34;;;;924:14;;917:22;897:18;;;890:50;;;;971:2;956:18;;949:34;800:3;785:19;1349:427:2;588:401:3;245:32:2;;;;;;1887:153;;;;;;:::i;:::-;;:::i;:::-;;;;;;1223:13:3;;1205:32;;1293:4;1281:17;;;1275:24;1253:20;;;1246:54;1370:4;1358:17;;;1352:24;1345:32;1338:40;1316:20;;;1309:70;1435:4;1423:17;;;1417:24;1395:20;;;1388:54;;;;1192:3;1177:19;;994:454;3941:518:2;;;;;;:::i;:::-;;:::i;1782:99::-;;;:::i;4941:503::-;5033:7;1102:12;:10;:12::i;:::-;-1:-1:-1;;;;;5064:18:2;::::1;5092:1;5064:18:::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;5056:56:::1;;;::::0;-1:-1:-1;;;5056:56:2;;1914:2:3;5056:56:2::1;::::0;::::1;1896:21:3::0;1953:2;1933:18;;;1926:30;1992:16;1972:18;;;1965:44;2026:18;;5056:56:2::1;;;;;;;;;5123:29;5155:31;5181:4;5155:25;:31::i;:::-;5123:63;;5229:1;5205:21;:25;5197:66;;;::::0;-1:-1:-1;;;5197:66:2;;2257:2:3;5197:66:2::1;::::0;::::1;2239:21:3::0;2296:2;2276:18;;;2269:30;2335;2315:18;;;2308:58;2383:18;;5197:66:2::1;2055:352:3::0;5197:66:2::1;-1:-1:-1::0;;;;;5328:18:2;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;5302:96:::1;::::0;5367:21;5302:12:::1;:96::i;:::-;-1:-1:-1::0;;;;;5274:18:2;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;:124:::0;5416:21;-1:-1:-1;1124:1:2::1;4941:503:::0;;;:::o;1244:99::-;1102:12;:10;:12::i;:::-;1316::::1;:20:::0;;;::::1;-1:-1:-1::0;;;;;1316:20:2;;;::::1;::::0;;;::::1;::::0;;1244:99::o;4465:389::-;4558:7;1102:12;:10;:12::i;:::-;-1:-1:-1;;;;;4589:18:2;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;4581:62:::1;;;::::0;-1:-1:-1;;;4581:62:2;;2614:2:3;4581:62:2::1;::::0;::::1;2596:21:3::0;2653:2;2633:18;;;2626:30;2692:21;2672:18;;;2665:49;2731:18;;4581:62:2::1;2412:343:3::0;4581:62:2::1;4673:1;4653:16;::::0;:21:::1;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4705:18:2;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;::::0;;::::1;::::0;4684:46;;4705:25;;:18;4684:46:::1;::::0;4705:25;;4684:46:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;;4760:18:2::1;4740:17;4760:18:::0;;;:12:::1;:18;::::0;;;;;;:25:::1;::::0;::::1;::::0;;4796;;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;4796:25:2::1;::::0;;;::::1;::::0;;;;4760;4465:389::o;1887:153::-;1970:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:22:2;-1:-1:-1;;;;;;2015:18:2;;;;;:12;:18;;;;;;;;;2008:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1887:153::o;3941:518::-;1102:12;:10;:12::i;:::-;4062:17:::1;;4052:6;:27;;4044:66;;;::::0;-1:-1:-1;;;4044:66:2;;3414:2:3;4044:66:2::1;::::0;::::1;3396:21:3::0;3453:2;3433:18;;;3426:30;3492:28;3472:18;;;3465:56;3538:18;;4044:66:2::1;3212:350:3::0;4044:66:2::1;-1:-1:-1::0;;;;;4128:18:2;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25:::1;;::::0;:30;4120:69:::1;;;::::0;-1:-1:-1;;;4120:69:2;;3769:2:3;4120:69:2::1;::::0;::::1;3751:21:3::0;3808:2;3788:18;;;3781:30;3847:28;3827:18;;;3820:56;3893:18;;4120:69:2::1;3567:350:3::0;4120:69:2::1;-1:-1:-1::0;;;;;4200:18:2;::::1;;::::0;;;:12:::1;:18;::::0;;;;;;:40;;;4250:25:::1;::::0;;::::1;:34:::0;;;4294::::1;::::0;::::1;:42:::0;;-1:-1:-1;;4294:42:2::1;::::0;;4346:33;::::1;:37:::0;;;4394:21;;4250:25;;4200:18;;;4394:21:::1;::::0;4250:25;;4394:21:::1;:::i;:::-;;;;;;;;4446:6;4425:17;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;3941:518:2:o;1782:99::-;1102:12;:10;:12::i;:::-;1859:15:::1;1840:16;:34:::0;1782:99::o;959:106::-;1027:12;;-1:-1:-1;;;;;1027:12:2;1013:10;:26;1005:53;;;;-1:-1:-1;;;1005:53:2;;4124:2:3;1005:53:2;;;4106:21:3;4163:2;4143:18;;;4136:30;4202:16;4182:18;;;4175:44;4236:18;;1005:53:2;3922:338:3;1005:53:2;959:106::o;2145:1790::-;2228:7;2251:17;2279:20;2341:6;2321:16;;2303:15;:34;;;;:::i;:::-;2302:45;;;;:::i;:::-;2279:68;;2430:7;2415:12;:22;2411:1434;;;-1:-1:-1;;;;;2457:18:2;;;;;;:12;:18;;;;;:34;;;;;2453:363;;-1:-1:-1;;;;;2627:18:2;;;;;;:12;:18;;;;;:31;2532:210;;2567:157;;2605:54;;319:15;;2605:12;:54::i;:::-;2685:17;;2567:12;:157::i;:::-;2532:9;;:13;:210::i;:::-;-1:-1:-1;;;;;2760:18:2;;;;;;:12;:18;;;;;:34;;:41;;-1:-1:-1;;2760:41:2;2797:4;2760:41;;;2520:222;-1:-1:-1;2453:363:2;-1:-1:-1;;;;;2829:18:2;;;;;;:12;:18;;;;;;;;2865:7;2829:33;;:43;2411:1434;;;2968:7;2952:12;:23;;:49;;;;;2994:7;2979:12;:22;2952:49;2948:897;;;-1:-1:-1;;;;;3021:18:2;;;;;;:12;:18;;;;;:34;;;;;3017:363;;-1:-1:-1;;;;;3191:18:2;;;;;;:12;:18;;;;;:31;3096:210;;3131:157;;3169:54;;319:15;;3169:12;:54::i;3096:210::-;-1:-1:-1;;;;;3324:18:2;;;;;;:12;:18;;;;;:34;;:41;;-1:-1:-1;;3324:41:2;3361:4;3324:41;;;3084:222;-1:-1:-1;3017:363:2;-1:-1:-1;;;;;3452:18:2;;3394:24;3452:18;;;:12;:18;;;;;;;:33;;3421:64;;:12;:64;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;;;;:12;:18;;;;;:31;3394:91;;-1:-1:-1;3562:210:2;;3597:157;;3635:54;;376:14;;3635:12;:54::i;3597:157::-;3562:9;;:13;:210::i;:::-;3527:245;;:16;:245;:::i;:::-;-1:-1:-1;;;;;3786:18:2;;;;;;:12;:18;;;;;;;;:33;:48;;;3499:273;-1:-1:-1;;2948:897:2;3863:14;3855:47;;;;-1:-1:-1;;;3855:47:2;;4919:2:3;3855:47:2;;;4901:21:3;4958:2;4938:18;;;4931:30;4997:22;4977:18;;;4970:50;5037:18;;3855:47:2;4717:344:3;3855:47:2;-1:-1:-1;3919:9:2;2145:1790;-1:-1:-1;;2145:1790:2:o;3108:96:0:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:0:o;3451:::-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;14:196:3:-;82:20;;-1:-1:-1;;;;;131:54:3;;121:65;;111:93;;200:1;197;190:12;215:186;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;1453:254::-;1521:6;1529;1582:2;1570:9;1561:7;1557:23;1553:32;1550:52;;;1598:1;1595;1588:12;1550:52;1621:29;1640:9;1621:29;:::i;:::-;1611:39;1697:2;1682:18;;;;1669:32;;-1:-1:-1;;;1453:254:3:o;2760:184::-;-1:-1:-1;;;2809:1:3;2802:88;2909:4;2906:1;2899:15;2933:4;2930:1;2923:15;2949:125;2989:4;3017:1;3014;3011:8;3008:34;;;3022:18;;:::i;:::-;-1:-1:-1;3059:9:3;;2949:125::o;3079:128::-;3119:3;3150:1;3146:6;3143:1;3140:13;3137:39;;;3156:18;;:::i;:::-;-1:-1:-1;3192:9:3;;3079:128::o;4265:274::-;4305:1;4331;4321:189;;-1:-1:-1;;;4363:1:3;4356:88;4467:4;4464:1;4457:15;4495:4;4492:1;4485:15;4321:189;-1:-1:-1;4524:9:3;;4265:274::o;4544:168::-;4584:7;4650:1;4646;4642:6;4638:14;4635:1;4632:21;4627:1;4620:9;4613:17;4609:45;4606:71;;;4657:18;;:::i;:::-;-1:-1:-1;4697:9:3;;4544:168::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "524000",
								"executionCost": "46897",
								"totalCost": "570897"
							},
							"external": {
								"addBeneficiary(address,uint256)": "146128",
								"beneficiary(address)": "9103",
								"changeTalaxAddress(address)": "26766",
								"deleteBeneficiary(address)": "97045",
								"hasWhitelist(address)": "9247",
								"initiateWhitelist()": "24479",
								"privateSaleAmount()": "2329",
								"privateSaleUsers()": "2329",
								"releaseClaimable(address)": "infinite",
								"startPrivateSale()": "2307"
							},
							"internal": {
								"_calculateClaimableAmount(address)": "infinite",
								"_onlyTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 5446,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 745,
									"end": 848,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 745,
									"end": 848,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 745,
									"end": 848,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 789,
									"end": 806,
									"name": "PUSH",
									"source": 2,
									"value": "4BE37EA7317415C45800000"
								},
								{
									"begin": 769,
									"end": 786,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 816,
									"end": 828,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 816,
									"end": 841,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 816,
									"end": 841,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 816,
									"end": 841,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 831,
									"end": 841,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 816,
									"end": 841,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 816,
									"end": 841,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 816,
									"end": 841,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 5446,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f764e3b5f0e427cfcd77b7d60ab64bcadf8a91477759789bc40541bad9ebdac264736f6c634300080b0033",
									".code": [
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "81008568"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "8CDB7E8B"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "8CDB7E8B"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "96074E70"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "EFDD8796"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "81008568"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "8B2B423A"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "338DBF59"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "338DBF59"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "549DEE0B"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "7D3BCA76"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "5171F4"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "1D77B00B"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 150,
											"end": 5446,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 577,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 412,
											"end": 443,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 412,
											"end": 443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 412,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 412,
											"end": 443,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 443,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 412,
											"end": 443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 412,
											"end": 443,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 207,
											"end": 238,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 207,
											"end": 238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 207,
											"end": 238,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 813,
											"end": 838,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 813,
											"end": 838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 869,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 872,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 854,
											"end": 872,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 847,
											"end": 881,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 847,
											"end": 881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 924,
											"end": 938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 924,
											"end": 938,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 939,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 897,
											"end": 915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 897,
											"end": 915,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 890,
											"end": 940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 890,
											"end": 940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 956,
											"end": 974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 800,
											"end": 803,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 785,
											"end": 804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 989,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 245,
											"end": 277,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 245,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 245,
											"end": 277,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 245,
											"end": 277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 245,
											"end": 277,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1236,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1298,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1376,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1378,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1441,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1442,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1177,
											"end": 1196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1448,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5033,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5089,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5064,
											"end": 5089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5064,
											"end": 5089,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1917,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F20546F6B656E73204C656674000000000000000000000000000000000000"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2009,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5056,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5155,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5155,
											"end": 5186,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5155,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5155,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5230,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2299,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2365,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F20546F6B656E7320746F2052656C6561736520666F72204E6F7700000000"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2366,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2055,
											"end": 2407,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5197,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5340,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5346,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5353,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5328,
											"end": 5353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5328,
											"end": 5353,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5302,
											"end": 5398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5302,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5302,
											"end": 5398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 5398,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5302,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5286,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5274,
											"end": 5299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5398,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5416,
											"end": 5437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1124,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 5444,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1336,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1343,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4558,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4601,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4589,
											"end": 4614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4614,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2616,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2617,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2655,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2713,
											"name": "PUSH",
											"source": 3,
											"value": "55736572206E6F74205265676973746572656400000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2412,
											"end": 2755,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4653,
											"end": 4669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4653,
											"end": 4674,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 4730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4684,
											"end": 4730,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4772,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4778,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4785,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4760,
											"end": 4785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4785,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4796,
											"end": 4821,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4760,
											"end": 4785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4465,
											"end": 4854,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1970,
											"end": 1992,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1970,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2040,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4062,
											"end": 4079,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4079,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4079,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3455,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3520,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E7420546F74616C2042616C616E6365000000000000"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3521,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3212,
											"end": 3562,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4044,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4140,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4153,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4128,
											"end": 4153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4153,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3771,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3772,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3875,
											"name": "PUSH",
											"source": 3,
											"value": "43616E6E6F742061646420526567697374657265642055736572000000000000"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3567,
											"end": 3917,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4120,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4212,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4240,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4240,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4284,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4284,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4336,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4336,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4336,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4383,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4442,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4425,
											"end": 4442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4425,
											"end": 4452,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 4459,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1102,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1874,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1840,
											"end": 1874,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1881,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1065,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 959,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1039,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4166,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4218,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3922,
											"end": 4260,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1065,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2145,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2145,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "PUSH",
											"source": 2,
											"value": "15180"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2302,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "1E0"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2437,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2457,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2491,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2457,
											"end": 2491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2453,
											"end": 2816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2658,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2532,
											"end": 2742,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2567,
											"end": 2724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2605,
											"end": 2659,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 319,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2605,
											"end": 2659,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2659,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2605,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2567,
											"end": 2724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2567,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2532,
											"end": 2742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2532,
											"end": 2742,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2532,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2760,
											"end": 2801,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2801,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2742,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2453,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2453,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "PUSH",
											"source": 2,
											"value": "1C2"
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2872,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2411,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "1E0"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2975,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2975,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2994,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 2979,
											"end": 2991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 3001,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2952,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 3845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2948,
											"end": 3845,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3017,
											"end": 3380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3222,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3096,
											"end": 3306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3131,
											"end": 3288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3169,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "3CB5FEEC27901169E00000"
										},
										{
											"begin": 319,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3169,
											"end": 3223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3096,
											"end": 3306,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3096,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3336,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3324,
											"end": 3358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3365,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3324,
											"end": 3365,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3324,
											"end": 3365,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3306,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3017,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3464,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3470,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3485,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3421,
											"end": 3485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3421,
											"end": 3485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3421,
											"end": 3485,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3421,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3669,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3562,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3562,
											"end": 3772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3597,
											"end": 3754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3635,
											"end": 3689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 376,
											"end": 390,
											"name": "PUSH",
											"source": 2,
											"value": "3290914BE1AFB75080000"
										},
										{
											"begin": 376,
											"end": 390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3635,
											"end": 3689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3754,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3597,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3571,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3562,
											"end": 3772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3562,
											"end": 3772,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3562,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3527,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3527,
											"end": 3772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3527,
											"end": 3543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3527,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3527,
											"end": 3772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3527,
											"end": 3772,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3527,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3798,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3834,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3772,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 3845,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2948,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3863,
											"end": 3877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 4922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7468696E6720746F20636C61696D20796574000000000000000000000000"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4970,
											"end": 5020,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4717,
											"end": 5061,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3855,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 3935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2145,
											"end": 3935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1453,
											"end": 1707,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1453,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1557,
											"end": 1580,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1600,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1550,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1621,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1650,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1701,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1707,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2760,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2760,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2899,
											"end": 2914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2937,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2938,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3074,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2949,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 2993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3019,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3008,
											"end": 3042,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 3074,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3079,
											"end": 3207,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3079,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3140,
											"end": 3153,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3137,
											"end": 3176,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3207,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4265,
											"end": 4539,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4265,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4444,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4467,
											"end": 4471,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4464,
											"end": 4465,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4457,
											"end": 4472,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4492,
											"end": 4493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4500,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4321,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4539,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4544,
											"end": 4712,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4544,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4648,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4652,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4630,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4609,
											"end": 4654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4677,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4606,
											"end": 4677,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4544,
											"end": 4712,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBeneficiary(address,uint256)": "96074e70",
							"beneficiary(address)": "81008568",
							"changeTalaxAddress(address)": "1d77b00b",
							"deleteBeneficiary(address)": "7d3bca76",
							"hasWhitelist(address)": "8cdb7e8b",
							"initiateWhitelist()": "efdd8796",
							"privateSaleAmount()": "8b2b423a",
							"privateSaleUsers()": "549dee0b",
							"releaseClaimable(address)": "005171f4",
							"startPrivateSale()": "338dbf59"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deleteBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasWhitelist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPhase1Claimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDay\",\"type\":\"uint256\"}],\"internalType\":\"struct Whitelist.WhitelistStruct\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"releaseClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"releaseClaimable(address)\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Interfaces.sol\":{\"keccak256\":\"0xad241fdd2cfa1040f00a41f75e08d4d0b3b15920d243154ce805836d1519f2d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3164a7677cfcc5ec84557dccd72f344f42b23ec4c175ca4bb0f6c19a0162003f\",\"dweb:/ipfs/QmRdqWJtnV5yFpCXmtKBtk87qTj7qsqPprqEUCviLsBVTT\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0x6ed769379ea0a669bd1d404102064345772070dfd2947fd4772d4ef8ba98f6b3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1c99c32d2f6dd3e5635004c7be88b7b7e8b75d1bf1e646c3c479501a851f54bc\",\"dweb:/ipfs/QmWsKYRf5s3pz2JgCMNAgdTd6v5GKqCGRTk3pNbx4ytyc4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "privateSaleUsers",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 503,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "privateSaleAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 515,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "startPrivateSale",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 529,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(WhitelistStruct)524_storage)"
							},
							{
								"astId": 531,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "talaxAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(WhitelistStruct)524_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Whitelist.WhitelistStruct)",
								"numberOfBytes": "32",
								"value": "t_struct(WhitelistStruct)524_storage"
							},
							"t_struct(WhitelistStruct)524_storage": {
								"encoding": "inplace",
								"label": "struct Whitelist.WhitelistStruct",
								"members": [
									{
										"astId": 517,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "lockedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 519,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 521,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "isPhase1Claimed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 523,
										"contract": "contracts/Whitelist.sol:Whitelist",
										"label": "latestClaimDay",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"releaseClaimable(address)": {
								"notice": "Transfers tokens held by timelock to beneficiary."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": "Warning: This declaration has the same name as another declaration.\n  --> contracts/Whitelist.sol:60:9:\n   |\n60 |         WhitelistStruct memory beneficiary = _beneficiary[user];\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/Whitelist.sol:50:5:\n   |\n50 |     function beneficiary(address user)\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 1776,
						"file": "contracts/Whitelist.sol",
						"message": "The other declaration is here:",
						"start": 1349
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1570,
					"file": "contracts/Whitelist.sol",
					"start": 1536
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Interfaces.sol": {
				"ast": {
					"absolutePath": "contracts/Interfaces.sol",
					"exportedSymbols": {
						"ILockable": [
							492
						],
						"IStakable": [
							406
						],
						"IWhitelist": [
							464
						]
					},
					"id": 493,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IStakable",
							"nameLocation": "74:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cb79c2e1",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingPenaltyRate",
									"nameLocation": "99:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:2:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "143:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:1"
									},
									"scope": 406,
									"src": "90:62:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8891cf0d",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropRate",
									"nameLocation": "167:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "204:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:1"
									},
									"scope": 406,
									"src": "158:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b87da76d",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropSince",
									"nameLocation": "228:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "266:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:9:1"
									},
									"scope": 406,
									"src": "219:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f5300ff",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVoters",
									"nameLocation": "290:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "327:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:1"
									},
									"scope": 406,
									"src": "281:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d15cc04",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "351:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "369:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "361:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:14:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "398:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "398:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "404:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "404:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:12:1"
									},
									"scope": 406,
									"src": "342:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a143a5f2",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votedUsers",
									"nameLocation": "450:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "469:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "461:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:12:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "496:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:9:1"
									},
									"scope": 406,
									"src": "441:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "71e3db87",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startAirdropSince",
									"nameLocation": "520:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:2:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:0:1"
									},
									"scope": 406,
									"src": "511:38:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "564:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "591:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "583:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:15:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:0:1"
									},
									"scope": 406,
									"src": "555:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f93d4f8a",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "622:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "645:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "637:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "667:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "659:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "691:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "683:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "720:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "712:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:109:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:0:1"
									},
									"scope": 406,
									"src": "613:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8c63f97f",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changePenaltyFee",
									"nameLocation": "761:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "786:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "778:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:16:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "802:0:1"
									},
									"scope": 406,
									"src": "752:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5dbdf1b",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeAirdropPercentage",
									"nameLocation": "818:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "850:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "842:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:16:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:0:1"
									},
									"scope": 406,
									"src": "809:58:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c23a5cea",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "882:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "896:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:14:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "928:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "937:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:18:1"
									},
									"scope": 406,
									"src": "873:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65f8c6c5",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAirdrop",
									"nameLocation": "961:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "982:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "974:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:14:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1011:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:9:1"
									},
									"scope": 406,
									"src": "952:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ec6b60a",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startVoting",
									"nameLocation": "1035:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1057:0:1"
									},
									"scope": 406,
									"src": "1026:32:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "671d2b75",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingResult",
									"nameLocation": "1073:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:2:1"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1114:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1114:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:6:1"
									},
									"scope": 406,
									"src": "1064:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fab2f86b",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stopVoting",
									"nameLocation": "1135:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:2:1"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:0:1"
									},
									"scope": 406,
									"src": "1126:31:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "64:1095:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWhitelist",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "IWhitelist",
							"nameLocation": "1171:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "549dee0b",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleUsers",
									"nameLocation": "1197:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1213:2:1"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1239:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:9:1"
									},
									"scope": 464,
									"src": "1188:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8b2b423a",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "privateSaleAmount",
									"nameLocation": "1263:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:2:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "1306:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:9:1"
									},
									"scope": 464,
									"src": "1254:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "338dbf59",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startPrivateSale",
									"nameLocation": "1330:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:2:1"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1372:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:9:1"
									},
									"scope": 464,
									"src": "1321:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "1396:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1423:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1415:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:15:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:1"
									},
									"scope": 464,
									"src": "1387:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "81008568",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1454:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1474:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1466:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1465:14:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1540:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1561:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1582:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1582:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1600:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:91:1"
									},
									"scope": 464,
									"src": "1445:173:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "efdd8796",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateWhitelist",
									"nameLocation": "1690:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:0:1"
									},
									"scope": 464,
									"src": "1681:38:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96074e70",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addBeneficiary",
									"nameLocation": "1734:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1757:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1749:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1771:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1763:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:30:1"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1787:0:1"
									},
									"scope": 464,
									"src": "1725:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d3bca76",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteBeneficiary",
									"nameLocation": "1803:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1829:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1821:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:14:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "1853:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1852:9:1"
									},
									"scope": 464,
									"src": "1794:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "005171f4",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "1877:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1902:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1894:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:14:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:9:1"
									},
									"scope": 464,
									"src": "1868:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "1161:776:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILockable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 492,
							"linearizedBaseContracts": [
								492
							],
							"name": "ILockable",
							"nameLocation": "1949:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "38af3eed",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1974:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2011:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:9:1"
									},
									"scope": 492,
									"src": "1965:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1d77b00b",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeTalaxAddress",
									"nameLocation": "2035:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "2062:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2054:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:15:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:1"
									},
									"scope": 492,
									"src": "2026:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b580aa9e",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startLockedWallet",
									"nameLocation": "2093:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:1"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2136:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:9:1"
									},
									"scope": 492,
									"src": "2084:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c8cca41e",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initiateLockedWallet",
									"nameLocation": "2160:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:2:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2191:0:1"
									},
									"scope": 492,
									"src": "2151:41:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a95606e",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseClaimable",
									"nameLocation": "2207:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2243:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2224:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$51_memory_ptr",
													"typeString": "uint256[51]"
												},
												"typeName": {
													"baseType": {
														"id": 483,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2224:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 485,
													"length": {
														"hexValue": "3531",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2232:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_51_by_1",
															"typeString": "int_const 51"
														},
														"value": "51"
													},
													"nodeType": "ArrayTypeName",
													"src": "2224:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$51_storage_ptr",
														"typeString": "uint256[51]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2223:27:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:9:1"
									},
									"scope": 492,
									"src": "2198:96:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "1939:357:1",
							"usedErrors": []
						}
					],
					"src": "39:2258:1"
				},
				"id": 1
			},
			"contracts/Whitelist.sol": {
				"ast": {
					"absolutePath": "contracts/Whitelist.sol",
					"exportedSymbols": {
						"ILockable": [
							492
						],
						"IStakable": [
							406
						],
						"IWhitelist": [
							464
						],
						"SafeMath": [
							311
						],
						"Whitelist": [
							953
						]
					},
					"id": 954,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 494,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 954,
							"sourceUnit": 312,
							"src": "64:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Interfaces.sol",
							"file": "./Interfaces.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 954,
							"sourceUnit": 493,
							"src": "122:26:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 953,
							"linearizedBaseContracts": [
								953
							],
							"name": "Whitelist",
							"nameLocation": "159:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 499,
									"libraryName": {
										"id": 497,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "181:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "175:27:2",
									"typeName": {
										"id": 498,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "194:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "549dee0b",
									"id": 501,
									"mutability": "mutable",
									"name": "privateSaleUsers",
									"nameLocation": "222:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "207:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 500,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b2b423a",
									"id": 503,
									"mutability": "mutable",
									"name": "privateSaleAmount",
									"nameLocation": "260:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "245:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 502,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 508,
									"mutability": "constant",
									"name": "_phase1",
									"nameLocation": "309:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "283:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 504,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "283:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										},
										"id": 507,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3733333935303030",
											"id": 505,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "319:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_73395000_by_1",
												"typeString": "int_const 73395000"
											},
											"value": "73395000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 506,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "330:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "319:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_73395000000000000000000000_by_1",
											"typeString": "int_const 73395000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 513,
									"mutability": "constant",
									"name": "_phase2",
									"nameLocation": "366:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "340:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 509,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										},
										"id": 512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33383230353632",
											"id": 510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "376:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3820562_by_1",
												"typeString": "int_const 3820562"
											},
											"value": "3820562"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 511,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "386:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "376:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3820562000000000000000000_by_1",
											"typeString": "int_const 3820562000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "338dbf59",
									"id": 515,
									"mutability": "mutable",
									"name": "startPrivateSale",
									"nameLocation": "427:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "412:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 514,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "412:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Whitelist.WhitelistStruct",
									"id": 524,
									"members": [
										{
											"constant": false,
											"id": 517,
											"mutability": "mutable",
											"name": "lockedAmount",
											"nameLocation": "491:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 524,
											"src": "483:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 516,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 519,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "521:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 524,
											"src": "513:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 518,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "513:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 521,
											"mutability": "mutable",
											"name": "isPhase1Claimed",
											"nameLocation": "542:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 524,
											"src": "537:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 520,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "537:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 523,
											"mutability": "mutable",
											"name": "latestClaimDay",
											"nameLocation": "575:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 524,
											"src": "567:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 522,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "567:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WhitelistStruct",
									"nameLocation": "457:15:2",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "450:146:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 529,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nameLocation": "699:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "655:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
										"typeString": "mapping(address => struct Whitelist.WhitelistStruct)"
									},
									"typeName": {
										"id": 528,
										"keyType": {
											"id": 525,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "663:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "655:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
											"typeString": "mapping(address => struct Whitelist.WhitelistStruct)"
										},
										"valueType": {
											"id": 527,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 526,
												"name": "WhitelistStruct",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 524,
												"src": "674:15:2"
											},
											"referencedDeclaration": 524,
											"src": "674:15:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage_ptr",
												"typeString": "struct Whitelist.WhitelistStruct"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 531,
									"mutability": "mutable",
									"name": "talaxAddress",
									"nameLocation": "726:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 953,
									"src": "718:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 530,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "759:89:2",
										"statements": [
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "769:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31343637393030303030",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "789:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1467900000_by_1",
																"typeString": "int_const 1467900000"
															},
															"value": "1467900000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "802:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "789:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1467900000000000000000000000_by_1",
															"typeString": "int_const 1467900000000000000000000000"
														}
													},
													"src": "769:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "769:37:2"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 540,
														"name": "talaxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 541,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "831:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "831:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "816:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "816:25:2"
											}
										]
									},
									"id": 546,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:0:2"
									},
									"scope": 953,
									"src": "745:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "995:70:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 550,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1013:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1013:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 552,
																"name": "talaxAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "1027:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1013:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1041:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1005:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1005:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1005:53:2"
											}
										]
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyTalax",
									"nameLocation": "968:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:2:2"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:2"
									},
									"scope": 953,
									"src": "959:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "1092:40:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 560,
														"name": "_onlyTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "1102:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1102:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "1102:12:2"
											},
											{
												"id": 563,
												"nodeType": "PlaceholderStatement",
												"src": "1124:1:2"
											}
										]
									},
									"id": 565,
									"name": "onlyTalax",
									"nameLocation": "1080:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:2:2"
									},
									"src": "1071:61:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "1306:37:2",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "talaxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "1316:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "1331:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1316:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1316:20:2"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 570,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 569,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 565,
												"src": "1296:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1296:9:2"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "1253:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "1280:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1272:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:15:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:2"
									},
									"scope": 953,
									"src": "1244:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1526:250:2",
										"statements": [
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "beneficiary",
														"nameLocation": "1559:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1536:34:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$524_memory_ptr",
															"typeString": "struct Whitelist.WhitelistStruct"
														},
														"typeName": {
															"id": 591,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 590,
																"name": "WhitelistStruct",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 524,
																"src": "1536:15:2"
															},
															"referencedDeclaration": 524,
															"src": "1536:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage_ptr",
																"typeString": "struct Whitelist.WhitelistStruct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"baseExpression": {
														"id": 593,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1573:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
														}
													},
													"id": 595,
													"indexExpression": {
														"id": 594,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1586:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1573:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
														"typeString": "struct Whitelist.WhitelistStruct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1536:55:2"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 597,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "1622:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$524_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 517,
															"src": "1622:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 599,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "1660:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$524_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 519,
															"src": "1660:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 601,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "1692:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$524_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isPhase1Claimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 521,
															"src": "1692:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 603,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "1733:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStruct_$524_memory_ptr",
																	"typeString": "struct Whitelist.WhitelistStruct memory"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "latestClaimDay",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "1733:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 605,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1608:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,bool,uint256)"
													}
												},
												"functionReturnParameters": 589,
												"id": 606,
												"nodeType": "Return",
												"src": "1601:168:2"
											}
										]
									},
									"functionSelector": "81008568",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1358:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1378:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1370:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:14:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1444:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1465:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1486:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1486:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1504:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:91:2"
									},
									"scope": 953,
									"src": "1349:427:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1830:51:2",
										"statements": [
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 613,
														"name": "startPrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1840:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 614,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1859:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1859:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1840:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "1840:34:2"
											}
										]
									},
									"functionSelector": "efdd8796",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 610,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 565,
												"src": "1820:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1820:9:2"
										}
									],
									"name": "initiateWhitelist",
									"nameLocation": "1791:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1830:0:2"
									},
									"scope": 953,
									"src": "1782:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1998:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 627,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2015:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
														}
													},
													"id": 629,
													"indexExpression": {
														"id": 628,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2028:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2015:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
														"typeString": "struct Whitelist.WhitelistStruct storage ref"
													}
												},
												"functionReturnParameters": 626,
												"id": 630,
												"nodeType": "Return",
												"src": "2008:25:2"
											}
										]
									},
									"functionSelector": "8cdb7e8b",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasWhitelist",
									"nameLocation": "1896:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1917:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1909:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:14:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1970:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WhitelistStruct_$524_memory_ptr",
													"typeString": "struct Whitelist.WhitelistStruct"
												},
												"typeName": {
													"id": 624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 623,
														"name": "WhitelistStruct",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 524,
														"src": "1970:15:2"
													},
													"referencedDeclaration": 524,
													"src": "1970:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage_ptr",
														"typeString": "struct Whitelist.WhitelistStruct"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:24:2"
									},
									"scope": 953,
									"src": "1887:153:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "2241:1694:2",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "2259:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "2251:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2251:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"nodeType": "VariableDeclarationStatement",
												"src": "2251:17:2"
											},
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "lockDuration",
														"nameLocation": "2287:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "2279:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 652,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 645,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2303:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2303:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 647,
																	"name": "startPrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "2321:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2303:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2302:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2341:6:2",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2302:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2279:68:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "lockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2415:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3136",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2430:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2435:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "2430:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_480_by_1",
															"typeString": "int_const 480"
														}
													},
													"src": "2415:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "2952:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2968:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2973:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "2968:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_480_by_1",
																	"typeString": "int_const 480"
																}
															},
															"src": "2952:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 706,
																"name": "lockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "2979:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3238",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2994:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2999:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "2994:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_840_by_1",
																	"typeString": "int_const 840"
																}
															},
															"src": "2979:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2952:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 782,
													"nodeType": "IfStatement",
													"src": "2948:897:2",
													"trueBody": {
														"id": 781,
														"nodeType": "Block",
														"src": "3003:842:2",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 712,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "3021:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 714,
																			"indexExpression": {
																				"id": 713,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "3034:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3021:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "isPhase1Claimed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 521,
																		"src": "3021:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3059:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3021:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 744,
																"nodeType": "IfStatement",
																"src": "3017:363:2",
																"trueBody": {
																	"id": 743,
																	"nodeType": "Block",
																	"src": "3066:314:2",
																	"statements": [
																		{
																			"expression": {
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 718,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "3084:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 725,
																											"name": "_phase1",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 508,
																											"src": "3182:7:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										{
																											"expression": {
																												"baseExpression": {
																													"id": 726,
																													"name": "_beneficiary",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 529,
																													"src": "3191:12:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																														"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																													}
																												},
																												"id": 728,
																												"indexExpression": {
																													"id": 727,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 635,
																													"src": "3204:4:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "3191:18:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																													"typeString": "struct Whitelist.WhitelistStruct storage ref"
																												}
																											},
																											"id": 729,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "lockedAmount",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 517,
																											"src": "3191:31:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 723,
																											"name": "SafeMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 311,
																											"src": "3169:8:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																												"typeString": "type(library SafeMath)"
																											}
																										},
																										"id": 724,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 205,
																										"src": "3169:12:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 730,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3169:54:2",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 731,
																									"name": "privateSaleAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 503,
																									"src": "3249:17:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 721,
																									"name": "SafeMath",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 311,
																									"src": "3131:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																										"typeString": "type(library SafeMath)"
																									}
																								},
																								"id": 722,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 220,
																								"src": "3131:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 732,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3131:157:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 719,
																							"name": "claimable",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 641,
																							"src": "3096:9:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 175,
																						"src": "3096:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 733,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3096:210:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3084:222:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 735,
																			"nodeType": "ExpressionStatement",
																			"src": "3084:222:2"
																		},
																		{
																			"expression": {
																				"id": 741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 736,
																							"name": "_beneficiary",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 529,
																							"src": "3324:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																								"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																							}
																						},
																						"id": 738,
																						"indexExpression": {
																							"id": 737,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 635,
																							"src": "3337:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3324:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																							"typeString": "struct Whitelist.WhitelistStruct storage ref"
																						}
																					},
																					"id": 739,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "isPhase1Claimed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 521,
																					"src": "3324:34:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3361:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3324:41:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 742,
																			"nodeType": "ExpressionStatement",
																			"src": "3324:41:2"
																		}
																	]
																}
															},
															{
																"assignments": [
																	746
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 746,
																		"mutability": "mutable",
																		"name": "sinceLatestClaim",
																		"nameLocation": "3402:16:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 781,
																		"src": "3394:24:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 745,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3394:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 753,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 747,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "3421:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 748,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "3452:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 750,
																			"indexExpression": {
																				"id": 749,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "3465:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3452:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 523,
																		"src": "3452:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3421:64:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3394:91:2"
															},
															{
																"expression": {
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 754,
																		"name": "claimable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "3499:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 755,
																			"name": "sinceLatestClaim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "3527:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 762,
																									"name": "_phase2",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 513,
																									"src": "3648:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"baseExpression": {
																											"id": 763,
																											"name": "_beneficiary",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 529,
																											"src": "3657:12:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																												"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																											}
																										},
																										"id": 765,
																										"indexExpression": {
																											"id": 764,
																											"name": "user",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 635,
																											"src": "3670:4:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "3657:18:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																											"typeString": "struct Whitelist.WhitelistStruct storage ref"
																										}
																									},
																									"id": 766,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "lockedAmount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 517,
																									"src": "3657:31:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 760,
																									"name": "SafeMath",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 311,
																									"src": "3635:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																										"typeString": "type(library SafeMath)"
																									}
																								},
																								"id": 761,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 205,
																								"src": "3635:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 767,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3635:54:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 768,
																							"name": "privateSaleAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 503,
																							"src": "3715:17:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 758,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 311,
																							"src": "3597:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 759,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 220,
																						"src": "3597:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3597:157:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 756,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "3562:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 175,
																				"src": "3562:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3562:210:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3527:245:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3499:273:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 773,
																"nodeType": "ExpressionStatement",
																"src": "3499:273:2"
															},
															{
																"expression": {
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 774,
																				"name": "_beneficiary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 529,
																				"src": "3786:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																				}
																			},
																			"id": 776,
																			"indexExpression": {
																				"id": 775,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "3799:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3786:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																				"typeString": "struct Whitelist.WhitelistStruct storage ref"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "latestClaimDay",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 523,
																		"src": "3786:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 778,
																		"name": "lockDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "3822:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3786:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 780,
																"nodeType": "ExpressionStatement",
																"src": "3786:48:2"
															}
														]
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "2411:1434:2",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "2439:444:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 658,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "2457:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																			}
																		},
																		"id": 660,
																		"indexExpression": {
																			"id": 659,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "2470:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2457:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																			"typeString": "struct Whitelist.WhitelistStruct storage ref"
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isPhase1Claimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 521,
																	"src": "2457:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2495:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2457:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 690,
															"nodeType": "IfStatement",
															"src": "2453:363:2",
															"trueBody": {
																"id": 689,
																"nodeType": "Block",
																"src": "2502:314:2",
																"statements": [
																	{
																		"expression": {
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 664,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "2520:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 671,
																										"name": "_phase1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 508,
																										"src": "2618:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"expression": {
																											"baseExpression": {
																												"id": 672,
																												"name": "_beneficiary",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 529,
																												"src": "2627:12:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																													"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																												}
																											},
																											"id": 674,
																											"indexExpression": {
																												"id": 673,
																												"name": "user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 635,
																												"src": "2640:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "2627:18:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																												"typeString": "struct Whitelist.WhitelistStruct storage ref"
																											}
																										},
																										"id": 675,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "lockedAmount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 517,
																										"src": "2627:31:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 669,
																										"name": "SafeMath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 311,
																										"src": "2605:8:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																											"typeString": "type(library SafeMath)"
																										}
																									},
																									"id": 670,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 205,
																									"src": "2605:12:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 676,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2605:54:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 677,
																								"name": "privateSaleAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 503,
																								"src": "2685:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 667,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 311,
																								"src": "2567:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 668,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 220,
																							"src": "2567:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2567:157:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 665,
																						"name": "claimable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 641,
																						"src": "2532:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "2532:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2532:210:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2520:222:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 681,
																		"nodeType": "ExpressionStatement",
																		"src": "2520:222:2"
																	},
																	{
																		"expression": {
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 682,
																						"name": "_beneficiary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 529,
																						"src": "2760:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																							"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																						}
																					},
																					"id": 684,
																					"indexExpression": {
																						"id": 683,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 635,
																						"src": "2773:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2760:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																						"typeString": "struct Whitelist.WhitelistStruct storage ref"
																					}
																				},
																				"id": 685,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "isPhase1Claimed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 521,
																				"src": "2760:34:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2797:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2760:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 688,
																		"nodeType": "ExpressionStatement",
																		"src": "2760:41:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 691,
																			"name": "_beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "2829:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																			}
																		},
																		"id": 693,
																		"indexExpression": {
																			"id": 692,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "2842:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2829:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																			"typeString": "struct Whitelist.WhitelistStruct storage ref"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDay",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 523,
																	"src": "2829:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3135",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2865:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2870:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	"src": "2865:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_450_by_1",
																		"typeString": "int_const 450"
																	}
																},
																"src": "2829:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "2829:43:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "3863:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3876:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3863:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d20796574",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3879:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															},
															"value": "Nothing to claim yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac9ca5f7971ba90dd53ffc6050e7926583c60e5c864ecc8b0ac1fd18905e99f9",
																"typeString": "literal_string \"Nothing to claim yet\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3855:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "3855:47:2"
											},
											{
												"expression": {
													"id": 791,
													"name": "claimable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "3919:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 639,
												"id": 792,
												"nodeType": "Return",
												"src": "3912:16:2"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2046:94:2",
										"text": "  @dev \t\tMain Functions\n  @return \tClaimable amount from Locked Wallet"
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateClaimableAmount",
									"nameLocation": "2154:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2188:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2180:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:14:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2228:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:9:2"
									},
									"scope": 953,
									"src": "2145:1790:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4034:425:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "4052:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 805,
																"name": "privateSaleAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "4062:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4052:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f74616c2042616c616e6365",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4081:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35",
																"typeString": "literal_string \"Insufficient Total Balance\""
															},
															"value": "Insufficient Total Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2812df8098724a19e626f2fcbdd08b3426e65b5ff71e519def40bf6bb8ffaf35",
																"typeString": "literal_string \"Insufficient Total Balance\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4044:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4044:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "4044:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 811,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "4128:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 813,
																	"indexExpression": {
																		"id": 812,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "4141:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4128:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 519,
																"src": "4128:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4157:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4128:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742061646420526567697374657265642055736572",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4160:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a",
																"typeString": "literal_string \"Cannot add Registered User\""
															},
															"value": "Cannot add Registered User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94458f364e0ffb245ca4eba56924e7293ed20457455c1d78ac86885ac4682e2a",
																"typeString": "literal_string \"Cannot add Registered User\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4120:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4120:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "4120:69:2"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 820,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4200:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 822,
															"indexExpression": {
																"id": 821,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4213:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4200:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 517,
														"src": "4200:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 824,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4234:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4200:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "4200:40:2"
											},
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 827,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4250:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 829,
															"indexExpression": {
																"id": 828,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4263:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4250:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 519,
														"src": "4250:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 831,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4278:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4250:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "4250:34:2"
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 834,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4294:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 836,
															"indexExpression": {
																"id": 835,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4307:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4294:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isPhase1Claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 521,
														"src": "4294:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4331:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4294:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "4294:42:2"
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 841,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4346:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 842,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4359:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4346:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 523,
														"src": "4346:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4382:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4346:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "4346:37:2"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 848,
														"name": "privateSaleUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "4394:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4414:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4394:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "4394:21:2"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 852,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "4425:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 853,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4446:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4425:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "4425:27:2"
											}
										]
									},
									"functionSelector": "96074e70",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 800,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 565,
												"src": "4020:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4020:9:2"
										}
									],
									"name": "addBeneficiary",
									"nameLocation": "3950:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3973:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "3965:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3987:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "3979:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:30:2"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4034:0:2"
									},
									"scope": 953,
									"src": "3941:518:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "4571:283:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 867,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "4589:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 869,
																	"indexExpression": {
																		"id": 868,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "4602:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4589:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 519,
																"src": "4589:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4618:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4589:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f742052656769737465726564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4621:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7",
																"typeString": "literal_string \"User not Registered\""
															},
															"value": "User not Registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ef76857e7f388323c58ffa20ec2ff71fb20ac2c5604fb66f74cf4cef5400bd7",
																"typeString": "literal_string \"User not Registered\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "4581:62:2"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "privateSaleUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "4653:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4673:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4653:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "4653:21:2"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 880,
														"name": "privateSaleAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "4684:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 881,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4705:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 883,
															"indexExpression": {
																"id": 882,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "4718:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4705:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 519,
														"src": "4705:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4684:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "4684:46:2"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "ex_amount",
														"nameLocation": "4748:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4740:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4740:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 889,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "4760:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
															}
														},
														"id": 891,
														"indexExpression": {
															"id": 890,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4773:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4760:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
															"typeString": "struct Whitelist.WhitelistStruct storage ref"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 519,
													"src": "4760:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4740:45:2"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4796:25:2",
													"subExpression": {
														"baseExpression": {
															"id": 894,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "4803:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
															}
														},
														"id": 896,
														"indexExpression": {
															"id": 895,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "4816:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
															"typeString": "struct Whitelist.WhitelistStruct storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "4796:25:2"
											},
											{
												"expression": {
													"id": 899,
													"name": "ex_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 888,
													"src": "4838:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 865,
												"id": 900,
												"nodeType": "Return",
												"src": "4831:16:2"
											}
										]
									},
									"functionSelector": "7d3bca76",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 861,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 565,
												"src": "4531:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4531:9:2"
										}
									],
									"name": "deleteBeneficiary",
									"nameLocation": "4474:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "4492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4491:14:2"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "4558:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4557:9:2"
									},
									"scope": 953,
									"src": "4465:389:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "5046:398:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 913,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "5064:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 915,
																	"indexExpression": {
																		"id": 914,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "5077:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5064:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 519,
																"src": "5064:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5092:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5064:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20546f6b656e73204c656674",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5095:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17",
																"typeString": "literal_string \"No Tokens Left\""
															},
															"value": "No Tokens Left"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d6b80ebd59a303e9bfcce2d67970219661c6efe8c5f304a97d73d3dcf15ad17",
																"typeString": "literal_string \"No Tokens Left\""
															}
														],
														"id": 912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5056:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5056:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "5056:56:2"
											},
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "claimableLockedAmount",
														"nameLocation": "5131:21:2",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "5123:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5123:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 925,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 924,
														"name": "_calculateClaimableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5155:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5155:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5123:63:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 929,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "5205:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5229:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5205:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20546f6b656e7320746f2052656c6561736520666f72204e6f77",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5232:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f",
																"typeString": "literal_string \"No Tokens to Release for Now\""
															},
															"value": "No Tokens to Release for Now"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a5b0dad58f234c834b2d59776b599ea5a1d0292e912cadc1b414bfc6148e30f",
																"typeString": "literal_string \"No Tokens to Release for Now\""
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5197:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5197:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "5197:66:2"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 935,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "5274:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																}
															},
															"id": 937,
															"indexExpression": {
																"id": 936,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "5287:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5274:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																"typeString": "struct Whitelist.WhitelistStruct storage ref"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 519,
														"src": "5274:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 941,
																		"name": "_beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "5328:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStruct_$524_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStruct storage ref)"
																		}
																	},
																	"id": 943,
																	"indexExpression": {
																		"id": 942,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "5341:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5328:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStruct_$524_storage",
																		"typeString": "struct Whitelist.WhitelistStruct storage ref"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 519,
																"src": "5328:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 945,
																"name": "claimableLockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "5367:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 939,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5302:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "5302:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5302:96:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5274:124:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "5274:124:2"
											},
											{
												"expression": {
													"id": 949,
													"name": "claimableLockedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "5416:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 911,
												"id": 950,
												"nodeType": "Return",
												"src": "5409:28:2"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "4860:76:2",
										"text": " @notice Transfers tokens held by timelock to beneficiary."
									},
									"functionSelector": "005171f4",
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 565,
												"src": "5006:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5006:9:2"
										}
									],
									"name": "releaseClaimable",
									"nameLocation": "4950:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4975:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "4967:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:14:2"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "5033:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5032:9:2"
									},
									"scope": 953,
									"src": "4941:503:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 954,
							"src": "150:5296:2",
							"usedErrors": []
						}
					],
					"src": "39:5408:2"
				},
				"id": 2
			}
		}
	}
}