{
	"id": "37897951e03becfec9180d87738e0279",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.11;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Stakable {\r\n    using SafeMath for uint256;\r\n    /**\r\n     * @notice Constructor since this contract is not ment to be used without inheritance\r\n     * push once to stakeholders for it to work proplerly\r\n     */\r\n\r\n    uint256 private _stakingPenaltyRate;\r\n    uint256 private _airdropRate;\r\n\r\n    constructor() {\r\n        //Staking penalty and Airdrop in 0.1 times percentage\r\n        _stakingPenaltyRate = 15;\r\n        _airdropRate = 80;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * A stake struct is used to represent the way we store stakes,\r\n     * A Stake will contain the users address, the amount staked and a timestamp,\r\n     * Since which is when the stake was made\r\n     */\r\n    struct Stake {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 since;\r\n        // This claimable field is new and used to tell how big of a reward is currently available\r\n        uint256 claimable;\r\n        uint256 claimable_airdropRate;\r\n        uint256 rewardAPY;\r\n        uint256 releaseTime;\r\n        uint256 penalty;\r\n    }\r\n    /**\r\n     * @notice Stakeholder is a staker that has active stakes\r\n     */\r\n    struct Stakeholder {\r\n        Stake stake;\r\n        address user;\r\n        uint256 latestClaimDrop;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\r\n     */\r\n    struct StakingSummary {\r\n        uint256 total_amount;\r\n        uint256 penalty;\r\n        Stake stake;\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\r\n     */\r\n    mapping(address => Stakeholder) internal stakeholders;\r\n\r\n    /**\r\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\r\n     */\r\n    event Staked(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 timestamp,\r\n        uint256 releaseTime\r\n    );\r\n\r\n    event PenaltyChanged(uint256 amount);\r\n    event AirdropChanged(uint256 amount);\r\n\r\n    /**\r\n     * @notice\r\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\r\n     * StakeID\r\n     */\r\n    function _stake(\r\n        address _user,\r\n        uint256 _amount,\r\n        uint256 _stakePeriod,\r\n        uint256 _rewardRate\r\n    ) internal {\r\n        // Simple check so that user does not stake 0\r\n        require(_amount > 0, \"Cannot stake nothing\");\r\n        require(stakeholders[_user].stake.amount == 0, \"User is a staker\");\r\n\r\n        // block.timestamp = timestamp of the current block in seconds since the epoch\r\n        uint256 timestamp = block.timestamp;\r\n\r\n        // Use the index to push a new Stake\r\n        // push a newly created Stake with the current block timestamp.\r\n        stakeholders[_user].stake = Stake(\r\n            _user,\r\n            _amount,\r\n            timestamp,\r\n            0,\r\n            0,\r\n            _rewardRate,\r\n            (_stakePeriod + timestamp),\r\n            0\r\n        );\r\n        // Emit an event that the stake has occured\r\n        emit Staked(_user, _amount, timestamp, (_stakePeriod + timestamp));\r\n    }\r\n\r\n    function _changePenaltyFee(uint256 amount_) internal {\r\n        require(amount_ <= 30, \"Penalty fee cannot exceed 3 percent.\");\r\n        _stakingPenaltyRate = amount_;\r\n        emit PenaltyChanged(amount_);\r\n    }\r\n\r\n    function _changeAirdropPercentage(uint256 amount_) internal {\r\n        require(amount_ <= 200, \"Airdrop Percentage cannot exceed 20 percent.\");\r\n        _airdropRate = amount_;\r\n        emit AirdropChanged(amount_);\r\n    }\r\n\r\n    function penaltyFee() public view returns (uint256) {\r\n        return _stakingPenaltyRate;\r\n    }\r\n\r\n    function calculateStakingDuration(uint256 since_)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(since_ > 0, \"Error timestamp 0\");\r\n        return\r\n            SafeMath.div(\r\n                (block.timestamp - since_) * 1e24,\r\n                365 days,\r\n                \"Error cannot divide timestamp\"\r\n            );\r\n    }\r\n\r\n    function calculateStakeReward(Stake memory user_stake, uint256 _amount)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (user_stake.amount == 0) {\r\n            return 0;\r\n        }\r\n\r\n        user_stake.penalty = 0;\r\n\r\n        return\r\n            (_amount *\r\n                user_stake.rewardAPY *\r\n                calculateStakingDuration(user_stake.since)) / 1e26;\r\n    }\r\n\r\n    function calculateStakingWithPenalty(\r\n        Stake memory user_stake,\r\n        uint256 amount,\r\n        uint256 reward\r\n    ) internal view returns (uint256, uint256) {\r\n        if (amount == 0) {\r\n            return (0, 0);\r\n        }\r\n\r\n        uint256 amount_penalty = SafeMath.div(\r\n            SafeMath.mul(amount, _stakingPenaltyRate),\r\n            1000\r\n        );\r\n        uint256 reward_penalty = SafeMath.div(\r\n            SafeMath.mul(reward, _stakingPenaltyRate),\r\n            1000\r\n        );\r\n\r\n        user_stake.penalty = amount_penalty + reward_penalty;\r\n\r\n        return (\r\n            SafeMath.sub(amount, amount_penalty),\r\n            SafeMath.sub(reward, reward_penalty)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice\r\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\r\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\r\n     * Will return the amount to MINT onto the acount\r\n     * Will also calculateStakeReward and reset timer\r\n     */\r\n    function _withdrawStake(address _user, uint256 _amount)\r\n        internal\r\n        returns (uint256, uint256)\r\n    {\r\n        // Grab user_index which is the index to use to grab the Stake[]\r\n        Stake storage stake = stakeholders[_user].stake;\r\n\r\n        uint256 reward = calculateStakeReward(stake, _amount);\r\n\r\n        if (stake.amount == _amount) {\r\n            delete stakeholders[_user];\r\n\r\n            if (stake.releaseTime > block.timestamp) {\r\n                return calculateStakingWithPenalty(stake, _amount, reward);\r\n            }\r\n\r\n            return (_amount, reward);\r\n        } else {\r\n            stake.amount = stake.amount.sub(_amount);\r\n\r\n            if (stake.releaseTime > block.timestamp) {\r\n                return calculateStakingWithPenalty(stake, _amount, reward);\r\n            }\r\n\r\n            return (_amount, reward);\r\n        }\r\n    }\r\n\r\n    function hasStake(address _staker)\r\n        public\r\n        view\r\n        returns (StakingSummary memory)\r\n    {\r\n        StakingSummary memory summary = StakingSummary(\r\n            0,\r\n            0,\r\n            stakeholders[_staker].stake\r\n        );\r\n        require(summary.stake.amount != 0, \"No stake found\");\r\n\r\n        uint256 availableReward = calculateStakeReward(\r\n            summary.stake,\r\n            summary.stake.amount\r\n        );\r\n\r\n        summary.stake.claimable = availableReward;\r\n        summary.penalty = summary.stake.penalty;\r\n        summary.total_amount = summary.stake.amount;\r\n\r\n        return summary;\r\n    }\r\n\r\n    function _claimAirdrop(address _staker) internal returns (uint256) {\r\n        Stakeholder storage stakeholder = stakeholders[_staker];\r\n        uint256 monthAirdrop = (block.timestamp - stakeholder.latestClaimDrop)\r\n            .div(7 days);\r\n\r\n        require(monthAirdrop >= 1, \"Claimable once a month\");\r\n\r\n        require(stakeholder.stake.amount > 0, \"No stake found\");\r\n\r\n        uint256 airdrop = ((stakeholder.stake.amount * _airdropRate) / 100);\r\n        stakeholder.stake.claimable_airdropRate = airdrop;\r\n        stakeholder.latestClaimDrop = block.timestamp;\r\n\r\n        return airdrop;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADD SSTORE DUP15 CALL BYTE BASEFEE 0xAA CREATE GAS AND PUSH22 0xB79EEBEEBC9986DDA7DC9FFF4A6F2A14C0B05CA86473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e01558ef11a48aaf05a1675b79eebeebc9986dda7dc9fff4a6f2a14c0b05ca864736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable_airdropRate",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "penalty",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":128:7880  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":435:583  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakable.sol\":545:547  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":523:542  _stakingPenaltyRate */\n  0x00\n    /* \"contracts/Stakable.sol\":523:547  _stakingPenaltyRate = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":573:575  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":558:570  _airdropRate */\n  0x01\n    /* \"contracts/Stakable.sol\":558:575  _airdropRate = 80 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stakable.sol\":128:7880  contract Stakable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":128:7880  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3dc10ad4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe73e14bf\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":3796:3893  function penaltyFee() public view returns (uint256) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":6623:7265  function hasStake(address _staker)... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":3796:3893  function penaltyFee() public view returns (uint256) {... */\n    tag_6:\n        /* \"contracts/Stakable.sol\":3839:3846  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3866:3885  _stakingPenaltyRate */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":3859:3885  return _stakingPenaltyRate */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":3796:3893  function penaltyFee() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6623:7265  function hasStake(address _staker)... */\n    tag_12:\n        /* \"contracts/Stakable.sol\":6706:6727  StakingSummary memory */\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/Stakable.sol\":6745:6774  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":6777:6876  StakingSummary(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakable.sol\":6806:6807  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6777:6876  StakingSummary(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":6822:6823  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6777:6876  StakingSummary(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":6838:6850  stakeholders */\n      0x02\n        /* \"contracts/Stakable.sol\":6838:6859  stakeholders[_staker] */\n      0x00\n        /* \"contracts/Stakable.sol\":6851:6858  _staker */\n      dup7\n        /* \"contracts/Stakable.sol\":6838:6859  stakeholders[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stakable.sol\":6838:6865  stakeholders[_staker].stake */\n      0x00\n      add\n        /* \"contracts/Stakable.sol\":6777:6876  StakingSummary(... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":6745:6876  StakingSummary memory summary = StakingSummary(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":6919:6920  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":6895:6902  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":6895:6908  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6895:6915  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6895:6920  summary.stake.amount != 0 */\n      eq\n      iszero\n        /* \"contracts/Stakable.sol\":6887:6939  require(summary.stake.amount != 0, \"No stake found\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/Stakable.sol\":6952:6975  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakable.sol\":6978:7072  calculateStakeReward(... */\n      tag_22\n        /* \"contracts/Stakable.sol\":7013:7020  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":7013:7026  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7041:7048  summary */\n      dup4\n        /* \"contracts/Stakable.sol\":7041:7054  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7041:7061  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6978:6998  calculateStakeReward */\n      tag_23\n        /* \"contracts/Stakable.sol\":6978:7072  calculateStakeReward(... */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Stakable.sol\":6952:7072  uint256 availableReward = calculateStakeReward(... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":7111:7126  availableReward */\n      dup1\n        /* \"contracts/Stakable.sol\":7085:7092  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":7085:7098  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7085:7108  summary.stake.claimable */\n      0x60\n      add\n        /* \"contracts/Stakable.sol\":7085:7126  summary.stake.claimable = availableReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7155:7162  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":7155:7168  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7155:7176  summary.stake.penalty */\n      0xe0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7137:7144  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":7137:7152  summary.penalty */\n      0x20\n      add\n        /* \"contracts/Stakable.sol\":7137:7176  summary.penalty = summary.stake.penalty */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7210:7217  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":7210:7223  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7210:7230  summary.stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":7187:7194  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":7187:7207  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakable.sol\":7187:7230  summary.total_amount = summary.stake.amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7250:7257  summary */\n      dup2\n        /* \"contracts/Stakable.sol\":7243:7257  return summary */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":6623:7265  function hasStake(address _staker)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4269:4672  function calculateStakeReward(Stake memory user_stake, uint256 _amount)... */\n    tag_23:\n        /* \"contracts/Stakable.sol\":4391:4398  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":4441:4442  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":4420:4430  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":4420:4437  user_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":4420:4442  user_stake.amount == 0 */\n      eq\n        /* \"contracts/Stakable.sol\":4416:4479  if (user_stake.amount == 0) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"contracts/Stakable.sol\":4466:4467  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4459:4467  return 0 */\n      swap1\n      pop\n      jump(tag_24)\n        /* \"contracts/Stakable.sol\":4416:4479  if (user_stake.amount == 0) {... */\n    tag_25:\n        /* \"contracts/Stakable.sol\":4512:4513  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4491:4501  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":4491:4509  user_stake.penalty */\n      0xe0\n      add\n        /* \"contracts/Stakable.sol\":4491:4513  user_stake.penalty = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":4660:4664  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":4614:4656  calculateStakingDuration(user_stake.since) */\n      tag_26\n        /* \"contracts/Stakable.sol\":4639:4649  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":4639:4655  user_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":4614:4638  calculateStakingDuration */\n      tag_27\n        /* \"contracts/Stakable.sol\":4614:4656  calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_26:\n        /* \"contracts/Stakable.sol\":4574:4584  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":4574:4594  user_stake.rewardAPY */\n      0xa0\n      add\n      mload\n        /* \"contracts/Stakable.sol\":4547:4554  _amount */\n      dup5\n        /* \"contracts/Stakable.sol\":4547:4594  _amount *... */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"contracts/Stakable.sol\":4547:4656  _amount *... */\n      tag_30\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_30:\n        /* \"contracts/Stakable.sol\":4546:4664  (_amount *... */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"contracts/Stakable.sol\":4526:4664  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":4269:4672  function calculateStakeReward(Stake memory user_stake, uint256 _amount)... */\n    tag_24:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3901:4261  function calculateStakingDuration(uint256 since_)... */\n    tag_27:\n        /* \"contracts/Stakable.sol\":4001:4008  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":4043:4044  0 */\n      dup1\n        /* \"contracts/Stakable.sol\":4034:4040  since_ */\n      dup3\n        /* \"contracts/Stakable.sol\":4034:4044  since_ > 0 */\n      gt\n        /* \"contracts/Stakable.sol\":4026:4066  require(since_ > 0, \"Error timestamp 0\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/Stakable.sol\":4097:4253  SafeMath.div(... */\n      tag_37\n        /* \"contracts/Stakable.sol\":4157:4161  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":4147:4153  since_ */\n      dup4\n        /* \"contracts/Stakable.sol\":4129:4144  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":4129:4153  block.timestamp - since_ */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/Stakable.sol\":4128:4161  (block.timestamp - since_) * 1e24 */\n      tag_40\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"contracts/Stakable.sol\":4180:4188  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":4097:4253  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":4097:4109  SafeMath.div */\n      tag_41\n        /* \"contracts/Stakable.sol\":4097:4253  SafeMath.div(... */\n      jump\t// in\n    tag_37:\n        /* \"contracts/Stakable.sol\":4077:4253  return... */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":3901:4261  function calculateStakingDuration(uint256 since_)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5831:5832  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5828  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      swap1\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_46\n      jumpi\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n    tag_46:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5861:5873  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_17:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_50:\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_51:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_52:\n        /* \"#utility.yul\":177:201   */\n      tag_77\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_51\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_79\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_52\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_54:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_56:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_57:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_85\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_56\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_58:\n        /* \"#utility.yul\":1076:1100   */\n      tag_87\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_57\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_88:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_59:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_90\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_58\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_11:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_93\n      tag_54\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1352:1471   */\n    tag_92:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_94\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_59\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1719   */\n    tag_60:\n        /* \"#utility.yul\":1688:1712   */\n      tag_96\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_51\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1611:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1833   */\n    tag_61:\n        /* \"#utility.yul\":1802:1826   */\n      tag_98\n        /* \"#utility.yul\":1820:1825   */\n      dup2\n        /* \"#utility.yul\":1802:1826   */\n      tag_57\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1797:1800   */\n      dup3\n        /* \"#utility.yul\":1790:1827   */\n      mstore\n        /* \"#utility.yul\":1725:1833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1893:3470   */\n    tag_62:\n        /* \"#utility.yul\":2024:2030   */\n      0x0100\n        /* \"#utility.yul\":2019:2022   */\n      dup3\n        /* \"#utility.yul\":2015:2031   */\n      add\n        /* \"#utility.yul\":2113:2117   */\n      0x00\n        /* \"#utility.yul\":2106:2111   */\n      dup3\n        /* \"#utility.yul\":2102:2118   */\n      add\n        /* \"#utility.yul\":2096:2119   */\n      mload\n        /* \"#utility.yul\":2132:2195   */\n      tag_100\n        /* \"#utility.yul\":2189:2193   */\n      0x00\n        /* \"#utility.yul\":2184:2187   */\n      dup6\n        /* \"#utility.yul\":2180:2194   */\n      add\n        /* \"#utility.yul\":2166:2178   */\n      dup3\n        /* \"#utility.yul\":2132:2195   */\n      tag_61\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2041:2205   */\n      pop\n        /* \"#utility.yul\":2289:2293   */\n      0x20\n        /* \"#utility.yul\":2282:2287   */\n      dup3\n        /* \"#utility.yul\":2278:2294   */\n      add\n        /* \"#utility.yul\":2272:2295   */\n      mload\n        /* \"#utility.yul\":2308:2371   */\n      tag_101\n        /* \"#utility.yul\":2365:2369   */\n      0x20\n        /* \"#utility.yul\":2360:2363   */\n      dup6\n        /* \"#utility.yul\":2356:2370   */\n      add\n        /* \"#utility.yul\":2342:2354   */\n      dup3\n        /* \"#utility.yul\":2308:2371   */\n      tag_60\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2215:2381   */\n      pop\n        /* \"#utility.yul\":2464:2468   */\n      0x40\n        /* \"#utility.yul\":2457:2462   */\n      dup3\n        /* \"#utility.yul\":2453:2469   */\n      add\n        /* \"#utility.yul\":2447:2470   */\n      mload\n        /* \"#utility.yul\":2483:2546   */\n      tag_102\n        /* \"#utility.yul\":2540:2544   */\n      0x40\n        /* \"#utility.yul\":2535:2538   */\n      dup6\n        /* \"#utility.yul\":2531:2545   */\n      add\n        /* \"#utility.yul\":2517:2529   */\n      dup3\n        /* \"#utility.yul\":2483:2546   */\n      tag_60\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2391:2556   */\n      pop\n        /* \"#utility.yul\":2643:2647   */\n      0x60\n        /* \"#utility.yul\":2636:2641   */\n      dup3\n        /* \"#utility.yul\":2632:2648   */\n      add\n        /* \"#utility.yul\":2626:2649   */\n      mload\n        /* \"#utility.yul\":2662:2725   */\n      tag_103\n        /* \"#utility.yul\":2719:2723   */\n      0x60\n        /* \"#utility.yul\":2714:2717   */\n      dup6\n        /* \"#utility.yul\":2710:2724   */\n      add\n        /* \"#utility.yul\":2696:2708   */\n      dup3\n        /* \"#utility.yul\":2662:2725   */\n      tag_60\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2566:2735   */\n      pop\n        /* \"#utility.yul\":2834:2838   */\n      0x80\n        /* \"#utility.yul\":2827:2832   */\n      dup3\n        /* \"#utility.yul\":2823:2839   */\n      add\n        /* \"#utility.yul\":2817:2840   */\n      mload\n        /* \"#utility.yul\":2853:2916   */\n      tag_104\n        /* \"#utility.yul\":2910:2914   */\n      0x80\n        /* \"#utility.yul\":2905:2908   */\n      dup6\n        /* \"#utility.yul\":2901:2915   */\n      add\n        /* \"#utility.yul\":2887:2899   */\n      dup3\n        /* \"#utility.yul\":2853:2916   */\n      tag_60\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2745:2926   */\n      pop\n        /* \"#utility.yul\":3013:3017   */\n      0xa0\n        /* \"#utility.yul\":3006:3011   */\n      dup3\n        /* \"#utility.yul\":3002:3018   */\n      add\n        /* \"#utility.yul\":2996:3019   */\n      mload\n        /* \"#utility.yul\":3032:3095   */\n      tag_105\n        /* \"#utility.yul\":3089:3093   */\n      0xa0\n        /* \"#utility.yul\":3084:3087   */\n      dup6\n        /* \"#utility.yul\":3080:3094   */\n      add\n        /* \"#utility.yul\":3066:3078   */\n      dup3\n        /* \"#utility.yul\":3032:3095   */\n      tag_60\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2936:3105   */\n      pop\n        /* \"#utility.yul\":3194:3198   */\n      0xc0\n        /* \"#utility.yul\":3187:3192   */\n      dup3\n        /* \"#utility.yul\":3183:3199   */\n      add\n        /* \"#utility.yul\":3177:3200   */\n      mload\n        /* \"#utility.yul\":3213:3276   */\n      tag_106\n        /* \"#utility.yul\":3270:3274   */\n      0xc0\n        /* \"#utility.yul\":3265:3268   */\n      dup6\n        /* \"#utility.yul\":3261:3275   */\n      add\n        /* \"#utility.yul\":3247:3259   */\n      dup3\n        /* \"#utility.yul\":3213:3276   */\n      tag_60\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3115:3286   */\n      pop\n        /* \"#utility.yul\":3371:3375   */\n      0xe0\n        /* \"#utility.yul\":3364:3369   */\n      dup3\n        /* \"#utility.yul\":3360:3376   */\n      add\n        /* \"#utility.yul\":3354:3377   */\n      mload\n        /* \"#utility.yul\":3390:3453   */\n      tag_107\n        /* \"#utility.yul\":3447:3451   */\n      0xe0\n        /* \"#utility.yul\":3442:3445   */\n      dup6\n        /* \"#utility.yul\":3438:3452   */\n      add\n        /* \"#utility.yul\":3424:3436   */\n      dup3\n        /* \"#utility.yul\":3390:3453   */\n      tag_60\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3296:3463   */\n      pop\n        /* \"#utility.yul\":1993:3470   */\n      pop\n        /* \"#utility.yul\":1893:3470   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:4299   */\n    tag_63:\n        /* \"#utility.yul\":3707:3713   */\n      0x0140\n        /* \"#utility.yul\":3702:3705   */\n      dup3\n        /* \"#utility.yul\":3698:3714   */\n      add\n        /* \"#utility.yul\":3804:3808   */\n      0x00\n        /* \"#utility.yul\":3797:3802   */\n      dup3\n        /* \"#utility.yul\":3793:3809   */\n      add\n        /* \"#utility.yul\":3787:3810   */\n      mload\n        /* \"#utility.yul\":3823:3886   */\n      tag_109\n        /* \"#utility.yul\":3880:3884   */\n      0x00\n        /* \"#utility.yul\":3875:3878   */\n      dup6\n        /* \"#utility.yul\":3871:3885   */\n      add\n        /* \"#utility.yul\":3857:3869   */\n      dup3\n        /* \"#utility.yul\":3823:3886   */\n      tag_60\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3724:3896   */\n      pop\n        /* \"#utility.yul\":3981:3985   */\n      0x20\n        /* \"#utility.yul\":3974:3979   */\n      dup3\n        /* \"#utility.yul\":3970:3986   */\n      add\n        /* \"#utility.yul\":3964:3987   */\n      mload\n        /* \"#utility.yul\":4000:4063   */\n      tag_110\n        /* \"#utility.yul\":4057:4061   */\n      0x20\n        /* \"#utility.yul\":4052:4055   */\n      dup6\n        /* \"#utility.yul\":4048:4062   */\n      add\n        /* \"#utility.yul\":4034:4046   */\n      dup3\n        /* \"#utility.yul\":4000:4063   */\n      tag_60\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3906:4073   */\n      pop\n        /* \"#utility.yul\":4156:4160   */\n      0x40\n        /* \"#utility.yul\":4149:4154   */\n      dup3\n        /* \"#utility.yul\":4145:4161   */\n      add\n        /* \"#utility.yul\":4139:4162   */\n      mload\n        /* \"#utility.yul\":4175:4282   */\n      tag_111\n        /* \"#utility.yul\":4276:4280   */\n      0x40\n        /* \"#utility.yul\":4271:4274   */\n      dup6\n        /* \"#utility.yul\":4267:4281   */\n      add\n        /* \"#utility.yul\":4253:4265   */\n      dup3\n        /* \"#utility.yul\":4175:4282   */\n      tag_62\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4083:4292   */\n      pop\n        /* \"#utility.yul\":3676:4299   */\n      pop\n        /* \"#utility.yul\":3548:4299   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4305:4652   */\n    tag_14:\n        /* \"#utility.yul\":4460:4464   */\n      0x00\n        /* \"#utility.yul\":4498:4501   */\n      0x0140\n        /* \"#utility.yul\":4487:4496   */\n      dup3\n        /* \"#utility.yul\":4483:4502   */\n      add\n        /* \"#utility.yul\":4475:4502   */\n      swap1\n      pop\n        /* \"#utility.yul\":4512:4645   */\n      tag_113\n        /* \"#utility.yul\":4642:4643   */\n      0x00\n        /* \"#utility.yul\":4631:4640   */\n      dup4\n        /* \"#utility.yul\":4627:4644   */\n      add\n        /* \"#utility.yul\":4618:4624   */\n      dup5\n        /* \"#utility.yul\":4512:4645   */\n      tag_63\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4305:4652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:4827   */\n    tag_64:\n        /* \"#utility.yul\":4742:4753   */\n      0x00\n        /* \"#utility.yul\":4776:4782   */\n      dup3\n        /* \"#utility.yul\":4771:4774   */\n      dup3\n        /* \"#utility.yul\":4764:4783   */\n      mstore\n        /* \"#utility.yul\":4816:4820   */\n      0x20\n        /* \"#utility.yul\":4811:4814   */\n      dup3\n        /* \"#utility.yul\":4807:4821   */\n      add\n        /* \"#utility.yul\":4792:4821   */\n      swap1\n      pop\n        /* \"#utility.yul\":4658:4827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4833:4997   */\n    tag_65:\n        /* \"#utility.yul\":4973:4989   */\n      0x4e6f207374616b6520666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":4969:4970   */\n      0x00\n        /* \"#utility.yul\":4961:4967   */\n      dup3\n        /* \"#utility.yul\":4957:4971   */\n      add\n        /* \"#utility.yul\":4950:4990   */\n      mstore\n        /* \"#utility.yul\":4833:4997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5003:5369   */\n    tag_66:\n        /* \"#utility.yul\":5145:5148   */\n      0x00\n        /* \"#utility.yul\":5166:5233   */\n      tag_117\n        /* \"#utility.yul\":5230:5232   */\n      0x0e\n        /* \"#utility.yul\":5225:5228   */\n      dup4\n        /* \"#utility.yul\":5166:5233   */\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":5159:5233   */\n      swap2\n      pop\n        /* \"#utility.yul\":5242:5335   */\n      tag_118\n        /* \"#utility.yul\":5331:5334   */\n      dup3\n        /* \"#utility.yul\":5242:5335   */\n      tag_65\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5360:5362   */\n      0x20\n        /* \"#utility.yul\":5355:5358   */\n      dup3\n        /* \"#utility.yul\":5351:5363   */\n      add\n        /* \"#utility.yul\":5344:5363   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5375:5794   */\n    tag_21:\n        /* \"#utility.yul\":5541:5545   */\n      0x00\n        /* \"#utility.yul\":5579:5581   */\n      0x20\n        /* \"#utility.yul\":5568:5577   */\n      dup3\n        /* \"#utility.yul\":5564:5582   */\n      add\n        /* \"#utility.yul\":5556:5582   */\n      swap1\n      pop\n        /* \"#utility.yul\":5628:5637   */\n      dup2\n        /* \"#utility.yul\":5622:5626   */\n      dup2\n        /* \"#utility.yul\":5618:5638   */\n      sub\n        /* \"#utility.yul\":5614:5615   */\n      0x00\n        /* \"#utility.yul\":5603:5612   */\n      dup4\n        /* \"#utility.yul\":5599:5616   */\n      add\n        /* \"#utility.yul\":5592:5639   */\n      mstore\n        /* \"#utility.yul\":5656:5787   */\n      tag_120\n        /* \"#utility.yul\":5782:5786   */\n      dup2\n        /* \"#utility.yul\":5656:5787   */\n      tag_66\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":5648:5787   */\n      swap1\n      pop\n        /* \"#utility.yul\":5375:5794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5800:5980   */\n    tag_67:\n        /* \"#utility.yul\":5848:5925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5845:5846   */\n      0x00\n        /* \"#utility.yul\":5838:5926   */\n      mstore\n        /* \"#utility.yul\":5945:5949   */\n      0x11\n        /* \"#utility.yul\":5942:5943   */\n      0x04\n        /* \"#utility.yul\":5935:5950   */\n      mstore\n        /* \"#utility.yul\":5969:5973   */\n      0x24\n        /* \"#utility.yul\":5966:5967   */\n      0x00\n        /* \"#utility.yul\":5959:5974   */\n      revert\n        /* \"#utility.yul\":5986:6334   */\n    tag_29:\n        /* \"#utility.yul\":6026:6033   */\n      0x00\n        /* \"#utility.yul\":6049:6069   */\n      tag_123\n        /* \"#utility.yul\":6067:6068   */\n      dup3\n        /* \"#utility.yul\":6049:6069   */\n      tag_51\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":6044:6069   */\n      swap2\n      pop\n        /* \"#utility.yul\":6083:6103   */\n      tag_124\n        /* \"#utility.yul\":6101:6102   */\n      dup4\n        /* \"#utility.yul\":6083:6103   */\n      tag_51\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":6078:6103   */\n      swap3\n      pop\n        /* \"#utility.yul\":6271:6272   */\n      dup2\n        /* \"#utility.yul\":6203:6269   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6199:6273   */\n      div\n        /* \"#utility.yul\":6196:6197   */\n      dup4\n        /* \"#utility.yul\":6193:6274   */\n      gt\n        /* \"#utility.yul\":6188:6189   */\n      dup3\n        /* \"#utility.yul\":6181:6190   */\n      iszero\n        /* \"#utility.yul\":6174:6191   */\n      iszero\n        /* \"#utility.yul\":6170:6275   */\n      and\n        /* \"#utility.yul\":6167:6298   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":6278:6296   */\n      tag_126\n      tag_67\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":6167:6298   */\n    tag_125:\n        /* \"#utility.yul\":6326:6327   */\n      dup3\n        /* \"#utility.yul\":6323:6324   */\n      dup3\n        /* \"#utility.yul\":6319:6328   */\n      mul\n        /* \"#utility.yul\":6308:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":5986:6334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6340:6520   */\n    tag_48:\n        /* \"#utility.yul\":6388:6465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6385:6386   */\n      0x00\n        /* \"#utility.yul\":6378:6466   */\n      mstore\n        /* \"#utility.yul\":6485:6489   */\n      0x12\n        /* \"#utility.yul\":6482:6483   */\n      0x04\n        /* \"#utility.yul\":6475:6490   */\n      mstore\n        /* \"#utility.yul\":6509:6513   */\n      0x24\n        /* \"#utility.yul\":6506:6507   */\n      0x00\n        /* \"#utility.yul\":6499:6514   */\n      revert\n        /* \"#utility.yul\":6526:6711   */\n    tag_32:\n        /* \"#utility.yul\":6566:6567   */\n      0x00\n        /* \"#utility.yul\":6583:6603   */\n      tag_129\n        /* \"#utility.yul\":6601:6602   */\n      dup3\n        /* \"#utility.yul\":6583:6603   */\n      tag_51\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":6578:6603   */\n      swap2\n      pop\n        /* \"#utility.yul\":6617:6637   */\n      tag_130\n        /* \"#utility.yul\":6635:6636   */\n      dup4\n        /* \"#utility.yul\":6617:6637   */\n      tag_51\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6612:6637   */\n      swap3\n      pop\n        /* \"#utility.yul\":6656:6657   */\n      dup3\n        /* \"#utility.yul\":6646:6681   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":6661:6679   */\n      tag_132\n      tag_48\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6646:6681   */\n    tag_131:\n        /* \"#utility.yul\":6703:6704   */\n      dup3\n        /* \"#utility.yul\":6700:6701   */\n      dup3\n        /* \"#utility.yul\":6696:6705   */\n      div\n        /* \"#utility.yul\":6691:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6526:6711   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:6884   */\n    tag_68:\n        /* \"#utility.yul\":6857:6876   */\n      0x4572726f722074696d657374616d702030000000000000000000000000000000\n        /* \"#utility.yul\":6853:6854   */\n      0x00\n        /* \"#utility.yul\":6845:6851   */\n      dup3\n        /* \"#utility.yul\":6841:6855   */\n      add\n        /* \"#utility.yul\":6834:6877   */\n      mstore\n        /* \"#utility.yul\":6717:6884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6890:7256   */\n    tag_69:\n        /* \"#utility.yul\":7032:7035   */\n      0x00\n        /* \"#utility.yul\":7053:7120   */\n      tag_135\n        /* \"#utility.yul\":7117:7119   */\n      0x11\n        /* \"#utility.yul\":7112:7115   */\n      dup4\n        /* \"#utility.yul\":7053:7120   */\n      tag_64\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":7046:7120   */\n      swap2\n      pop\n        /* \"#utility.yul\":7129:7222   */\n      tag_136\n        /* \"#utility.yul\":7218:7221   */\n      dup3\n        /* \"#utility.yul\":7129:7222   */\n      tag_68\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":7247:7249   */\n      0x20\n        /* \"#utility.yul\":7242:7245   */\n      dup3\n        /* \"#utility.yul\":7238:7250   */\n      add\n        /* \"#utility.yul\":7231:7250   */\n      swap1\n      pop\n        /* \"#utility.yul\":6890:7256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7262:7681   */\n    tag_36:\n        /* \"#utility.yul\":7428:7432   */\n      0x00\n        /* \"#utility.yul\":7466:7468   */\n      0x20\n        /* \"#utility.yul\":7455:7464   */\n      dup3\n        /* \"#utility.yul\":7451:7469   */\n      add\n        /* \"#utility.yul\":7443:7469   */\n      swap1\n      pop\n        /* \"#utility.yul\":7515:7524   */\n      dup2\n        /* \"#utility.yul\":7509:7513   */\n      dup2\n        /* \"#utility.yul\":7505:7525   */\n      sub\n        /* \"#utility.yul\":7501:7502   */\n      0x00\n        /* \"#utility.yul\":7490:7499   */\n      dup4\n        /* \"#utility.yul\":7486:7503   */\n      add\n        /* \"#utility.yul\":7479:7526   */\n      mstore\n        /* \"#utility.yul\":7543:7674   */\n      tag_138\n        /* \"#utility.yul\":7669:7673   */\n      dup2\n        /* \"#utility.yul\":7543:7674   */\n      tag_69\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":7535:7674   */\n      swap1\n      pop\n        /* \"#utility.yul\":7262:7681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7687:7878   */\n    tag_39:\n        /* \"#utility.yul\":7727:7731   */\n      0x00\n        /* \"#utility.yul\":7747:7767   */\n      tag_140\n        /* \"#utility.yul\":7765:7766   */\n      dup3\n        /* \"#utility.yul\":7747:7767   */\n      tag_51\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":7742:7767   */\n      swap2\n      pop\n        /* \"#utility.yul\":7781:7801   */\n      tag_141\n        /* \"#utility.yul\":7799:7800   */\n      dup4\n        /* \"#utility.yul\":7781:7801   */\n      tag_51\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":7776:7801   */\n      swap3\n      pop\n        /* \"#utility.yul\":7820:7821   */\n      dup3\n        /* \"#utility.yul\":7817:7818   */\n      dup3\n        /* \"#utility.yul\":7814:7822   */\n      lt\n        /* \"#utility.yul\":7811:7845   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":7825:7843   */\n      tag_143\n      tag_67\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":7811:7845   */\n    tag_142:\n        /* \"#utility.yul\":7870:7871   */\n      dup3\n        /* \"#utility.yul\":7867:7868   */\n      dup3\n        /* \"#utility.yul\":7863:7872   */\n      sub\n        /* \"#utility.yul\":7855:7872   */\n      swap1\n      pop\n        /* \"#utility.yul\":7687:7878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7884:7983   */\n    tag_70:\n        /* \"#utility.yul\":7936:7942   */\n      0x00\n        /* \"#utility.yul\":7970:7975   */\n      dup2\n        /* \"#utility.yul\":7964:7976   */\n      mload\n        /* \"#utility.yul\":7954:7976   */\n      swap1\n      pop\n        /* \"#utility.yul\":7884:7983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7989:8296   */\n    tag_71:\n        /* \"#utility.yul\":8057:8058   */\n      0x00\n        /* \"#utility.yul\":8067:8180   */\n    tag_146:\n        /* \"#utility.yul\":8081:8087   */\n      dup4\n        /* \"#utility.yul\":8078:8079   */\n      dup2\n        /* \"#utility.yul\":8075:8088   */\n      lt\n        /* \"#utility.yul\":8067:8180   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":8166:8167   */\n      dup1\n        /* \"#utility.yul\":8161:8164   */\n      dup3\n        /* \"#utility.yul\":8157:8168   */\n      add\n        /* \"#utility.yul\":8151:8169   */\n      mload\n        /* \"#utility.yul\":8147:8148   */\n      dup2\n        /* \"#utility.yul\":8142:8145   */\n      dup5\n        /* \"#utility.yul\":8138:8149   */\n      add\n        /* \"#utility.yul\":8131:8170   */\n      mstore\n        /* \"#utility.yul\":8103:8105   */\n      0x20\n        /* \"#utility.yul\":8100:8101   */\n      dup2\n        /* \"#utility.yul\":8096:8106   */\n      add\n        /* \"#utility.yul\":8091:8106   */\n      swap1\n      pop\n        /* \"#utility.yul\":8067:8180   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":8198:8204   */\n      dup4\n        /* \"#utility.yul\":8195:8196   */\n      dup2\n        /* \"#utility.yul\":8192:8205   */\n      gt\n        /* \"#utility.yul\":8189:8290   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":8278:8279   */\n      0x00\n        /* \"#utility.yul\":8269:8275   */\n      dup5\n        /* \"#utility.yul\":8264:8267   */\n      dup5\n        /* \"#utility.yul\":8260:8276   */\n      add\n        /* \"#utility.yul\":8253:8280   */\n      mstore\n        /* \"#utility.yul\":8189:8290   */\n    tag_149:\n        /* \"#utility.yul\":8038:8296   */\n      pop\n        /* \"#utility.yul\":7989:8296   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8302:8404   */\n    tag_72:\n        /* \"#utility.yul\":8343:8349   */\n      0x00\n        /* \"#utility.yul\":8394:8396   */\n      0x1f\n        /* \"#utility.yul\":8390:8397   */\n      not\n        /* \"#utility.yul\":8385:8387   */\n      0x1f\n        /* \"#utility.yul\":8378:8383   */\n      dup4\n        /* \"#utility.yul\":8374:8388   */\n      add\n        /* \"#utility.yul\":8370:8398   */\n      and\n        /* \"#utility.yul\":8360:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8302:8404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8410:8774   */\n    tag_73:\n        /* \"#utility.yul\":8498:8501   */\n      0x00\n        /* \"#utility.yul\":8526:8565   */\n      tag_152\n        /* \"#utility.yul\":8559:8564   */\n      dup3\n        /* \"#utility.yul\":8526:8565   */\n      tag_70\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":8581:8652   */\n      tag_153\n        /* \"#utility.yul\":8645:8651   */\n      dup2\n        /* \"#utility.yul\":8640:8643   */\n      dup6\n        /* \"#utility.yul\":8581:8652   */\n      tag_64\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":8574:8652   */\n      swap4\n      pop\n        /* \"#utility.yul\":8661:8713   */\n      tag_154\n        /* \"#utility.yul\":8706:8712   */\n      dup2\n        /* \"#utility.yul\":8701:8704   */\n      dup6\n        /* \"#utility.yul\":8694:8698   */\n      0x20\n        /* \"#utility.yul\":8687:8692   */\n      dup7\n        /* \"#utility.yul\":8683:8699   */\n      add\n        /* \"#utility.yul\":8661:8713   */\n      tag_71\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":8738:8767   */\n      tag_155\n        /* \"#utility.yul\":8760:8766   */\n      dup2\n        /* \"#utility.yul\":8738:8767   */\n      tag_72\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":8733:8736   */\n      dup5\n        /* \"#utility.yul\":8729:8768   */\n      add\n        /* \"#utility.yul\":8722:8768   */\n      swap2\n      pop\n        /* \"#utility.yul\":8502:8774   */\n      pop\n        /* \"#utility.yul\":8410:8774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8780:9093   */\n    tag_45:\n        /* \"#utility.yul\":8893:8897   */\n      0x00\n        /* \"#utility.yul\":8931:8933   */\n      0x20\n        /* \"#utility.yul\":8920:8929   */\n      dup3\n        /* \"#utility.yul\":8916:8934   */\n      add\n        /* \"#utility.yul\":8908:8934   */\n      swap1\n      pop\n        /* \"#utility.yul\":8980:8989   */\n      dup2\n        /* \"#utility.yul\":8974:8978   */\n      dup2\n        /* \"#utility.yul\":8970:8990   */\n      sub\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8955:8964   */\n      dup4\n        /* \"#utility.yul\":8951:8968   */\n      add\n        /* \"#utility.yul\":8944:8991   */\n      mstore\n        /* \"#utility.yul\":9008:9086   */\n      tag_157\n        /* \"#utility.yul\":9081:9085   */\n      dup2\n        /* \"#utility.yul\":9072:9078   */\n      dup5\n        /* \"#utility.yul\":9008:9086   */\n      tag_73\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":9000:9086   */\n      swap1\n      pop\n        /* \"#utility.yul\":8780:9093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ba67b994956c4a859a19022f0bb2ff6bdd6187b5bd05d49e1fb8bb57891a9a9664736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600f600081905550605060018190555061090a806100306000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633dc10ad41461003b578063e73e14bf14610059575b600080fd5b610043610089565b604051610050919061045a565b60405180910390f35b610073600480360381019061006e91906104d8565b610092565b6040516100809190610608565b60405180910390f35b60008054905090565b61009a6103bf565b600060405180606001604052806000815260200160008152602001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250508152509050600081604001516020015114156101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e790610681565b60405180910390fd5b60006102088260400151836040015160200151610246565b90508082604001516060018181525050816040015160e001518260200181815250508160400151602001518260000181815250508192505050919050565b6000808360200151141561025d57600090506102a8565b60008360e00181815250506a52b7d2dcc80cd2e400000061028184604001516102ae565b8460a001518461029191906106d0565b61029b91906106d0565b6102a59190610759565b90505b92915050565b60008082116102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e9906107d6565b60405180910390fd5b61035669d3c21bcecceda1000000834261030c91906107f6565b61031691906106d0565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d7000000081525061035d565b9050919050565b600080831182906103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b91906108b2565b60405180910390fd5b508284816103b5576103b461072a565b5b0490509392505050565b604051806060016040528060008152602001600081526020016103e06103e6565b81525090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b61045481610441565b82525050565b600060208201905061046f600083018461044b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a58261047a565b9050919050565b6104b58161049a565b81146104c057600080fd5b50565b6000813590506104d2816104ac565b92915050565b6000602082840312156104ee576104ed610475565b5b60006104fc848285016104c3565b91505092915050565b61050e81610441565b82525050565b61051d8161049a565b82525050565b6101008201600082015161053a6000850182610514565b50602082015161054d6020850182610505565b5060408201516105606040850182610505565b5060608201516105736060850182610505565b5060808201516105866080850182610505565b5060a082015161059960a0850182610505565b5060c08201516105ac60c0850182610505565b5060e08201516105bf60e0850182610505565b50505050565b610140820160008201516105dc6000850182610505565b5060208201516105ef6020850182610505565b5060408201516106026040850182610523565b50505050565b60006101408201905061061e60008301846105c5565b92915050565b600082825260208201905092915050565b7f4e6f207374616b6520666f756e64000000000000000000000000000000000000600082015250565b600061066b600e83610624565b915061067682610635565b602082019050919050565b6000602082019050818103600083015261069a8161065e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106db82610441565b91506106e683610441565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561071f5761071e6106a1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061076482610441565b915061076f83610441565b92508261077f5761077e61072a565b5b828204905092915050565b7f4572726f722074696d657374616d702030000000000000000000000000000000600082015250565b60006107c0601183610624565b91506107cb8261078a565b602082019050919050565b600060208201905081810360008301526107ef816107b3565b9050919050565b600061080182610441565b915061080c83610441565b92508282101561081f5761081e6106a1565b5b828203905092915050565b600081519050919050565b60005b83811015610853578082015181840152602081019050610838565b83811115610862576000848401525b50505050565b6000601f19601f8301169050919050565b60006108848261082a565b61088e8185610624565b935061089e818560208601610835565b6108a781610868565b840191505092915050565b600060208201905081810360008301526108cc8184610879565b90509291505056fea2646970667358221220ba67b994956c4a859a19022f0bb2ff6bdd6187b5bd05d49e1fb8bb57891a9a9664736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x50 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x90A DUP1 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC10AD4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x208 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x246 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0xE0 ADD MLOAD DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x281 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x2AE JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD MLOAD DUP5 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x759 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x356 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x72A JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E0 PUSH2 0x3E6 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP3 PUSH2 0x47A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B5 DUP2 PUSH2 0x49A JUMP JUMPDEST DUP2 EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D2 DUP2 PUSH2 0x4AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0x475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP5 DUP3 DUP6 ADD PUSH2 0x4C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50E DUP2 PUSH2 0x441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51D DUP2 PUSH2 0x49A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x53A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x514 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x54D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x560 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x573 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x586 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x599 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x5AC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x5BF PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5DC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x5EF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x602 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x523 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x61E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH1 0xE DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP2 POP PUSH2 0x676 DUP3 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x69A DUP2 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP3 PUSH2 0x441 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E6 DUP4 PUSH2 0x441 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x764 DUP3 PUSH2 0x441 JUMP JUMPDEST SWAP2 POP PUSH2 0x76F DUP4 PUSH2 0x441 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0x72A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C0 PUSH1 0x11 DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP2 POP PUSH2 0x7CB DUP3 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7EF DUP2 PUSH2 0x7B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 DUP3 PUSH2 0x441 JUMP JUMPDEST SWAP2 POP PUSH2 0x80C DUP4 PUSH2 0x441 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x853 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x838 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x884 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x88E DUP2 DUP6 PUSH2 0x624 JUMP JUMPDEST SWAP4 POP PUSH2 0x89E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x835 JUMP JUMPDEST PUSH2 0x8A7 DUP2 PUSH2 0x868 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CC DUP2 DUP5 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH8 0xB994956C4A859A19 MUL 0x2F SIGNEXTEND 0xB2 SELFDESTRUCT PUSH12 0xDD6187B5BD05D49E1FB8BB57 DUP10 BYTE SWAP11 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "128:7752:1:-:0;;;435:148;;;;;;;;;;545:2;523:19;:24;;;;573:2;558:12;:17;;;;128:7752;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateStakeReward_573": {
									"entryPoint": 582,
									"id": 573,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateStakingDuration_535": {
									"entryPoint": 686,
									"id": 535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 861,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_791": {
									"entryPoint": 146,
									"id": 791,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@penaltyFee_507": {
									"entryPoint": 137,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$351_memory_ptr_to_t_struct$_Stake_$351_memory_ptr": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$367_memory_ptr_to_t_struct$_StakingSummary_$367_memory_ptr_fromStack": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$367_memory_ptr__to_t_struct$_StakingSummary_$367_memory_ptr__fromStack_reversed": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9096:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:2",
														"type": ""
													}
												],
												"src": "769:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:2",
														"type": ""
													}
												],
												"src": "901:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:2"
															},
															"nodeType": "YulIf",
															"src": "1056:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:2",
														"type": ""
													}
												],
												"src": "1003:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:2",
														"type": ""
													}
												],
												"src": "1131:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:2"
															},
															"nodeType": "YulIf",
															"src": "1352:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:2",
														"type": ""
													}
												],
												"src": "1276:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:2",
														"type": ""
													}
												],
												"src": "1611:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1797:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1820:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1802:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1768:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1775:3:2",
														"type": ""
													}
												],
												"src": "1725:108:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:1477:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2003:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:6:2",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:16:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2007:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2041:164:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2076:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2106:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2113:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2102:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2096:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2080:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2166:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2184:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2189:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2180:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2180:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2132:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2132:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2132:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2215:166:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2252:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2282:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2289:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2278:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2278:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2272:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2256:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2342:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2360:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2365:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2356:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2356:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2308:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2308:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2308:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2391:165:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2427:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2457:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2464:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2453:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2453:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2447:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2431:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2517:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2535:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2540:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2531:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2531:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2483:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2483:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2566:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2606:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2636:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2643:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2632:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2632:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2626:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2610:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2696:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2714:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2719:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2710:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2710:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2662:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2662:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2745:181:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2797:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2827:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2834:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2823:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2823:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2817:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2817:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2801:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2887:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2905:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2910:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2901:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2901:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2853:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2853:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:169:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2976:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3006:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3013:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3002:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3002:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2996:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2996:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2980:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3066:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3084:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3089:4:2",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3080:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3080:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3032:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3032:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3032:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3115:171:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3157:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3187:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3194:4:2",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3183:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3183:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3177:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3177:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3161:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3247:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3265:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3270:4:2",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3261:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3213:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3213:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3296:167:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3334:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3364:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3371:4:2",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3360:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3360:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3354:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3354:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3338:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3424:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3442:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3447:4:2",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3438:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3438:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3390:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3390:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3390:63:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$351_memory_ptr_to_t_struct$_Stake_$351_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1980:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1987:3:2",
														"type": ""
													}
												],
												"src": "1893:1577:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:623:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3686:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3702:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:6:2",
																		"type": "",
																		"value": "0x0140"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:16:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "3690:4:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3724:172:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3767:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3797:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3804:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3793:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3793:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3787:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3771:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3857:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3875:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3880:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3871:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3871:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3823:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3823:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3906:167:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3944:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3974:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3981:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3970:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3964:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3964:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3948:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4034:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4052:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4057:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4048:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4048:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4000:33:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:63:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4000:63:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4083:209:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4119:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4149:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4156:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4145:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4145:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4139:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4123:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4253:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4271:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4276:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4267:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4267:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Stake_$351_memory_ptr_to_t_struct$_Stake_$351_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4175:77:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:107:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4175:107:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$367_memory_ptr_to_t_struct$_StakingSummary_$367_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3663:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3670:3:2",
														"type": ""
													}
												],
												"src": "3548:751:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4465:187:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4475:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4487:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:3:2",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4475:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4618:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4631:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4642:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4627:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4627:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$367_memory_ptr_to_t_struct$_StakingSummary_$367_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4512:105:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:133:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4512:133:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$367_memory_ptr__to_t_struct$_StakingSummary_$367_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4437:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4449:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4460:4:2",
														"type": ""
													}
												],
												"src": "4305:347:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4754:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4771:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4776:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4764:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4792:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4811:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4816:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4807:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4792:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4726:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4731:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4742:11:2",
														"type": ""
													}
												],
												"src": "4658:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4939:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4961:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4969:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4957:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4957:14:2"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4973:16:2",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:40:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4950:40:2"
														}
													]
												},
												"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4931:6:2",
														"type": ""
													}
												],
												"src": "4833:164:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5149:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5159:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5225:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:2",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5166:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5159:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5331:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																	"nodeType": "YulIdentifier",
																	"src": "5242:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5242:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5344:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5355:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5344:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5137:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5145:3:2",
														"type": ""
													}
												],
												"src": "5003:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5546:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5556:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5568:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5579:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5556:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5603:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5614:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5599:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5599:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5622:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5628:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5618:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5618:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5592:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5648:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5782:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5656:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5526:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5541:4:2",
														"type": ""
													}
												],
												"src": "5375:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5828:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5848:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5945:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5935:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5935:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5935:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5966:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5969:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5959:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5959:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5800:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6034:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6044:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6067:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6049:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6049:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6044:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6078:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6101:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6083:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6078:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6276:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6278:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6278:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6278:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6188:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6181:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6181:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6174:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6196:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6203:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6271:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6199:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6199:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6193:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6193:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:105:2"
															},
															"nodeType": "YulIf",
															"src": "6167:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6308:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6323:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6326:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6308:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6017:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6020:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6026:7:2",
														"type": ""
													}
												],
												"src": "5986:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6368:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6385:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6388:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6378:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6378:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6378:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6482:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6485:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6475:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6475:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6506:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6499:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6499:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6340:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6568:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6578:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6601:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6583:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6578:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6612:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6635:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6617:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6617:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6612:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6659:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6661:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6661:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6656:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:9:2"
															},
															"nodeType": "YulIf",
															"src": "6646:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6691:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6700:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6703:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6696:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6691:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6557:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6560:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6566:1:2",
														"type": ""
													}
												],
												"src": "6526:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6823:61:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6845:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6853:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:14:2"
																	},
																	{
																		"hexValue": "4572726f722074696d657374616d702030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6857:19:2",
																		"type": "",
																		"value": "Error timestamp 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6834:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6834:43:2"
														}
													]
												},
												"name": "store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6815:6:2",
														"type": ""
													}
												],
												"src": "6717:167:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7036:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7046:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7112:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7053:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7046:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7218:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																	"nodeType": "YulIdentifier",
																	"src": "7129:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7129:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7231:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7242:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7247:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7238:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7024:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7032:3:2",
														"type": ""
													}
												],
												"src": "6890:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7433:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7443:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7455:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7466:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7443:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7490:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7501:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7486:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7486:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7509:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7505:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7505:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7479:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7479:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7669:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7543:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7543:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7535:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7413:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7428:4:2",
														"type": ""
													}
												],
												"src": "7262:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7732:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7742:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7765:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7747:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7742:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7776:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7799:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7781:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7776:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7823:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7825:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7825:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7825:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7817:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7820:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7814:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:8:2"
															},
															"nodeType": "YulIf",
															"src": "7811:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7855:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7867:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7870:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7855:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7718:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7721:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7727:4:2",
														"type": ""
													}
												],
												"src": "7687:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7954:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7970:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7964:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7964:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7954:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7926:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7936:6:2",
														"type": ""
													}
												],
												"src": "7884:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8038:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8048:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8057:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8052:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8117:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8142:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8147:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8138:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8138:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8161:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8166:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8157:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8157:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8151:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8151:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8131:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8131:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8131:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8078:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8075:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8075:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8089:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8091:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8100:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8103:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8096:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8096:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8091:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8071:3:2",
																"statements": []
															},
															"src": "8067:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8214:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8264:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8269:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8260:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8260:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8278:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8253:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8253:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8253:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8195:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8198:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8192:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:13:2"
															},
															"nodeType": "YulIf",
															"src": "8189:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8020:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8025:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8030:6:2",
														"type": ""
													}
												],
												"src": "7989:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8350:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8360:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8378:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8385:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8374:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8394:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8390:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8390:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8370:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8370:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8360:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8333:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8343:6:2",
														"type": ""
													}
												],
												"src": "8302:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8502:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8512:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8559:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8526:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8526:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8516:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8574:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8640:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8645:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8581:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8574:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8687:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8694:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8683:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8683:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8701:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8706:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8661:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8661:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8661:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8722:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8733:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8760:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8738:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8729:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8729:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8722:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8483:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8490:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8498:3:2",
														"type": ""
													}
												],
												"src": "8410:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8898:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8908:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8920:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8931:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8916:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8908:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8955:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8966:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8951:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8951:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8974:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8980:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8970:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8970:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8944:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9000:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9072:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9081:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9008:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9000:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8870:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8882:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8893:4:2",
														"type": ""
													}
												],
												"src": "8780:313:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakable.Stake -> struct Stakable.Stake\n    function abi_encode_t_struct$_Stake_$351_memory_ptr_to_t_struct$_Stake_$351_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // claimable_airdropRate\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    // struct Stakable.StakingSummary -> struct Stakable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$367_memory_ptr_to_t_struct$_StakingSummary_$367_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stake\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Stake_$351_memory_ptr_to_t_struct$_Stake_$351_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$367_memory_ptr__to_t_struct$_StakingSummary_$367_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_struct$_StakingSummary_$367_memory_ptr_to_t_struct$_StakingSummary_$367_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No stake found\")\n\n    }\n\n    function abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error timestamp 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633dc10ad41461003b578063e73e14bf14610059575b600080fd5b610043610089565b604051610050919061045a565b60405180910390f35b610073600480360381019061006e91906104d8565b610092565b6040516100809190610608565b60405180910390f35b60008054905090565b61009a6103bf565b600060405180606001604052806000815260200160008152602001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250508152509050600081604001516020015114156101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e790610681565b60405180910390fd5b60006102088260400151836040015160200151610246565b90508082604001516060018181525050816040015160e001518260200181815250508160400151602001518260000181815250508192505050919050565b6000808360200151141561025d57600090506102a8565b60008360e00181815250506a52b7d2dcc80cd2e400000061028184604001516102ae565b8460a001518461029191906106d0565b61029b91906106d0565b6102a59190610759565b90505b92915050565b60008082116102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e9906107d6565b60405180910390fd5b61035669d3c21bcecceda1000000834261030c91906107f6565b61031691906106d0565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d7000000081525061035d565b9050919050565b600080831182906103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b91906108b2565b60405180910390fd5b508284816103b5576103b461072a565b5b0490509392505050565b604051806060016040528060008152602001600081526020016103e06103e6565b81525090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b61045481610441565b82525050565b600060208201905061046f600083018461044b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a58261047a565b9050919050565b6104b58161049a565b81146104c057600080fd5b50565b6000813590506104d2816104ac565b92915050565b6000602082840312156104ee576104ed610475565b5b60006104fc848285016104c3565b91505092915050565b61050e81610441565b82525050565b61051d8161049a565b82525050565b6101008201600082015161053a6000850182610514565b50602082015161054d6020850182610505565b5060408201516105606040850182610505565b5060608201516105736060850182610505565b5060808201516105866080850182610505565b5060a082015161059960a0850182610505565b5060c08201516105ac60c0850182610505565b5060e08201516105bf60e0850182610505565b50505050565b610140820160008201516105dc6000850182610505565b5060208201516105ef6020850182610505565b5060408201516106026040850182610523565b50505050565b60006101408201905061061e60008301846105c5565b92915050565b600082825260208201905092915050565b7f4e6f207374616b6520666f756e64000000000000000000000000000000000000600082015250565b600061066b600e83610624565b915061067682610635565b602082019050919050565b6000602082019050818103600083015261069a8161065e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106db82610441565b91506106e683610441565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561071f5761071e6106a1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061076482610441565b915061076f83610441565b92508261077f5761077e61072a565b5b828204905092915050565b7f4572726f722074696d657374616d702030000000000000000000000000000000600082015250565b60006107c0601183610624565b91506107cb8261078a565b602082019050919050565b600060208201905081810360008301526107ef816107b3565b9050919050565b600061080182610441565b915061080c83610441565b92508282101561081f5761081e6106a1565b5b828203905092915050565b600081519050919050565b60005b83811015610853578082015181840152602081019050610838565b83811115610862576000848401525b50505050565b6000601f19601f8301169050919050565b60006108848261082a565b61088e8185610624565b935061089e818560208601610835565b6108a781610868565b840191505092915050565b600060208201905081810360008301526108cc8184610879565b90509291505056fea2646970667358221220ba67b994956c4a859a19022f0bb2ff6bdd6187b5bd05d49e1fb8bb57891a9a9664736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC10AD4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x208 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x246 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0xE0 ADD MLOAD DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD EQ ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xE0 ADD DUP2 DUP2 MSTORE POP POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x281 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x2AE JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD MLOAD DUP5 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x759 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x356 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x6D0 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x72A JUMP JUMPDEST JUMPDEST DIV SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E0 PUSH2 0x3E6 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP3 PUSH2 0x47A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B5 DUP2 PUSH2 0x49A JUMP JUMPDEST DUP2 EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D2 DUP2 PUSH2 0x4AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0x475 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP5 DUP3 DUP6 ADD PUSH2 0x4C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50E DUP2 PUSH2 0x441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51D DUP2 PUSH2 0x49A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x53A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x514 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x54D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x560 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x573 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x586 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x599 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x5AC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x5BF PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x140 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5DC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x5EF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x602 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x523 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x61E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66B PUSH1 0xE DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP2 POP PUSH2 0x676 DUP3 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x69A DUP2 PUSH2 0x65E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP3 PUSH2 0x441 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E6 DUP4 PUSH2 0x441 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x764 DUP3 PUSH2 0x441 JUMP JUMPDEST SWAP2 POP PUSH2 0x76F DUP4 PUSH2 0x441 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0x72A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722074696D657374616D702030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C0 PUSH1 0x11 DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP2 POP PUSH2 0x7CB DUP3 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7EF DUP2 PUSH2 0x7B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x801 DUP3 PUSH2 0x441 JUMP JUMPDEST SWAP2 POP PUSH2 0x80C DUP4 PUSH2 0x441 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x6A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x853 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x838 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x884 DUP3 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x88E DUP2 DUP6 PUSH2 0x624 JUMP JUMPDEST SWAP4 POP PUSH2 0x89E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x835 JUMP JUMPDEST PUSH2 0x8A7 DUP2 PUSH2 0x868 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CC DUP2 DUP5 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH8 0xB994956C4A859A19 MUL 0x2F SIGNEXTEND 0xB2 SELFDESTRUCT PUSH12 0xDD6187B5BD05D49E1FB8BB57 DUP10 BYTE SWAP11 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "128:7752:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3796:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6623:642;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3796:97;3839:7;3866:19;;3859:26;;3796:97;:::o;6623:642::-;6706:21;;:::i;:::-;6745:29;6777:99;;;;;;;;6806:1;6777:99;;;;6822:1;6777:99;;;;6838:12;:21;6851:7;6838:21;;;;;;;;;;;;;;;:27;;6777:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6745:131;;6919:1;6895:7;:13;;;:20;;;:25;;6887:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6952:23;6978:94;7013:7;:13;;;7041:7;:13;;;:20;;;6978;:94::i;:::-;6952:120;;7111:15;7085:7;:13;;;:23;;:41;;;;;7155:7;:13;;;:21;;;7137:7;:15;;:39;;;;;7210:7;:13;;;:20;;;7187:7;:20;;:43;;;;;7250:7;7243:14;;;;6623:642;;;:::o;4269:403::-;4391:7;4441:1;4420:10;:17;;;:22;4416:63;;;4466:1;4459:8;;;;4416:63;4512:1;4491:10;:18;;:22;;;;;4660:4;4614:42;4639:10;:16;;;4614:24;:42::i;:::-;4574:10;:20;;;4547:7;:47;;;;:::i;:::-;:109;;;;:::i;:::-;4546:118;;;;:::i;:::-;4526:138;;4269:403;;;;;:::o;3901:360::-;4001:7;4043:1;4034:6;:10;4026:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;4097:156;4157:4;4147:6;4129:15;:24;;;;:::i;:::-;4128:33;;;;:::i;:::-;4180:8;4097:156;;;;;;;;;;;;;;;;;:12;:156::i;:::-;4077:176;;3901:360;;;:::o;5660:230:0:-;5776:7;5831:1;5827;:5;5834:12;5819:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5861:12;;5660:230;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:108::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1611:108;;:::o;1725:::-;1802:24;1820:5;1802:24;:::i;:::-;1797:3;1790:37;1725:108;;:::o;1893:1577::-;2024:6;2019:3;2015:16;2113:4;2106:5;2102:16;2096:23;2132:63;2189:4;2184:3;2180:14;2166:12;2132:63;:::i;:::-;2041:164;2289:4;2282:5;2278:16;2272:23;2308:63;2365:4;2360:3;2356:14;2342:12;2308:63;:::i;:::-;2215:166;2464:4;2457:5;2453:16;2447:23;2483:63;2540:4;2535:3;2531:14;2517:12;2483:63;:::i;:::-;2391:165;2643:4;2636:5;2632:16;2626:23;2662:63;2719:4;2714:3;2710:14;2696:12;2662:63;:::i;:::-;2566:169;2834:4;2827:5;2823:16;2817:23;2853:63;2910:4;2905:3;2901:14;2887:12;2853:63;:::i;:::-;2745:181;3013:4;3006:5;3002:16;2996:23;3032:63;3089:4;3084:3;3080:14;3066:12;3032:63;:::i;:::-;2936:169;3194:4;3187:5;3183:16;3177:23;3213:63;3270:4;3265:3;3261:14;3247:12;3213:63;:::i;:::-;3115:171;3371:4;3364:5;3360:16;3354:23;3390:63;3447:4;3442:3;3438:14;3424:12;3390:63;:::i;:::-;3296:167;1993:1477;1893:1577;;:::o;3548:751::-;3707:6;3702:3;3698:16;3804:4;3797:5;3793:16;3787:23;3823:63;3880:4;3875:3;3871:14;3857:12;3823:63;:::i;:::-;3724:172;3981:4;3974:5;3970:16;3964:23;4000:63;4057:4;4052:3;4048:14;4034:12;4000:63;:::i;:::-;3906:167;4156:4;4149:5;4145:16;4139:23;4175:107;4276:4;4271:3;4267:14;4253:12;4175:107;:::i;:::-;4083:209;3676:623;3548:751;;:::o;4305:347::-;4460:4;4498:3;4487:9;4483:19;4475:27;;4512:133;4642:1;4631:9;4627:17;4618:6;4512:133;:::i;:::-;4305:347;;;;:::o;4658:169::-;4742:11;4776:6;4771:3;4764:19;4816:4;4811:3;4807:14;4792:29;;4658:169;;;;:::o;4833:164::-;4973:16;4969:1;4961:6;4957:14;4950:40;4833:164;:::o;5003:366::-;5145:3;5166:67;5230:2;5225:3;5166:67;:::i;:::-;5159:74;;5242:93;5331:3;5242:93;:::i;:::-;5360:2;5355:3;5351:12;5344:19;;5003:366;;;:::o;5375:419::-;5541:4;5579:2;5568:9;5564:18;5556:26;;5628:9;5622:4;5618:20;5614:1;5603:9;5599:17;5592:47;5656:131;5782:4;5656:131;:::i;:::-;5648:139;;5375:419;;;:::o;5800:180::-;5848:77;5845:1;5838:88;5945:4;5942:1;5935:15;5969:4;5966:1;5959:15;5986:348;6026:7;6049:20;6067:1;6049:20;:::i;:::-;6044:25;;6083:20;6101:1;6083:20;:::i;:::-;6078:25;;6271:1;6203:66;6199:74;6196:1;6193:81;6188:1;6181:9;6174:17;6170:105;6167:131;;;6278:18;;:::i;:::-;6167:131;6326:1;6323;6319:9;6308:20;;5986:348;;;;:::o;6340:180::-;6388:77;6385:1;6378:88;6485:4;6482:1;6475:15;6509:4;6506:1;6499:15;6526:185;6566:1;6583:20;6601:1;6583:20;:::i;:::-;6578:25;;6617:20;6635:1;6617:20;:::i;:::-;6612:25;;6656:1;6646:35;;6661:18;;:::i;:::-;6646:35;6703:1;6700;6696:9;6691:14;;6526:185;;;;:::o;6717:167::-;6857:19;6853:1;6845:6;6841:14;6834:43;6717:167;:::o;6890:366::-;7032:3;7053:67;7117:2;7112:3;7053:67;:::i;:::-;7046:74;;7129:93;7218:3;7129:93;:::i;:::-;7247:2;7242:3;7238:12;7231:19;;6890:366;;;:::o;7262:419::-;7428:4;7466:2;7455:9;7451:18;7443:26;;7515:9;7509:4;7505:20;7501:1;7490:9;7486:17;7479:47;7543:131;7669:4;7543:131;:::i;:::-;7535:139;;7262:419;;;:::o;7687:191::-;7727:4;7747:20;7765:1;7747:20;:::i;:::-;7742:25;;7781:20;7799:1;7781:20;:::i;:::-;7776:25;;7820:1;7817;7814:8;7811:34;;;7825:18;;:::i;:::-;7811:34;7870:1;7867;7863:9;7855:17;;7687:191;;;;:::o;7884:99::-;7936:6;7970:5;7964:12;7954:22;;7884:99;;;:::o;7989:307::-;8057:1;8067:113;8081:6;8078:1;8075:13;8067:113;;;8166:1;8161:3;8157:11;8151:18;8147:1;8142:3;8138:11;8131:39;8103:2;8100:1;8096:10;8091:15;;8067:113;;;8198:6;8195:1;8192:13;8189:101;;;8278:1;8269:6;8264:3;8260:16;8253:27;8189:101;8038:258;7989:307;;;:::o;8302:102::-;8343:6;8394:2;8390:7;8385:2;8378:5;8374:14;8370:28;8360:38;;8302:102;;;:::o;8410:364::-;8498:3;8526:39;8559:5;8526:39;:::i;:::-;8581:71;8645:6;8640:3;8581:71;:::i;:::-;8574:78;;8661:52;8706:6;8701:3;8694:4;8687:5;8683:16;8661:52;:::i;:::-;8738:29;8760:6;8738:29;:::i;:::-;8733:3;8729:39;8722:46;;8502:272;8410:364;;;;:::o;8780:313::-;8893:4;8931:2;8920:9;8916:18;8908:26;;8980:9;8974:4;8970:20;8966:1;8955:9;8951:17;8944:47;9008:78;9081:4;9072:6;9008:78;:::i;:::-;9000:86;;8780:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "462800",
								"executionCost": "44727",
								"totalCost": "507527"
							},
							"external": {
								"hasStake(address)": "infinite",
								"penaltyFee()": "2415"
							},
							"internal": {
								"_changeAirdropPercentage(uint256)": "infinite",
								"_changePenaltyFee(uint256)": "infinite",
								"_claimAirdrop(address)": "infinite",
								"_stake(address,uint256,uint256,uint256)": "infinite",
								"_withdrawStake(address,uint256)": "infinite",
								"calculateStakeReward(struct Stakable.Stake memory,uint256)": "infinite",
								"calculateStakingDuration(uint256)": "infinite",
								"calculateStakingWithPenalty(struct Stakable.Stake memory,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 7880,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 583,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 583,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 435,
									"end": 583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 435,
									"end": 583,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 547,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 523,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 547,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 523,
									"end": 547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 558,
									"end": 570,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 558,
									"end": 575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 558,
									"end": 575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 558,
									"end": 575,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 558,
									"end": 575,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7880,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba67b994956c4a859a19022f0bb2ff6bdd6187b5bd05d49e1fb8bb57891a9a9664736f6c634300080b0033",
									".code": [
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "3DC10AD4"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "E73E14BF"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 7880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3885,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3893,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6706,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6858,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6859,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6895,
											"end": 6908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6920,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6895,
											"end": 6920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6887,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7013,
											"end": 7020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7013,
											"end": 7026,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7013,
											"end": 7026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7013,
											"end": 7026,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7041,
											"end": 7054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6978,
											"end": 7072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6978,
											"end": 7072,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6978,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 7072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7085,
											"end": 7108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7176,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7155,
											"end": 7176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7223,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7210,
											"end": 7223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7210,
											"end": 7230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 7265,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4442,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4459,
											"end": 4467,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4501,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 4614,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4639,
											"end": 4649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4639,
											"end": 4655,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4614,
											"end": 4656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 4656,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4614,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4584,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4594,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4574,
											"end": 4594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4594,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4547,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4547,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4546,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4672,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3901,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3901,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4044,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4026,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4157,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4097,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 4261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 4261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 4261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 4261,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1719,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1725,
											"end": 1833,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1725,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1820,
											"end": 1825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1802,
											"end": 1826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1802,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1802,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1833,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1893,
											"end": 3470,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1893,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2019,
											"end": 2022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2363,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2308,
											"end": 2371,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2371,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2308,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2468,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2462,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2538,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2529,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2483,
											"end": 2546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2546,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2483,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2647,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2719,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2714,
											"end": 2717,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2662,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2662,
											"end": 2725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2662,
											"end": 2725,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2662,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2838,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2827,
											"end": 2832,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2905,
											"end": 2908,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3017,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3006,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3089,
											"end": 3093,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3032,
											"end": 3095,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3032,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3032,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 3105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3198,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3187,
											"end": 3192,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3183,
											"end": 3199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3270,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 3265,
											"end": 3268,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3259,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3213,
											"end": 3276,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3213,
											"end": 3276,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3213,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3364,
											"end": 3369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3360,
											"end": 3376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3354,
											"end": 3377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3447,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3442,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3390,
											"end": 3453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3390,
											"end": 3453,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3390,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 3470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 3470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 3470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 3470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 4299,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3548,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3878,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3724,
											"end": 3896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3964,
											"end": 3987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4057,
											"end": 4061,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4046,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4000,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 4073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4160,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4161,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4276,
											"end": 4280,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4274,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4175,
											"end": 4282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4175,
											"end": 4282,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4175,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 4299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4483,
											"end": 4502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4475,
											"end": 4502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4475,
											"end": 4502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4642,
											"end": 4643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4640,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4512,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4652,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4792,
											"end": 4821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4792,
											"end": 4821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4827,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4833,
											"end": 4997,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4833,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4973,
											"end": 4989,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F207374616B6520666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 4969,
											"end": 4970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4957,
											"end": 4971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5003,
											"end": 5369,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5003,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5230,
											"end": 5232,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5225,
											"end": 5228,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5166,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5166,
											"end": 5233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5166,
											"end": 5233,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5166,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5159,
											"end": 5233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5331,
											"end": 5334,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5242,
											"end": 5335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5242,
											"end": 5335,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5242,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5355,
											"end": 5358,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5369,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5375,
											"end": 5794,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5375,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5556,
											"end": 5582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5622,
											"end": 5626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5599,
											"end": 5616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5782,
											"end": 5786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5656,
											"end": 5787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5656,
											"end": 5787,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5656,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5794,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5794,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5800,
											"end": 5980,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5800,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5925,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5935,
											"end": 5950,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 5973,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6026,
											"end": 6033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6049,
											"end": 6069,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6049,
											"end": 6069,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6049,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6069,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6044,
											"end": 6069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6103,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6269,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6273,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6193,
											"end": 6274,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6170,
											"end": 6275,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6167,
											"end": 6298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6167,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6167,
											"end": 6298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6167,
											"end": 6298,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6167,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6326,
											"end": 6327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6319,
											"end": 6328,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6334,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6340,
											"end": 6520,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6340,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6388,
											"end": 6465,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6482,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6506,
											"end": 6507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6514,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6566,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6601,
											"end": 6602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6578,
											"end": 6603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6578,
											"end": 6603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6617,
											"end": 6637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 6637,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6617,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6637,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6646,
											"end": 6681,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6681,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6646,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6703,
											"end": 6704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6691,
											"end": 6705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6691,
											"end": 6705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6526,
											"end": 6711,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6717,
											"end": 6884,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6717,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6857,
											"end": 6876,
											"name": "PUSH",
											"source": 2,
											"value": "4572726F722074696D657374616D702030000000000000000000000000000000"
										},
										{
											"begin": 6853,
											"end": 6854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6717,
											"end": 6884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6717,
											"end": 6884,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6890,
											"end": 7256,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6890,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7032,
											"end": 7035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7117,
											"end": 7119,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7112,
											"end": 7115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7129,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7218,
											"end": 7221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7129,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7129,
											"end": 7222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7222,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7129,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7247,
											"end": 7249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7242,
											"end": 7245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7238,
											"end": 7250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7231,
											"end": 7250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7231,
											"end": 7250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7256,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7262,
											"end": 7681,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7262,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7468,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7464,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7443,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7443,
											"end": 7469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7515,
											"end": 7524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7486,
											"end": 7503,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7669,
											"end": 7673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7543,
											"end": 7674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7543,
											"end": 7674,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7543,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7535,
											"end": 7674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7681,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7681,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7727,
											"end": 7731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7765,
											"end": 7766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7747,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7742,
											"end": 7767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7742,
											"end": 7767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7799,
											"end": 7800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7781,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7776,
											"end": 7801,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7776,
											"end": 7801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7814,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7811,
											"end": 7845,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7825,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 7825,
											"end": 7843,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7825,
											"end": 7843,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7825,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7845,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7811,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 7871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7878,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7884,
											"end": 7983,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7884,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7884,
											"end": 7983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7884,
											"end": 7983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7884,
											"end": 7983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7884,
											"end": 7983,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7989,
											"end": 8296,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7989,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8081,
											"end": 8087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8075,
											"end": 8088,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8166,
											"end": 8167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8157,
											"end": 8168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8147,
											"end": 8148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8142,
											"end": 8145,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8138,
											"end": 8149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8131,
											"end": 8170,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8103,
											"end": 8105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8096,
											"end": 8106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8091,
											"end": 8106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8091,
											"end": 8106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8067,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8205,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8189,
											"end": 8290,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8189,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 8189,
											"end": 8290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8269,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8260,
											"end": 8276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8253,
											"end": 8280,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8189,
											"end": 8290,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 8189,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8038,
											"end": 8296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7989,
											"end": 8296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7989,
											"end": 8296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7989,
											"end": 8296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7989,
											"end": 8296,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8302,
											"end": 8404,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8302,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8396,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8390,
											"end": 8397,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8385,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8378,
											"end": 8383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8374,
											"end": 8388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8360,
											"end": 8398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8360,
											"end": 8398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8302,
											"end": 8404,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8498,
											"end": 8501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8559,
											"end": 8564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8526,
											"end": 8565,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8526,
											"end": 8565,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8526,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 8645,
											"end": 8651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8643,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 8581,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8574,
											"end": 8652,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8574,
											"end": 8652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8701,
											"end": 8704,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8694,
											"end": 8698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8687,
											"end": 8692,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 8661,
											"end": 8713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8661,
											"end": 8713,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8661,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8738,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8738,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8738,
											"end": 8767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8738,
											"end": 8767,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8738,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8736,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8729,
											"end": 8768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8722,
											"end": 8768,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8722,
											"end": 8768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8502,
											"end": 8774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8774,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8893,
											"end": 8897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8920,
											"end": 8929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 8934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 8934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8980,
											"end": 8989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8974,
											"end": 8978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8970,
											"end": 8990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8951,
											"end": 8968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8944,
											"end": 8991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9008,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 9081,
											"end": 9085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9008,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9008,
											"end": 9086,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9008,
											"end": 9086,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 9008,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9000,
											"end": 9086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9000,
											"end": 9086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 9093,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hasStake(address)": "e73e14bf",
							"penaltyFee()": "3dc10ad4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable_airdropRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0xb44bd736082b26220cf08599c64739b86ae232133fcf7b58c399053cf971bacd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9720ea2a087de3424ac5262fd40f89ada8b361ac42e4fb000550a171e1f4a3c5\",\"dweb:/ipfs/QmZ5p4b5aXa8sGs8qHB2No35vhzJH7XBKvXyyCWUYpCQVB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_stakingPenaltyRate",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 322,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_airdropRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 373,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Stakeholder)359_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stakeholder)359_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stakeholder)",
								"numberOfBytes": "32",
								"value": "t_struct(Stakeholder)359_storage"
							},
							"t_struct(Stake)351_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 336,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 338,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 340,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 342,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 344,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable_airdropRate",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 346,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 348,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 350,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "penalty",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_struct(Stakeholder)359_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stakeholder",
								"members": [
									{
										"astId": 354,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "stake",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Stake)351_storage"
									},
									{
										"astId": 356,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "user",
										"offset": 0,
										"slot": "8",
										"type": "t_address"
									},
									{
										"astId": 358,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "320"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						],
						"Stakable": [
							864
						]
					},
					"id": 865,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 312,
							"src": "67:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864
							],
							"name": "Stakable",
							"nameLocation": "137:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "159:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "153:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "172:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "186:162:1",
										"text": " @notice Constructor since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
									},
									"id": 320,
									"mutability": "mutable",
									"name": "_stakingPenaltyRate",
									"nameLocation": "372:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "356:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "356:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 322,
									"mutability": "mutable",
									"name": "_airdropRate",
									"nameLocation": "414:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "398:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "449:134:1",
										"statements": [
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 325,
														"name": "_stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "523:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "545:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "523:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "523:24:1"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "_airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "558:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "573:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "558:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "558:17:1"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:1"
									},
									"scope": 864,
									"src": "435:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 351,
									"members": [
										{
											"constant": false,
											"id": 336,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "856:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "848:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 335,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "848:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "879:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "871:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "871:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "904:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "896:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1028:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "1020:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1020:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 344,
											"mutability": "mutable",
											"name": "claimable_airdropRate",
											"nameLocation": "1056:21:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "1048:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 343,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1048:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1096:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "1088:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 345,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1088:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1124:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "1116:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 347,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1116:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "1154:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 351,
											"src": "1146:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 349,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1146:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "831:5:1",
									"nodeType": "StructDefinition",
									"scope": 864,
									"src": "824:345:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stakeholder",
									"id": 359,
									"members": [
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1292:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1286:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 353,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 352,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 351,
													"src": "1286:5:1"
												},
												"referencedDeclaration": 351,
												"src": "1286:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 356,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1316:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1308:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 355,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1308:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "1339:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1331:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 357,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1263:11:1",
									"nodeType": "StructDefinition",
									"scope": 864,
									"src": "1256:106:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 367,
									"members": [
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1546:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 367,
											"src": "1538:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 360,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 363,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "1577:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 367,
											"src": "1569:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 366,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1601:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 367,
											"src": "1595:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 365,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 364,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 351,
													"src": "1595:5:1"
												},
												"referencedDeclaration": 351,
												"src": "1595:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1512:14:1",
									"nodeType": "StructDefinition",
									"scope": 864,
									"src": "1505:109:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1622:114:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 373,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1783:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1742:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
										"typeString": "mapping(address => struct Stakable.Stakeholder)"
									},
									"typeName": {
										"id": 372,
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1750:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1742:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
											"typeString": "mapping(address => struct Stakable.Stakeholder)"
										},
										"valueType": {
											"id": 371,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 370,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 359,
												"src": "1761:11:1"
											},
											"referencedDeclaration": 359,
											"src": "1761:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
												"typeString": "struct Stakable.Stakeholder"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1804:126:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 384,
									"name": "Staked",
									"nameLocation": "1942:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1975:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1959:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1998:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1990:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2023:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2015:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2051:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2043:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:121:1"
									},
									"src": "1936:134:1"
								},
								{
									"anonymous": false,
									"id": 388,
									"name": "PenaltyChanged",
									"nameLocation": "2084:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2107:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2099:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:16:1"
									},
									"src": "2078:37:1"
								},
								{
									"anonymous": false,
									"id": 392,
									"name": "AirdropChanged",
									"nameLocation": "2127:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2150:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2142:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:16:1"
									},
									"src": "2121:37:1"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2519:818:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "2593:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2603:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2593:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2606:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2585:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "2585:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 412,
																			"name": "stakeholders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 373,
																			"src": "2648:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
																				"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																			}
																		},
																		"id": 414,
																		"indexExpression": {
																			"id": 413,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2661:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2648:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$359_storage",
																			"typeString": "struct Stakable.Stakeholder storage ref"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 354,
																	"src": "2648:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$351_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "2648:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2684:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2648:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722069732061207374616b6572",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2687:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															},
															"value": "User is a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2691efb0aa18db578dd8d5763b4183f2fc55ea2de0a8db285ee617da2a9fe108",
																"typeString": "literal_string \"User is a staker\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2640:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "2640:66:1"
											},
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "2815:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "2807:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"expression": {
														"id": 424,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2827:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2827:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2807:35:1"
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 427,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "2974:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																}
															},
															"id": 429,
															"indexExpression": {
																"id": 428,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2987:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2974:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$359_storage",
																"typeString": "struct Stakable.Stakeholder storage ref"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "2974:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$351_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 432,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "3022:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 433,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "3042:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 434,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "3064:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3088:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3104:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 437,
																"name": "_rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "3120:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 438,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 399,
																			"src": "3147:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 439,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "3162:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3147:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 441,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3146:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3187:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 431,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3002:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$351_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3002:197:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "2974:225:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$351_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "2974:225:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "3275:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3282:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 449,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3291:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 450,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "3303:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 451,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "3318:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3303:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 453,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3302:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "3268:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3268:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "EmitStatement",
												"src": "3263:66:1"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2166:204:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "2385:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2410:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2402:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2434:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2426:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "2460:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2452:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "2491:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2483:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:118:1"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:0:1"
									},
									"scope": 864,
									"src": "2376:961:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "3398:160:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "3417:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3428:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "3417:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c7479206665652063616e6e6f742065786365656420332070657263656e742e",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															},
															"value": "Penalty fee cannot exceed 3 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28b9cc5845d3e07d7ab8f34d980f137c1b248a3950e8cece74e9bf5f2a6e64e9",
																"typeString": "literal_string \"Penalty fee cannot exceed 3 percent.\""
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3409:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "3409:62:1"
											},
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "_stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3482:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 470,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3504:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3482:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "3482:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 474,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3542:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3527:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3527:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "3522:28:1"
											}
										]
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changePenaltyFee",
									"nameLocation": "3354:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "3380:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3372:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3372:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3371:17:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3398:0:1"
									},
									"scope": 864,
									"src": "3345:213:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3626:162:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 484,
																"name": "amount_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3645:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323030",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3656:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "3645:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f702050657263656e746167652063616e6e6f74206578636565642032302070657263656e742e",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															},
															"value": "Airdrop Percentage cannot exceed 20 percent."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61040048776cdd899f1524647893fcc96c1bb450f0665365eef2ede5ee6e90cc",
																"typeString": "literal_string \"Airdrop Percentage cannot exceed 20 percent.\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3637:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3637:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "3637:71:1"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3719:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "amount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3734:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3719:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "3719:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3772:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3757:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "EmitStatement",
												"src": "3752:28:1"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAirdropPercentage",
									"nameLocation": "3575:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "amount_",
												"nameLocation": "3608:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3600:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3600:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3599:17:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3626:0:1"
									},
									"scope": 864,
									"src": "3566:222:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3848:45:1",
										"statements": [
											{
												"expression": {
													"id": 504,
													"name": "_stakingPenaltyRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 320,
													"src": "3866:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 503,
												"id": 505,
												"nodeType": "Return",
												"src": "3859:26:1"
											}
										]
									},
									"functionSelector": "3dc10ad4",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "penaltyFee",
									"nameLocation": "3805:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3815:2:1"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3839:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3838:9:1"
									},
									"scope": 864,
									"src": "3796:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "4015:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "since_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "4034:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4043:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4034:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722074696d657374616d702030",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															},
															"value": "Error timestamp 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_344876a6da0a70234a6baabeee94694174b02d45df20fd4257a92fa090268af3",
																"typeString": "literal_string \"Error timestamp 0\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4026:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4026:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "4026:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 523,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4129:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4129:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 525,
																			"name": "since_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "4147:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4129:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4128:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4157:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "4128:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4180:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4207:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 521,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4097:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "4097:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4097:156:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 513,
												"id": 533,
												"nodeType": "Return",
												"src": "4077:176:1"
											}
										]
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingDuration",
									"nameLocation": "3910:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "since_",
												"nameLocation": "3943:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3935:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:16:1"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "4001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4000:9:1"
									},
									"scope": 864,
									"src": "3901:360:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4405:267:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 545,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4420:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "4420:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4441:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4420:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"nodeType": "IfStatement",
												"src": "4416:63:1",
												"trueBody": {
													"id": 551,
													"nodeType": "Block",
													"src": "4444:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4466:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 544,
															"id": 550,
															"nodeType": "Return",
															"src": "4459:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 553,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4491:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 350,
														"src": "4491:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4512:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4491:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "4491:22:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 559,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "4547:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 560,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "4574:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 346,
																		"src": "4574:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4547:47:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 564,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "4639:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 340,
																			"src": "4639:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 563,
																		"name": "calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "4614:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4614:42:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4547:109:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 568,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4546:111:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4660:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "4546:118:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 571,
												"nodeType": "Return",
												"src": "4526:138:1"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "4278:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "4312:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4299:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 536,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 351,
														"src": "4299:5:1"
													},
													"referencedDeclaration": 351,
													"src": "4299:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4332:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4324:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4298:42:1"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4391:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4390:9:1"
									},
									"scope": 864,
									"src": "4269:403:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "4849:543:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 587,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "4864:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4874:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4864:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "4860:57:1",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "4877:40:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4900:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4903:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 592,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4899:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 586,
															"id": 593,
															"nodeType": "Return",
															"src": "4892:13:1"
														}
													]
												}
											},
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "amount_penalty",
														"nameLocation": "4937:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "4929:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "4994:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 603,
																	"name": "_stakingPenaltyRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5002:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 600,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "4981:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "4981:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4981:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5037:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"id": 598,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4954:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "4954:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4954:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4929:123:1"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "reward_penalty",
														"nameLocation": "5071:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 640,
														"src": "5063:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5063:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 614,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5128:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 615,
																	"name": "_stakingPenaltyRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5136:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 612,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5115:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "5115:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5171:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"id": 610,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5088:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "5088:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5088:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5063:123:1"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 620,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "5199:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 350,
														"src": "5199:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 623,
															"name": "amount_penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5220:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 624,
															"name": "reward_penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "5237:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5220:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5199:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "5199:52:1"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 630,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "5299:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 631,
																	"name": "amount_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "5307:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 628,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5286:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "5286:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5286:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 635,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5350:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 636,
																	"name": "reward_penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "5358:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 633,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "5337:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "5337:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5337:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 638,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5271:113:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 586,
												"id": 639,
												"nodeType": "Return",
												"src": "5264:120:1"
											}
										]
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingWithPenalty",
									"nameLocation": "4689:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "4740:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4727:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 574,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 351,
														"src": "4727:5:1"
													},
													"referencedDeclaration": 351,
													"src": "4727:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4769:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4761:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4794:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4786:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4786:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4716:91:1"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4831:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4840:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:18:1"
									},
									"scope": 864,
									"src": "4680:712:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "5860:755:1",
										"statements": [
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "5959:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "5945:19:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 654,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 653,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 351,
																"src": "5945:5:1"
															},
															"referencedDeclaration": 351,
															"src": "5945:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 656,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "5967:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
																"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
															}
														},
														"id": 658,
														"indexExpression": {
															"id": 657,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5980:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5967:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$359_storage",
															"typeString": "struct Stakable.Stakeholder storage ref"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 354,
													"src": "5967:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$351_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5945:47:1"
											},
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6013:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "6005:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6005:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [
														{
															"id": 664,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "6043:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																"typeString": "struct Stakable.Stake storage pointer"
															}
														},
														{
															"id": 665,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6050:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																"typeString": "struct Stakable.Stake storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "6022:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$351_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6022:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6005:53:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 668,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "6075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																"typeString": "struct Stakable.Stake storage pointer"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "6075:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 670,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "6091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6075:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6350:258:1",
													"statements": [
														{
															"expression": {
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 695,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "6365:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																			"typeString": "struct Stakable.Stake storage pointer"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "6365:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 701,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "6397:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 698,
																				"name": "stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 655,
																				"src": "6380:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																					"typeString": "struct Stakable.Stake storage pointer"
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 338,
																			"src": "6380:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "6380:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6380:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6365:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 704,
															"nodeType": "ExpressionStatement",
															"src": "6365:40:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 705,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "6426:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																			"typeString": "struct Stakable.Stake storage pointer"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 348,
																	"src": "6426:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 707,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6446:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6446:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6426:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 717,
															"nodeType": "IfStatement",
															"src": "6422:134:1",
															"trueBody": {
																"id": 716,
																"nodeType": "Block",
																"src": "6463:93:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 711,
																					"name": "stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "6517:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																						"typeString": "struct Stakable.Stake storage pointer"
																					}
																				},
																				{
																					"id": 712,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 646,
																					"src": "6524:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 713,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "6533:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																						"typeString": "struct Stakable.Stake storage pointer"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 710,
																				"name": "calculateStakingWithPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "6489:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$351_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																					"typeString": "function (struct Stakable.Stake memory,uint256,uint256) view returns (uint256,uint256)"
																				}
																			},
																			"id": 714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6489:51:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 652,
																		"id": 715,
																		"nodeType": "Return",
																		"src": "6482:58:1"
																	}
																]
															}
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 718,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "6580:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 719,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "6589:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 720,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6579:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 652,
															"id": 721,
															"nodeType": "Return",
															"src": "6572:24:1"
														}
													]
												},
												"id": 723,
												"nodeType": "IfStatement",
												"src": "6071:537:1",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "6100:244:1",
													"statements": [
														{
															"expression": {
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6115:26:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 672,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6122:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
																			"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																		}
																	},
																	"id": 674,
																	"indexExpression": {
																		"id": 673,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "6135:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6122:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stakeholder_$359_storage",
																		"typeString": "struct Stakable.Stakeholder storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "6115:26:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 677,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "6162:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																			"typeString": "struct Stakable.Stake storage pointer"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "releaseTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 348,
																	"src": "6162:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 679,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6182:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6182:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6162:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 689,
															"nodeType": "IfStatement",
															"src": "6158:134:1",
															"trueBody": {
																"id": 688,
																"nodeType": "Block",
																"src": "6199:93:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 683,
																					"name": "stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "6253:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																						"typeString": "struct Stakable.Stake storage pointer"
																					}
																				},
																				{
																					"id": 684,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 646,
																					"src": "6260:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 685,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "6269:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Stake_$351_storage_ptr",
																						"typeString": "struct Stakable.Stake storage pointer"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 682,
																				"name": "calculateStakingWithPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "6225:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$351_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																					"typeString": "function (struct Stakable.Stake memory,uint256,uint256) view returns (uint256,uint256)"
																				}
																			},
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6225:51:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 652,
																		"id": 687,
																		"nodeType": "Return",
																		"src": "6218:58:1"
																	}
																]
															}
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 690,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "6316:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 691,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "6325:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 692,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6315:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 652,
															"id": 693,
															"nodeType": "Return",
															"src": "6308:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "5400:339:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "5754:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5777:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5769:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5792:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5784:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5768:32:1"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5837:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5837:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "5846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:18:1"
									},
									"scope": 864,
									"src": "5745:870:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "6734:531:1",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "6767:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "6745:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 733,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 367,
																"src": "6745:14:1"
															},
															"referencedDeclaration": 367,
															"src": "6745:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$367_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6806:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6822:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 739,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6838:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
																		"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
																	}
																},
																"id": 741,
																"indexExpression": {
																	"id": 740,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "6851:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6838:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$359_storage",
																	"typeString": "struct Stakable.Stakeholder storage ref"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "6838:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$351_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														],
														"id": 736,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "6777:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$367_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6777:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6745:131:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 746,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "6895:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "6895:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "6895:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6919:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6895:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6922:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6887:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "6887:52:1"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "availableReward",
														"nameLocation": "6960:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "6952:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6952:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 757,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7013:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "7013:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 759,
																	"name": "summary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "7041:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																		"typeString": "struct Stakable.StakingSummary memory"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 366,
																"src": "7041:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 338,
															"src": "7041:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "6978:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$351_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6978:94:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6952:120:1"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 764,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7085:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "7085:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "7085:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 769,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7111:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7085:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "7085:41:1"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 772,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "7137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 363,
														"src": "7137:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 775,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7155:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "7155:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "penalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 350,
														"src": "7155:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7137:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "7137:39:1"
											},
											{
												"expression": {
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 780,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "7187:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 361,
														"src": "7187:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 783,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7210:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "7210:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "7210:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7187:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "7187:43:1"
											},
											{
												"expression": {
													"id": 788,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "7250:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 732,
												"id": 789,
												"nodeType": "Return",
												"src": "7243:14:1"
											}
										]
									},
									"functionSelector": "e73e14bf",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "6632:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "6649:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6641:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6640:17:1"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6706:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$367_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 367,
														"src": "6706:14:1"
													},
													"referencedDeclaration": 367,
													"src": "6706:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$367_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6705:23:1"
									},
									"scope": 864,
									"src": "6623:642:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "7340:537:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "stakeholder",
														"nameLocation": "7371:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "7351:31:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
															"typeString": "struct Stakable.Stakeholder"
														},
														"typeName": {
															"id": 799,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 798,
																"name": "Stakeholder",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "7351:11:1"
															},
															"referencedDeclaration": 359,
															"src": "7351:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
																"typeString": "struct Stakable.Stakeholder"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"baseExpression": {
														"id": 801,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "7385:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$359_storage_$",
															"typeString": "mapping(address => struct Stakable.Stakeholder storage ref)"
														}
													},
													"id": 803,
													"indexExpression": {
														"id": 802,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "7398:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7385:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$359_storage",
														"typeString": "struct Stakable.Stakeholder storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7351:55:1"
											},
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "monthAirdrop",
														"nameLocation": "7425:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "7417:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "37",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7506:6:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															}
														],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 807,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7441:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7441:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 809,
																			"name": "stakeholder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "7459:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
																				"typeString": "struct Stakable.Stakeholder storage pointer"
																			}
																		},
																		"id": 810,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestClaimDrop",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 358,
																		"src": "7459:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7441:45:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 812,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7440:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "7440:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7440:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7417:96:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "monthAirdrop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "7534:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7534:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d61626c65206f6e63652061206d6f6e7468",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7553:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efd349a77566eb94ebbc821a359a469680543a960a192a5a9004b9874a151b63",
																"typeString": "literal_string \"Claimable once a month\""
															},
															"value": "Claimable once a month"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efd349a77566eb94ebbc821a359a469680543a960a192a5a9004b9874a151b63",
																"typeString": "literal_string \"Claimable once a month\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7526:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7526:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "7526:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 825,
																		"name": "stakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "7599:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
																			"typeString": "struct Stakable.Stakeholder storage pointer"
																		}
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 354,
																	"src": "7599:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$351_storage",
																		"typeString": "struct Stakable.Stake storage ref"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "7599:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7626:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7599:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "7591:55:1"
											},
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "airdrop",
														"nameLocation": "7667:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "7659:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7659:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 835,
																					"name": "stakeholder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "7679:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
																						"typeString": "struct Stakable.Stakeholder storage pointer"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stake",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 354,
																				"src": "7679:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$351_storage",
																					"typeString": "struct Stakable.Stake storage ref"
																				}
																			},
																			"id": 837,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 338,
																			"src": "7679:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 838,
																			"name": "_airdropRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "7706:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7679:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 840,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7678:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7722:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "7678:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 843,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7677:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7659:67:1"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 845,
																"name": "stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "7737:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
																	"typeString": "struct Stakable.Stakeholder storage pointer"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "7737:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$351_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable_airdropRate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "7737:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "airdrop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "7779:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7737:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "7737:49:1"
											},
											{
												"expression": {
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 853,
															"name": "stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "7797:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$359_storage_ptr",
																"typeString": "struct Stakable.Stakeholder storage pointer"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "latestClaimDrop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 358,
														"src": "7797:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 856,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7827:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7827:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7797:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "7797:45:1"
											},
											{
												"expression": {
													"id": 860,
													"name": "airdrop",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "7862:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 861,
												"nodeType": "Return",
												"src": "7855:14:1"
											}
										]
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimAirdrop",
									"nameLocation": "7282:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "7304:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7296:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7295:17:1"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7331:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7330:9:1"
									},
									"scope": 864,
									"src": "7273:604:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "128:7752:1",
							"usedErrors": []
						}
					],
					"src": "40:7842:1"
				},
				"id": 1
			}
		}
	}
}