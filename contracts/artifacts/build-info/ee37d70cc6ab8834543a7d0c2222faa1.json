{
	"id": "ee37d70cc6ab8834543a7d0c2222faa1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Staking is ReentrancyGuard, Ownable {\n    /**\n     * @notice Constructor since this contract is not meant to be used without inheritance\n     * push once to stakeholders for it to work properly\n     */\n\n    mapping(uint256 => uint256) internal stakingPackage;\n\n    uint256 public stakingPenaltyRate;\n    uint256 public airdropRate;\n    uint256 public airdropSince;\n    bool public airdropStatus;\n\n    address public token_address;\n\n    constructor(address token) {\n        //Staking penalty and Airdrop in 0.1 times percentage\n        stakingPenaltyRate = 15;\n        airdropRate = 80;\n\n        token_address = token;\n\n        stakingPackage[90 days] = 6;\n        stakingPackage[180 days] = 7;\n        stakingPackage[365 days] = 8;\n    }\n\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes,\n     * A Stake will contain the users address, the amount staked and a timestamp,\n     * Since which is when the stake was made\n     */\n    struct Stake {\n        uint256 amount;\n        uint256 since;\n        uint256 rewardAPY;\n        uint256 releaseTime;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n        uint256 claimableAirdrop;\n        uint256 latestClaimDrop;\n    }\n\n    /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */\n    struct StakingSummary {\n        uint256 total_amount;\n        uint256 penalty;\n        Stake stake;\n    }\n\n    /**\n     * @notice\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => Stake) internal stakeholders;\n\n    /**\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        uint256 timestamp,\n        uint256 releaseTime\n    );\n\n    event PenaltyChanged(uint256 amount);\n    event AirdropChanged(uint256 amount);\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n\n    function _checkAirdropStatus() internal view {\n        require(airdropStatus == true, \"Airdrop not started\");\n    }\n\n    modifier airdropStatusTrue() {\n        _checkAirdropStatus();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    /**\n     * @notice\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n     * StakeID\n     */\n    function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {\n        // Simple check so that user does not stake 0\n        // require(amount > 0, \"Cannot stake nothing\");\n        // require(stakeholders[user].amount == 0, \"User is a staker\");\n\n        require(stakeholders[msg.sender].amount == 0, \"User is a Staker\");\n        require(stakingPackage[stakePeriod] != 0, \"Package not Found\");\n\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n\n        stakeholders[msg.sender] = Stake(\n            amount,\n            timestamp,\n            stakingPackage[stakePeriod],\n            (stakePeriod + timestamp),\n            0,\n            0,\n            0\n        );\n\n        SafeERC20.safeTransferFrom(\n            IERC20(token_address),\n            msg.sender,\n            address(this),\n            amount\n        );\n        // Emit an event that the stake has occured\n        emit Staked(msg.sender, amount, timestamp, (stakePeriod + timestamp));\n    }\n\n    function changePenaltyFee(uint256 amount) external onlyOwner {\n        // require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\");\n        require(amount <= 30, \"Penalty max 30%\");\n        stakingPenaltyRate = amount;\n        emit PenaltyChanged(amount);\n    }\n\n    function _calculateStakingDuration(uint256 since)\n        internal\n        view\n        returns (uint256)\n    {\n        // times by 1e24 so theres no missing value\n        return ((block.timestamp - since) * 1e24) / 365 days;\n    }\n\n    function _calculateStakeReward(Stake memory user_stake)\n        internal\n        view\n        returns (uint256)\n    {\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\n        return\n            (user_stake.amount *\n                user_stake.rewardAPY *\n                _calculateStakingDuration(user_stake.since)) / 1e26;\n    }\n\n    function _calculateStakingWithPenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        return (\n            amount - ((amount * stakingPenaltyRate) / 1000),\n            reward - ((reward * stakingPenaltyRate) / 1000)\n        );\n    }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the account\n     * Will also _calculateStakeReward and reset timer\n     */\n\n    function withdrawStake() external nonReentrant {\n        // TODO: can be simplified\n        // Grab user_index which is the index to use to grab the Stake[]\n        Stake memory user_stake = stakeholders[msg.sender];\n        require(user_stake.amount != 0, \"Staking not found\");\n\n        uint256 reward = _calculateStakeReward(user_stake);\n        delete stakeholders[msg.sender];\n\n        if (user_stake.releaseTime > block.timestamp) {\n            (\n                uint256 amount_reduced,\n                uint256 reward_reduced\n            ) = _calculateStakingWithPenalty(user_stake.amount, reward);\n\n            SafeERC20.safeTransfer(\n                IERC20(token_address),\n                msg.sender,\n                (amount_reduced + reward_reduced)\n            );\n        } else {\n            SafeERC20.safeTransfer(\n                IERC20(token_address),\n                msg.sender,\n                (user_stake.amount + reward)\n            );\n        }\n    }\n\n    function hasStake() external view returns (StakingSummary memory) {\n        Stake memory user_stake = stakeholders[msg.sender];\n        require(user_stake.amount != 0, \"Staking not found\");\n        StakingSummary memory summary = StakingSummary(0, 0, user_stake);\n\n        uint256 reward = _calculateStakeReward(user_stake);\n\n        if (summary.stake.releaseTime > block.timestamp) {\n            summary.penalty =\n                ((user_stake.amount * stakingPenaltyRate) / 1000) +\n                ((reward * stakingPenaltyRate) / 1000);\n        }\n\n        if (calculateWeek(user_stake.latestClaimDrop) > 0) {\n            uint256 airdrop = _calculateAirdrop(user_stake.amount);\n            summary.stake.claimableAirdrop = airdrop;\n        } else {\n            summary.stake.claimableAirdrop = 0;\n        }\n\n        summary.stake.claimable = reward;\n        summary.total_amount = user_stake.amount;\n\n        return summary;\n    }\n\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\n\n    function startAirdrop() external onlyOwner {\n        airdropSince = block.timestamp;\n        airdropStatus = true;\n    }\n\n    function changeAirdropPercentage(uint256 amount) external onlyOwner {\n        require(amount <= 200, \"Airdrop max 20%\");\n        airdropRate = amount;\n        emit AirdropChanged(amount);\n    }\n\n    function blockTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    function calculateWeek(uint256 timestamp) public view returns (uint256) {\n        return (block.timestamp - timestamp) / 7 days;\n    }\n\n    function _calculateAirdrop(uint256 stakeAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\n    }\n\n    function claimAirdrop() external airdropStatusTrue {\n        // TODO: can be simplified if using address\n        Stake storage user_stake = stakeholders[msg.sender];\n\n        require(user_stake.amount != 0, \"Staking not found\");\n        uint256 latestClaim = calculateWeek(user_stake.latestClaimDrop);\n\n        if (user_stake.amount > 0) {\n            require(latestClaim != 0, \"Claimable once a week\");\n\n            user_stake.claimableAirdrop = 0;\n            user_stake.latestClaimDrop = block.timestamp;\n\n            SafeERC20.safeTransfer(\n                IERC20(token_address),\n                msg.sender,\n                _calculateAirdrop(user_stake.amount)\n            );\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xBF PUSH20 0xC3865EAAF80D277DD1C60B6B2E822B5A3D224D47 DUP14 DUP5 0xE6 EQ SWAP10 0xCE SWAP9 SUB DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xBF PUSH20 0xC3865EAAF80D277DD1C60B6B2E822B5A3D224D47 DUP14 DUP5 0xE6 EQ SWAP10 0xCE SWAP9 SUB DUP1 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006bf73c3865eaaf80d277dd1c60b6b2e822b5a3d224d478d84e61499ce98038064736f6c634300080b0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xC SUB 0x4A DUP11 0xC SWAP13 BLOCKHASH 0xEB BALANCE PUSH7 0xD9FB5A40DC6087 SLOAD DUP4 SWAP3 EQ BYTE PUSH16 0xF32CC1C40F87B764736F6C634300080B STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xC SUB 0x4A DUP11 0xC SWAP13 BLOCKHASH 0xEB BALANCE PUSH7 0xD9FB5A40DC6087 SLOAD DUP4 SWAP3 EQ BYTE PUSH16 0xF32CC1C40F87B764736F6C634300080B STOP CALLER ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220079c0c034a8a0c9c40eb3166d9fb5a40dc6087548392141a6ff32cc1c40f87b764736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "calculateWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimableAirdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "latestClaimDrop",
													"type": "uint256"
												}
											],
											"internalType": "struct Staking.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Staking.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token_address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":247:9093  contract Staking is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":692:993  constructor(address token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/Staking.sol\":812:814  15 */\n  0x0f\n    /* \"contracts/Staking.sol\":791:809  stakingPenaltyRate */\n  0x03\n    /* \"contracts/Staking.sol\":791:814  stakingPenaltyRate = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":838:840  80 */\n  0x50\n    /* \"contracts/Staking.sol\":824:835  airdropRate */\n  0x04\n    /* \"contracts/Staking.sol\":824:840  airdropRate = 80 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":867:872  token */\n  dup1\n    /* \"contracts/Staking.sol\":851:864  token_address */\n  0x06\n  0x01\n    /* \"contracts/Staking.sol\":851:872  token_address = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":909:910  6 */\n  0x06\n    /* \"contracts/Staking.sol\":883:897  stakingPackage */\n  0x02\n    /* \"contracts/Staking.sol\":883:906  stakingPackage[90 days] */\n  0x00\n    /* \"contracts/Staking.sol\":898:905  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":883:906  stakingPackage[90 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Staking.sol\":883:910  stakingPackage[90 days] = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":947:948  7 */\n  0x07\n    /* \"contracts/Staking.sol\":920:934  stakingPackage */\n  0x02\n    /* \"contracts/Staking.sol\":920:944  stakingPackage[180 days] */\n  0x00\n    /* \"contracts/Staking.sol\":935:943  180 days */\n  0xed4e00\n    /* \"contracts/Staking.sol\":920:944  stakingPackage[180 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Staking.sol\":920:948  stakingPackage[180 days] = 7 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":985:986  8 */\n  0x08\n    /* \"contracts/Staking.sol\":958:972  stakingPackage */\n  0x02\n    /* \"contracts/Staking.sol\":958:982  stakingPackage[365 days] */\n  0x00\n    /* \"contracts/Staking.sol\":973:981  365 days */\n  0x01e13380\n    /* \"contracts/Staking.sol\":958:982  stakingPackage[365 days] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Staking.sol\":958:986  stakingPackage[365 days] = 8 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":692:993  constructor(address token) {... */\n  pop\n    /* \"contracts/Staking.sol\":247:9093  contract Staking is ReentrancyGuard, Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":932:1051   */\ntag_37:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_39\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":247:9093  contract Staking is ReentrancyGuard, Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":247:9093  contract Staking is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbed9d861\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbed9d861\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd2a569c3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5dbdf1b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xadb61832\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb5d9df83\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x7b0472f0\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8891cf0d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8c63f97f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8c8e8fee\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x10486b6a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2cf1a5fb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5b88349d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":6602:7533  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":625:650  bool public airdropStatus */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8396:9091  function claimAirdrop() external airdropStatusTrue {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Staking.sol\":2931:4098  function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Staking.sol\":560:586  uint256 public airdropRate */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4104:4370  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Staking.sol\":657:685  address public token_address */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7970:8065  function blockTimestamp() public view returns (uint256) {... */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":8071:8205  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":592:619  uint256 public airdropSince */\n    tag_14:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5628:6596  function withdrawStake() external nonReentrant {... */\n    tag_15:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Staking.sol\":521:554  uint256 public stakingPenaltyRate */\n    tag_16:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7645:7765  function startAirdrop() external onlyOwner {... */\n    tag_17:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/Staking.sol\":7771:7964  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/Staking.sol\":6602:7533  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_24:\n        /* \"contracts/Staking.sol\":6645:6666  StakingSummary memory */\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/Staking.sol\":6678:6701  Stake memory user_stake */\n      0x00\n        /* \"contracts/Staking.sol\":6704:6716  stakeholders */\n      0x07\n        /* \"contracts/Staking.sol\":6704:6728  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":6717:6727  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6704:6728  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":6678:6728  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6767:6768  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6746:6756  user_stake */\n      dup2\n        /* \"contracts/Staking.sol\":6746:6763  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":6746:6768  user_stake.amount != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":6738:6790  require(user_stake.amount != 0, \"Staking not found\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/Staking.sol\":6800:6829  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Staking.sol\":6832:6864  StakingSummary(0, 0, user_stake) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Staking.sol\":6847:6848  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6832:6864  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":6850:6851  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6832:6864  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":6853:6863  user_stake */\n      dup4\n        /* \"contracts/Staking.sol\":6832:6864  StakingSummary(0, 0, user_stake) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Staking.sol\":6800:6864  StakingSummary memory summary = StakingSummary(0, 0, user_stake) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6875:6889  uint256 reward */\n      0x00\n        /* \"contracts/Staking.sol\":6892:6925  _calculateStakeReward(user_stake) */\n      tag_84\n        /* \"contracts/Staking.sol\":6914:6924  user_stake */\n      dup4\n        /* \"contracts/Staking.sol\":6892:6913  _calculateStakeReward */\n      tag_85\n        /* \"contracts/Staking.sol\":6892:6925  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Staking.sol\":6875:6925  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6968:6983  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6940:6947  summary */\n      dup3\n        /* \"contracts/Staking.sol\":6940:6953  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Staking.sol\":6940:6965  summary.stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Staking.sol\":6940:6983  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Staking.sol\":6936:7150  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/Staking.sol\":7134:7138  1000 */\n      0x03e8\n        /* \"contracts/Staking.sol\":7112:7130  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":7103:7109  reward */\n      dup3\n        /* \"contracts/Staking.sol\":7103:7130  reward * stakingPenaltyRate */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/Staking.sol\":7102:7138  (reward * stakingPenaltyRate) / 1000 */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/Staking.sol\":7077:7081  1000 */\n      0x03e8\n        /* \"contracts/Staking.sol\":7055:7073  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":7035:7045  user_stake */\n      dup6\n        /* \"contracts/Staking.sol\":7035:7052  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":7035:7073  user_stake.amount * stakingPenaltyRate */\n      tag_91\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_91:\n        /* \"contracts/Staking.sol\":7034:7081  (user_stake.amount * stakingPenaltyRate) / 1000 */\n      tag_92\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_92:\n        /* \"contracts/Staking.sol\":7033:7139  ((user_stake.amount * stakingPenaltyRate) / 1000) +... */\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/Staking.sol\":6999:7006  summary */\n      dup3\n        /* \"contracts/Staking.sol\":6999:7014  summary.penalty */\n      0x20\n      add\n        /* \"contracts/Staking.sol\":6999:7139  summary.penalty =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6936:7150  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_86:\n        /* \"contracts/Staking.sol\":7208:7209  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7164:7205  calculateWeek(user_stake.latestClaimDrop) */\n      tag_95\n        /* \"contracts/Staking.sol\":7178:7188  user_stake */\n      dup5\n        /* \"contracts/Staking.sol\":7178:7204  user_stake.latestClaimDrop */\n      0xc0\n      add\n      mload\n        /* \"contracts/Staking.sol\":7164:7177  calculateWeek */\n      tag_59\n        /* \"contracts/Staking.sol\":7164:7205  calculateWeek(user_stake.latestClaimDrop) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Staking.sol\":7164:7209  calculateWeek(user_stake.latestClaimDrop) > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7160:7409  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/Staking.sol\":7225:7240  uint256 airdrop */\n      0x00\n        /* \"contracts/Staking.sol\":7243:7279  _calculateAirdrop(user_stake.amount) */\n      tag_97\n        /* \"contracts/Staking.sol\":7261:7271  user_stake */\n      dup5\n        /* \"contracts/Staking.sol\":7261:7278  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":7243:7260  _calculateAirdrop */\n      tag_98\n        /* \"contracts/Staking.sol\":7243:7279  _calculateAirdrop(user_stake.amount) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Staking.sol\":7225:7279  uint256 airdrop = _calculateAirdrop(user_stake.amount) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7326:7333  airdrop */\n      dup1\n        /* \"contracts/Staking.sol\":7293:7300  summary */\n      dup4\n        /* \"contracts/Staking.sol\":7293:7306  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Staking.sol\":7293:7323  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Staking.sol\":7293:7333  summary.stake.claimableAirdrop = airdrop */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":7211:7344  {... */\n      pop\n        /* \"contracts/Staking.sol\":7160:7409  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n      jump(tag_99)\n    tag_96:\n        /* \"contracts/Staking.sol\":7397:7398  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7364:7371  summary */\n      dup3\n        /* \"contracts/Staking.sol\":7364:7377  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Staking.sol\":7364:7394  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Staking.sol\":7364:7398  summary.stake.claimableAirdrop = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":7160:7409  if (calculateWeek(user_stake.latestClaimDrop) > 0) {... */\n    tag_99:\n        /* \"contracts/Staking.sol\":7445:7451  reward */\n      dup1\n        /* \"contracts/Staking.sol\":7419:7426  summary */\n      dup3\n        /* \"contracts/Staking.sol\":7419:7432  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Staking.sol\":7419:7442  summary.stake.claimable */\n      0x80\n      add\n        /* \"contracts/Staking.sol\":7419:7451  summary.stake.claimable = reward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":7484:7494  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":7484:7501  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":7461:7468  summary */\n      dup3\n        /* \"contracts/Staking.sol\":7461:7481  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":7461:7501  summary.total_amount = user_stake.amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":7519:7526  summary */\n      dup2\n        /* \"contracts/Staking.sol\":7512:7526  return summary */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6602:7533  function hasStake() external view returns (StakingSummary memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":625:650  bool public airdropStatus */\n    tag_28:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":8396:9091  function claimAirdrop() external airdropStatusTrue {... */\n    tag_32:\n        /* \"contracts/Staking.sol\":2575:2596  _checkAirdropStatus() */\n      tag_101\n        /* \"contracts/Staking.sol\":2575:2594  _checkAirdropStatus */\n      tag_102\n        /* \"contracts/Staking.sol\":2575:2596  _checkAirdropStatus() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Staking.sol\":8509:8533  Stake storage user_stake */\n      0x00\n        /* \"contracts/Staking.sol\":8536:8548  stakeholders */\n      0x07\n        /* \"contracts/Staking.sol\":8536:8560  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8549:8559  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8536:8560  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8509:8560  Stake storage user_stake = stakeholders[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8600:8601  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8579:8589  user_stake */\n      dup2\n        /* \"contracts/Staking.sol\":8579:8596  user_stake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8579:8601  user_stake.amount != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":8571:8623  require(user_stake.amount != 0, \"Staking not found\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_83\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/Staking.sol\":8633:8652  uint256 latestClaim */\n      0x00\n        /* \"contracts/Staking.sol\":8655:8696  calculateWeek(user_stake.latestClaimDrop) */\n      tag_106\n        /* \"contracts/Staking.sol\":8669:8679  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":8669:8695  user_stake.latestClaimDrop */\n      0x06\n      add\n      sload\n        /* \"contracts/Staking.sol\":8655:8668  calculateWeek */\n      tag_59\n        /* \"contracts/Staking.sol\":8655:8696  calculateWeek(user_stake.latestClaimDrop) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/Staking.sol\":8633:8696  uint256 latestClaim = calculateWeek(user_stake.latestClaimDrop) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8731:8732  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8711:8721  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":8711:8728  user_stake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8711:8732  user_stake.amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8707:9085  if (user_stake.amount > 0) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/Staking.sol\":8771:8772  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8756:8767  latestClaim */\n      dup2\n        /* \"contracts/Staking.sol\":8756:8772  latestClaim != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":8748:8798  require(latestClaim != 0, \"Claimable once a week\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Staking.sol\":8843:8844  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8813:8823  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":8813:8840  user_stake.claimableAirdrop */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":8813:8844  user_stake.claimableAirdrop = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8887:8902  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":8858:8868  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":8858:8884  user_stake.latestClaimDrop */\n      0x06\n      add\n        /* \"contracts/Staking.sol\":8858:8902  user_stake.latestClaimDrop = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8917:9074  SafeERC20.safeTransfer(... */\n      tag_111\n        /* \"contracts/Staking.sol\":8964:8977  token_address */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8996:9006  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":9024:9060  _calculateAirdrop(user_stake.amount) */\n      tag_112\n        /* \"contracts/Staking.sol\":9042:9052  user_stake */\n      dup6\n        /* \"contracts/Staking.sol\":9042:9059  user_stake.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":9024:9041  _calculateAirdrop */\n      tag_98\n        /* \"contracts/Staking.sol\":9024:9060  _calculateAirdrop(user_stake.amount) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Staking.sol\":8917:8939  SafeERC20.safeTransfer */\n      tag_113\n        /* \"contracts/Staking.sol\":8917:9074  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Staking.sol\":8707:9085  if (user_stake.amount > 0) {... */\n    tag_107:\n        /* \"contracts/Staking.sol\":8447:9091  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":8396:9091  function claimAirdrop() external airdropStatusTrue {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":2931:4098  function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3241:3242  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3206:3218  stakeholders */\n      0x07\n        /* \"contracts/Staking.sol\":3206:3230  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3219:3229  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3206:3230  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3206:3237  stakeholders[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":3206:3242  stakeholders[msg.sender].amount == 0 */\n      eq\n        /* \"contracts/Staking.sol\":3198:3263  require(stakeholders[msg.sender].amount == 0, \"User is a Staker\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/Staking.sol\":3312:3313  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3281:3295  stakingPackage */\n      0x02\n        /* \"contracts/Staking.sol\":3281:3308  stakingPackage[stakePeriod] */\n      0x00\n        /* \"contracts/Staking.sol\":3296:3307  stakePeriod */\n      dup4\n        /* \"contracts/Staking.sol\":3281:3308  stakingPackage[stakePeriod] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":3281:3313  stakingPackage[stakePeriod] != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":3273:3335  require(stakingPackage[stakePeriod] != 0, \"Package not Found\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/Staking.sol\":3433:3450  uint256 timestamp */\n      0x00\n        /* \"contracts/Staking.sol\":3453:3468  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3433:3468  uint256 timestamp = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Staking.sol\":3643:3649  amount */\n      dup5\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":3663:3672  timestamp */\n      dup3\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":3686:3700  stakingPackage */\n      0x02\n        /* \"contracts/Staking.sol\":3686:3713  stakingPackage[stakePeriod] */\n      0x00\n        /* \"contracts/Staking.sol\":3701:3712  stakePeriod */\n      dup6\n        /* \"contracts/Staking.sol\":3686:3713  stakingPackage[stakePeriod] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":3742:3751  timestamp */\n      dup3\n        /* \"contracts/Staking.sol\":3728:3739  stakePeriod */\n      dup5\n        /* \"contracts/Staking.sol\":3728:3751  stakePeriod + timestamp */\n      tag_135\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_135:\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":3766:3767  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":3781:3782  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Staking.sol\":3796:3797  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3624:3807  Stake(... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Staking.sol\":3597:3609  stakeholders */\n      0x07\n        /* \"contracts/Staking.sol\":3597:3621  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3610:3620  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3597:3621  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3597:3807  stakeholders[msg.sender] = Stake(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/Staking.sol\":3818:3960  SafeERC20.safeTransferFrom(... */\n      tag_136\n        /* \"contracts/Staking.sol\":3865:3878  token_address */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3893:3903  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3925:3929  this */\n      address\n        /* \"contracts/Staking.sol\":3944:3950  amount */\n      dup7\n        /* \"contracts/Staking.sol\":3818:3844  SafeERC20.safeTransferFrom */\n      tag_137\n        /* \"contracts/Staking.sol\":3818:3960  SafeERC20.safeTransferFrom(... */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Staking.sol\":4034:4044  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4027:4091  Staked(msg.sender, amount, timestamp, (stakePeriod + timestamp)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/Staking.sol\":4046:4052  amount */\n      dup5\n        /* \"contracts/Staking.sol\":4054:4063  timestamp */\n      dup4\n        /* \"contracts/Staking.sol\":4080:4089  timestamp */\n      dup5\n        /* \"contracts/Staking.sol\":4066:4077  stakePeriod */\n      dup7\n        /* \"contracts/Staking.sol\":4066:4089  stakePeriod + timestamp */\n      tag_138\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_138:\n        /* \"contracts/Staking.sol\":4027:4091  Staked(msg.sender, amount, timestamp, (stakePeriod + timestamp)) */\n      mload(0x40)\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":3005:4098  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2931:4098  function stake(uint256 amount, uint256 stakePeriod) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":560:586  uint256 public airdropRate */\n    tag_40:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":4104:4370  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_120\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/Staking.sol\":4267:4269  30 */\n      0x1e\n        /* \"contracts/Staking.sol\":4257:4263  amount */\n      dup2\n        /* \"contracts/Staking.sol\":4257:4269  amount <= 30 */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":4249:4289  require(amount <= 30, \"Penalty max 30%\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/Staking.sol\":4320:4326  amount */\n      dup1\n        /* \"contracts/Staking.sol\":4299:4317  stakingPenaltyRate */\n      0x03\n        /* \"contracts/Staking.sol\":4299:4326  stakingPenaltyRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4341:4363  PenaltyChanged(amount) */\n      0xcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9\n        /* \"contracts/Staking.sol\":4356:4362  amount */\n      dup2\n        /* \"contracts/Staking.sol\":4341:4363  PenaltyChanged(amount) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":4104:4370  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":657:685  address public token_address */\n    tag_48:\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7970:8065  function blockTimestamp() public view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/Staking.sol\":8017:8024  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":8043:8058  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":8036:8058  return block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7970:8065  function blockTimestamp() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":8071:8205  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n    tag_59:\n        /* \"contracts/Staking.sol\":8134:8141  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":8192:8198  7 days */\n      0x093a80\n        /* \"contracts/Staking.sol\":8179:8188  timestamp */\n      dup3\n        /* \"contracts/Staking.sol\":8161:8176  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":8161:8188  block.timestamp - timestamp */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/Staking.sol\":8160:8198  (block.timestamp - timestamp) / 7 days */\n      tag_156\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_156:\n        /* \"contracts/Staking.sol\":8153:8198  return (block.timestamp - timestamp) / 7 days */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8071:8205  function calculateWeek(uint256 timestamp) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":592:619  uint256 public airdropSince */\n    tag_62:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":5628:6596  function withdrawStake() external nonReentrant {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_127\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5793:5816  Stake memory user_stake */\n      0x00\n        /* \"contracts/Staking.sol\":5819:5831  stakeholders */\n      0x07\n        /* \"contracts/Staking.sol\":5819:5843  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5832:5842  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5819:5843  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5793:5843  Stake memory user_stake = stakeholders[msg.sender] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5882:5883  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5861:5871  user_stake */\n      dup2\n        /* \"contracts/Staking.sol\":5861:5878  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":5861:5883  user_stake.amount != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":5853:5905  require(user_stake.amount != 0, \"Staking not found\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_83\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/Staking.sol\":5916:5930  uint256 reward */\n      0x00\n        /* \"contracts/Staking.sol\":5933:5966  _calculateStakeReward(user_stake) */\n      tag_163\n        /* \"contracts/Staking.sol\":5955:5965  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":5933:5954  _calculateStakeReward */\n      tag_85\n        /* \"contracts/Staking.sol\":5933:5966  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Staking.sol\":5916:5966  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5983:5995  stakeholders */\n      0x07\n        /* \"contracts/Staking.sol\":5983:6007  stakeholders[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5996:6006  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5983:6007  stakeholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Staking.sol\":5976:6007  delete stakeholders[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x06\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6047:6062  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6022:6032  user_stake */\n      dup3\n        /* \"contracts/Staking.sol\":6022:6044  user_stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Staking.sol\":6022:6062  user_stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Staking.sol\":6018:6590  if (user_stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"contracts/Staking.sol\":6096:6118  uint256 amount_reduced */\n      0x00\n        /* \"contracts/Staking.sol\":6136:6158  uint256 reward_reduced */\n      dup1\n        /* \"contracts/Staking.sol\":6175:6230  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      tag_165\n        /* \"contracts/Staking.sol\":6204:6214  user_stake */\n      dup5\n        /* \"contracts/Staking.sol\":6204:6221  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":6223:6229  reward */\n      dup5\n        /* \"contracts/Staking.sol\":6175:6203  _calculateStakingWithPenalty */\n      tag_166\n        /* \"contracts/Staking.sol\":6175:6230  _calculateStakingWithPenalty(user_stake.amount, reward) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Staking.sol\":6078:6230  (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":6245:6399  SafeERC20.safeTransfer(... */\n      tag_167\n        /* \"contracts/Staking.sol\":6292:6305  token_address */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6324:6334  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6370:6384  reward_reduced */\n      dup4\n        /* \"contracts/Staking.sol\":6353:6367  amount_reduced */\n      dup6\n        /* \"contracts/Staking.sol\":6353:6384  amount_reduced + reward_reduced */\n      tag_168\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_168:\n        /* \"contracts/Staking.sol\":6245:6267  SafeERC20.safeTransfer */\n      tag_113\n        /* \"contracts/Staking.sol\":6245:6399  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Staking.sol\":6064:6410  {... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":6018:6590  if (user_stake.releaseTime > block.timestamp) {... */\n      jump(tag_169)\n    tag_164:\n        /* \"contracts/Staking.sol\":6430:6579  SafeERC20.safeTransfer(... */\n      tag_170\n        /* \"contracts/Staking.sol\":6477:6490  token_address */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6509:6519  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6558:6564  reward */\n      dup4\n        /* \"contracts/Staking.sol\":6538:6548  user_stake */\n      dup6\n        /* \"contracts/Staking.sol\":6538:6555  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":6538:6564  user_stake.amount + reward */\n      tag_171\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_171:\n        /* \"contracts/Staking.sol\":6430:6452  SafeERC20.safeTransfer */\n      tag_113\n        /* \"contracts/Staking.sol\":6430:6579  SafeERC20.safeTransfer(... */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Staking.sol\":6018:6590  if (user_stake.releaseTime > block.timestamp) {... */\n    tag_169:\n        /* \"contracts/Staking.sol\":5675:6596  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":5628:6596  function withdrawStake() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":521:554  uint256 public stakingPenaltyRate */\n    tag_67:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":7645:7765  function startAirdrop() external onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_120\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/Staking.sol\":7713:7728  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":7698:7710  airdropSince */\n      0x05\n        /* \"contracts/Staking.sol\":7698:7728  airdropSince = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7754:7758  true */\n      0x01\n        /* \"contracts/Staking.sol\":7738:7751  airdropStatus */\n      0x06\n      0x00\n        /* \"contracts/Staking.sol\":7738:7758  airdropStatus = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7645:7765  function startAirdrop() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":7771:7964  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_120\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/Staking.sol\":7867:7870  200 */\n      0xc8\n        /* \"contracts/Staking.sol\":7857:7863  amount */\n      dup2\n        /* \"contracts/Staking.sol\":7857:7870  amount <= 200 */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":7849:7890  require(amount <= 200, \"Airdrop max 20%\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/Staking.sol\":7914:7920  amount */\n      dup1\n        /* \"contracts/Staking.sol\":7900:7911  airdropRate */\n      0x04\n        /* \"contracts/Staking.sol\":7900:7920  airdropRate = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7935:7957  AirdropChanged(amount) */\n      0xcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e\n        /* \"contracts/Staking.sol\":7950:7956  amount */\n      dup2\n        /* \"contracts/Staking.sol\":7935:7957  AirdropChanged(amount) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7771:7964  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_120\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4613:4980  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_85:\n        /* \"contracts/Staking.sol\":4716:4723  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4969:4973  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Staking.sol\":4922:4965  _calculateStakingDuration(user_stake.since) */\n      tag_199\n        /* \"contracts/Staking.sol\":4948:4958  user_stake */\n      dup4\n        /* \"contracts/Staking.sol\":4948:4964  user_stake.since */\n      0x20\n      add\n      mload\n        /* \"contracts/Staking.sol\":4922:4947  _calculateStakingDuration */\n      tag_200\n        /* \"contracts/Staking.sol\":4922:4965  _calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/Staking.sol\":4883:4893  user_stake */\n      dup4\n        /* \"contracts/Staking.sol\":4883:4903  user_stake.rewardAPY */\n      0x40\n      add\n      mload\n        /* \"contracts/Staking.sol\":4847:4857  user_stake */\n      dup5\n        /* \"contracts/Staking.sol\":4847:4864  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Staking.sol\":4847:4903  user_stake.amount *... */\n      tag_201\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_201:\n        /* \"contracts/Staking.sol\":4847:4965  user_stake.amount *... */\n      tag_202\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_202:\n        /* \"contracts/Staking.sol\":4846:4973  (user_stake.amount *... */\n      tag_203\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_203:\n        /* \"contracts/Staking.sol\":4827:4973  return... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4613:4980  function _calculateStakeReward(Stake memory user_stake)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8211:8390  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_98:\n        /* \"contracts/Staking.sol\":8306:8313  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":8375:8383  52 weeks */\n      0x01dfe200\n        /* \"contracts/Staking.sol\":8367:8371  1000 */\n      0x03e8\n        /* \"contracts/Staking.sol\":8352:8363  airdropRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":8338:8349  stakeAmount */\n      dup5\n        /* \"contracts/Staking.sol\":8338:8363  stakeAmount * airdropRate */\n      tag_205\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_205:\n        /* \"contracts/Staking.sol\":8337:8371  (stakeAmount * airdropRate) / 1000 */\n      tag_206\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_206:\n        /* \"contracts/Staking.sol\":8336:8383  ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      tag_207\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_207:\n        /* \"contracts/Staking.sol\":8329:8383  return ((stakeAmount * airdropRate) / 1000) / 52 weeks */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8211:8390  function _calculateAirdrop(uint256 stakeAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2415:2530  function _checkAirdropStatus() internal view {... */\n    tag_102:\n        /* \"contracts/Staking.sol\":2495:2499  true */\n      0x01\n        /* \"contracts/Staking.sol\":2478:2499  airdropStatus == true */\n      iszero\n      iszero\n        /* \"contracts/Staking.sol\":2478:2491  airdropStatus */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Staking.sol\":2478:2499  airdropStatus == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Staking.sol\":2470:2523  require(airdropStatus == true, \"Airdrop not started\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/Staking.sol\":2415:2530  function _checkAirdropStatus() internal view {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:890  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":892:897  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1129:1133  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1135:1137  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1144  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_221\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4986:5281  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_166:\n        /* \"contracts/Staking.sol\":5103:5110  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5112:5119  uint256 */\n      dup1\n        /* \"contracts/Staking.sol\":5198:5202  1000 */\n      0x03e8\n        /* \"contracts/Staking.sol\":5176:5194  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":5167:5173  amount */\n      dup6\n        /* \"contracts/Staking.sol\":5167:5194  amount * stakingPenaltyRate */\n      tag_224\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_224:\n        /* \"contracts/Staking.sol\":5166:5202  (amount * stakingPenaltyRate) / 1000 */\n      tag_225\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_225:\n        /* \"contracts/Staking.sol\":5156:5162  amount */\n      dup5\n        /* \"contracts/Staking.sol\":5156:5203  amount - ((amount * stakingPenaltyRate) / 1000) */\n      tag_226\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_226:\n        /* \"contracts/Staking.sol\":5259:5263  1000 */\n      0x03e8\n        /* \"contracts/Staking.sol\":5237:5255  stakingPenaltyRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":5228:5234  reward */\n      dup6\n        /* \"contracts/Staking.sol\":5228:5255  reward * stakingPenaltyRate */\n      tag_227\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_227:\n        /* \"contracts/Staking.sol\":5227:5263  (reward * stakingPenaltyRate) / 1000 */\n      tag_228\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_228:\n        /* \"contracts/Staking.sol\":5217:5223  reward */\n      dup5\n        /* \"contracts/Staking.sol\":5217:5264  reward - ((reward * stakingPenaltyRate) / 1000) */\n      tag_229\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_229:\n        /* \"contracts/Staking.sol\":5135:5274  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":4986:5281  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4376:4607  function _calculateStakingDuration(uint256 since)... */\n    tag_200:\n        /* \"contracts/Staking.sol\":4473:4480  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4592:4600  365 days */\n      0x01e13380\n        /* \"contracts/Staking.sol\":4584:4588  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Staking.sol\":4575:4580  since */\n      dup4\n        /* \"contracts/Staking.sol\":4557:4572  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4557:4580  block.timestamp - since */\n      tag_231\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_231:\n        /* \"contracts/Staking.sol\":4556:4588  (block.timestamp - since) * 1e24 */\n      tag_232\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_232:\n        /* \"contracts/Staking.sol\":4555:4600  ((block.timestamp - since) * 1e24) / 365 days */\n      tag_233\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_233:\n        /* \"contracts/Staking.sol\":4548:4600  return ((block.timestamp - since) * 1e24) / 365 days */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4376:4607  function _calculateStakingDuration(uint256 since)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_236\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3755:3756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3745  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3277:3913  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_244\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_245\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_251\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_259\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_258)\n    tag_259:\n      0x60\n      swap2\n      pop\n    tag_258:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_260\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_263)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_263:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_79:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_270\n      tag_271\n      jump\t// in\n    tag_270:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_271:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_272:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:198   */\n    tag_273:\n        /* \"#utility.yul\":167:191   */\n      tag_330\n        /* \"#utility.yul\":185:190   */\n      dup2\n        /* \"#utility.yul\":167:191   */\n      tag_272\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":162:165   */\n      dup3\n        /* \"#utility.yul\":155:192   */\n      mstore\n        /* \"#utility.yul\":90:198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":256:1660   */\n    tag_274:\n        /* \"#utility.yul\":387:391   */\n      0xe0\n        /* \"#utility.yul\":382:385   */\n      dup3\n        /* \"#utility.yul\":378:392   */\n      add\n        /* \"#utility.yul\":476:480   */\n      0x00\n        /* \"#utility.yul\":469:474   */\n      dup3\n        /* \"#utility.yul\":465:481   */\n      add\n        /* \"#utility.yul\":459:482   */\n      mload\n        /* \"#utility.yul\":495:558   */\n      tag_332\n        /* \"#utility.yul\":552:556   */\n      0x00\n        /* \"#utility.yul\":547:550   */\n      dup6\n        /* \"#utility.yul\":543:557   */\n      add\n        /* \"#utility.yul\":529:541   */\n      dup3\n        /* \"#utility.yul\":495:558   */\n      tag_273\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":402:568   */\n      pop\n        /* \"#utility.yul\":651:655   */\n      0x20\n        /* \"#utility.yul\":644:649   */\n      dup3\n        /* \"#utility.yul\":640:656   */\n      add\n        /* \"#utility.yul\":634:657   */\n      mload\n        /* \"#utility.yul\":670:733   */\n      tag_333\n        /* \"#utility.yul\":727:731   */\n      0x20\n        /* \"#utility.yul\":722:725   */\n      dup6\n        /* \"#utility.yul\":718:732   */\n      add\n        /* \"#utility.yul\":704:716   */\n      dup3\n        /* \"#utility.yul\":670:733   */\n      tag_273\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":578:743   */\n      pop\n        /* \"#utility.yul\":830:834   */\n      0x40\n        /* \"#utility.yul\":823:828   */\n      dup3\n        /* \"#utility.yul\":819:835   */\n      add\n        /* \"#utility.yul\":813:836   */\n      mload\n        /* \"#utility.yul\":849:912   */\n      tag_334\n        /* \"#utility.yul\":906:910   */\n      0x40\n        /* \"#utility.yul\":901:904   */\n      dup6\n        /* \"#utility.yul\":897:911   */\n      add\n        /* \"#utility.yul\":883:895   */\n      dup3\n        /* \"#utility.yul\":849:912   */\n      tag_273\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":753:922   */\n      pop\n        /* \"#utility.yul\":1011:1015   */\n      0x60\n        /* \"#utility.yul\":1004:1009   */\n      dup3\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":994:1017   */\n      mload\n        /* \"#utility.yul\":1030:1093   */\n      tag_335\n        /* \"#utility.yul\":1087:1091   */\n      0x60\n        /* \"#utility.yul\":1082:1085   */\n      dup6\n        /* \"#utility.yul\":1078:1092   */\n      add\n        /* \"#utility.yul\":1064:1076   */\n      dup3\n        /* \"#utility.yul\":1030:1093   */\n      tag_273\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":932:1103   */\n      pop\n        /* \"#utility.yul\":1190:1194   */\n      0x80\n        /* \"#utility.yul\":1183:1188   */\n      dup3\n        /* \"#utility.yul\":1179:1195   */\n      add\n        /* \"#utility.yul\":1173:1196   */\n      mload\n        /* \"#utility.yul\":1209:1272   */\n      tag_336\n        /* \"#utility.yul\":1266:1270   */\n      0x80\n        /* \"#utility.yul\":1261:1264   */\n      dup6\n        /* \"#utility.yul\":1257:1271   */\n      add\n        /* \"#utility.yul\":1243:1255   */\n      dup3\n        /* \"#utility.yul\":1209:1272   */\n      tag_273\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1113:1282   */\n      pop\n        /* \"#utility.yul\":1376:1380   */\n      0xa0\n        /* \"#utility.yul\":1369:1374   */\n      dup3\n        /* \"#utility.yul\":1365:1381   */\n      add\n        /* \"#utility.yul\":1359:1382   */\n      mload\n        /* \"#utility.yul\":1395:1458   */\n      tag_337\n        /* \"#utility.yul\":1452:1456   */\n      0xa0\n        /* \"#utility.yul\":1447:1450   */\n      dup6\n        /* \"#utility.yul\":1443:1457   */\n      add\n        /* \"#utility.yul\":1429:1441   */\n      dup3\n        /* \"#utility.yul\":1395:1458   */\n      tag_273\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1292:1468   */\n      pop\n        /* \"#utility.yul\":1561:1565   */\n      0xc0\n        /* \"#utility.yul\":1554:1559   */\n      dup3\n        /* \"#utility.yul\":1550:1566   */\n      add\n        /* \"#utility.yul\":1544:1567   */\n      mload\n        /* \"#utility.yul\":1580:1643   */\n      tag_338\n        /* \"#utility.yul\":1637:1641   */\n      0xc0\n        /* \"#utility.yul\":1632:1635   */\n      dup6\n        /* \"#utility.yul\":1628:1642   */\n      add\n        /* \"#utility.yul\":1614:1626   */\n      dup3\n        /* \"#utility.yul\":1580:1643   */\n      tag_273\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1478:1653   */\n      pop\n        /* \"#utility.yul\":356:1660   */\n      pop\n        /* \"#utility.yul\":256:1660   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:2487   */\n    tag_275:\n        /* \"#utility.yul\":1895:1901   */\n      0x0120\n        /* \"#utility.yul\":1890:1893   */\n      dup3\n        /* \"#utility.yul\":1886:1902   */\n      add\n        /* \"#utility.yul\":1992:1996   */\n      0x00\n        /* \"#utility.yul\":1985:1990   */\n      dup3\n        /* \"#utility.yul\":1981:1997   */\n      add\n        /* \"#utility.yul\":1975:1998   */\n      mload\n        /* \"#utility.yul\":2011:2074   */\n      tag_340\n        /* \"#utility.yul\":2068:2072   */\n      0x00\n        /* \"#utility.yul\":2063:2066   */\n      dup6\n        /* \"#utility.yul\":2059:2073   */\n      add\n        /* \"#utility.yul\":2045:2057   */\n      dup3\n        /* \"#utility.yul\":2011:2074   */\n      tag_273\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1912:2084   */\n      pop\n        /* \"#utility.yul\":2169:2173   */\n      0x20\n        /* \"#utility.yul\":2162:2167   */\n      dup3\n        /* \"#utility.yul\":2158:2174   */\n      add\n        /* \"#utility.yul\":2152:2175   */\n      mload\n        /* \"#utility.yul\":2188:2251   */\n      tag_341\n        /* \"#utility.yul\":2245:2249   */\n      0x20\n        /* \"#utility.yul\":2240:2243   */\n      dup6\n        /* \"#utility.yul\":2236:2250   */\n      add\n        /* \"#utility.yul\":2222:2234   */\n      dup3\n        /* \"#utility.yul\":2188:2251   */\n      tag_273\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2094:2261   */\n      pop\n        /* \"#utility.yul\":2344:2348   */\n      0x40\n        /* \"#utility.yul\":2337:2342   */\n      dup3\n        /* \"#utility.yul\":2333:2349   */\n      add\n        /* \"#utility.yul\":2327:2350   */\n      mload\n        /* \"#utility.yul\":2363:2470   */\n      tag_342\n        /* \"#utility.yul\":2464:2468   */\n      0x40\n        /* \"#utility.yul\":2459:2462   */\n      dup6\n        /* \"#utility.yul\":2455:2469   */\n      add\n        /* \"#utility.yul\":2441:2453   */\n      dup3\n        /* \"#utility.yul\":2363:2470   */\n      tag_274\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2271:2480   */\n      pop\n        /* \"#utility.yul\":1864:2487   */\n      pop\n        /* \"#utility.yul\":1736:2487   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2493:2840   */\n    tag_26:\n        /* \"#utility.yul\":2648:2652   */\n      0x00\n        /* \"#utility.yul\":2686:2689   */\n      0x0120\n        /* \"#utility.yul\":2675:2684   */\n      dup3\n        /* \"#utility.yul\":2671:2690   */\n      add\n        /* \"#utility.yul\":2663:2690   */\n      swap1\n      pop\n        /* \"#utility.yul\":2700:2833   */\n      tag_344\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2819:2828   */\n      dup4\n        /* \"#utility.yul\":2815:2832   */\n      add\n        /* \"#utility.yul\":2806:2812   */\n      dup5\n        /* \"#utility.yul\":2700:2833   */\n      tag_275\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2493:2840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2936   */\n    tag_276:\n        /* \"#utility.yul\":2880:2887   */\n      0x00\n        /* \"#utility.yul\":2923:2928   */\n      dup2\n        /* \"#utility.yul\":2916:2929   */\n      iszero\n        /* \"#utility.yul\":2909:2930   */\n      iszero\n        /* \"#utility.yul\":2898:2930   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2942:3051   */\n    tag_277:\n        /* \"#utility.yul\":3023:3044   */\n      tag_347\n        /* \"#utility.yul\":3038:3043   */\n      dup2\n        /* \"#utility.yul\":3023:3044   */\n      tag_276\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3018:3021   */\n      dup3\n        /* \"#utility.yul\":3011:3045   */\n      mstore\n        /* \"#utility.yul\":2942:3051   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3057:3267   */\n    tag_30:\n        /* \"#utility.yul\":3144:3148   */\n      0x00\n        /* \"#utility.yul\":3182:3184   */\n      0x20\n        /* \"#utility.yul\":3171:3180   */\n      dup3\n        /* \"#utility.yul\":3167:3185   */\n      add\n        /* \"#utility.yul\":3159:3185   */\n      swap1\n      pop\n        /* \"#utility.yul\":3195:3260   */\n      tag_349\n        /* \"#utility.yul\":3257:3258   */\n      0x00\n        /* \"#utility.yul\":3246:3255   */\n      dup4\n        /* \"#utility.yul\":3242:3259   */\n      add\n        /* \"#utility.yul\":3233:3239   */\n      dup5\n        /* \"#utility.yul\":3195:3260   */\n      tag_277\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3057:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3354:3471   */\n    tag_279:\n        /* \"#utility.yul\":3463:3464   */\n      0x00\n        /* \"#utility.yul\":3460:3461   */\n      dup1\n        /* \"#utility.yul\":3453:3465   */\n      revert\n        /* \"#utility.yul\":3600:3722   */\n    tag_281:\n        /* \"#utility.yul\":3673:3697   */\n      tag_354\n        /* \"#utility.yul\":3691:3696   */\n      dup2\n        /* \"#utility.yul\":3673:3697   */\n      tag_272\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3666:3671   */\n      dup2\n        /* \"#utility.yul\":3663:3698   */\n      eq\n        /* \"#utility.yul\":3653:3716   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3712:3713   */\n      0x00\n        /* \"#utility.yul\":3709:3710   */\n      dup1\n        /* \"#utility.yul\":3702:3714   */\n      revert\n        /* \"#utility.yul\":3653:3716   */\n    tag_355:\n        /* \"#utility.yul\":3600:3722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3728:3867   */\n    tag_282:\n        /* \"#utility.yul\":3774:3779   */\n      0x00\n        /* \"#utility.yul\":3812:3818   */\n      dup2\n        /* \"#utility.yul\":3799:3819   */\n      calldataload\n        /* \"#utility.yul\":3790:3819   */\n      swap1\n      pop\n        /* \"#utility.yul\":3828:3861   */\n      tag_357\n        /* \"#utility.yul\":3855:3860   */\n      dup2\n        /* \"#utility.yul\":3828:3861   */\n      tag_281\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3728:3867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3873:4347   */\n    tag_37:\n        /* \"#utility.yul\":3941:3947   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      dup1\n        /* \"#utility.yul\":3998:4000   */\n      0x40\n        /* \"#utility.yul\":3986:3995   */\n      dup4\n        /* \"#utility.yul\":3977:3984   */\n      dup6\n        /* \"#utility.yul\":3973:3996   */\n      sub\n        /* \"#utility.yul\":3969:4001   */\n      slt\n        /* \"#utility.yul\":3966:4085   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":4004:4083   */\n      tag_360\n      tag_279\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3966:4085   */\n    tag_359:\n        /* \"#utility.yul\":4124:4125   */\n      0x00\n        /* \"#utility.yul\":4149:4202   */\n      tag_361\n        /* \"#utility.yul\":4194:4201   */\n      dup6\n        /* \"#utility.yul\":4185:4191   */\n      dup3\n        /* \"#utility.yul\":4174:4183   */\n      dup7\n        /* \"#utility.yul\":4170:4192   */\n      add\n        /* \"#utility.yul\":4149:4202   */\n      tag_282\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4139:4202   */\n      swap3\n      pop\n        /* \"#utility.yul\":4095:4212   */\n      pop\n        /* \"#utility.yul\":4251:4253   */\n      0x20\n        /* \"#utility.yul\":4277:4330   */\n      tag_362\n        /* \"#utility.yul\":4322:4329   */\n      dup6\n        /* \"#utility.yul\":4313:4319   */\n      dup3\n        /* \"#utility.yul\":4302:4311   */\n      dup7\n        /* \"#utility.yul\":4298:4320   */\n      add\n        /* \"#utility.yul\":4277:4330   */\n      tag_282\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4267:4330   */\n      swap2\n      pop\n        /* \"#utility.yul\":4222:4340   */\n      pop\n        /* \"#utility.yul\":3873:4347   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4353:4471   */\n    tag_283:\n        /* \"#utility.yul\":4440:4464   */\n      tag_364\n        /* \"#utility.yul\":4458:4463   */\n      dup2\n        /* \"#utility.yul\":4440:4464   */\n      tag_272\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4435:4438   */\n      dup3\n        /* \"#utility.yul\":4428:4465   */\n      mstore\n        /* \"#utility.yul\":4353:4471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4477:4699   */\n    tag_42:\n        /* \"#utility.yul\":4570:4574   */\n      0x00\n        /* \"#utility.yul\":4608:4610   */\n      0x20\n        /* \"#utility.yul\":4597:4606   */\n      dup3\n        /* \"#utility.yul\":4593:4611   */\n      add\n        /* \"#utility.yul\":4585:4611   */\n      swap1\n      pop\n        /* \"#utility.yul\":4621:4692   */\n      tag_366\n        /* \"#utility.yul\":4689:4690   */\n      0x00\n        /* \"#utility.yul\":4678:4687   */\n      dup4\n        /* \"#utility.yul\":4674:4691   */\n      add\n        /* \"#utility.yul\":4665:4671   */\n      dup5\n        /* \"#utility.yul\":4621:4692   */\n      tag_283\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4477:4699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4705:5034   */\n    tag_45:\n        /* \"#utility.yul\":4764:4770   */\n      0x00\n        /* \"#utility.yul\":4813:4815   */\n      0x20\n        /* \"#utility.yul\":4801:4810   */\n      dup3\n        /* \"#utility.yul\":4792:4799   */\n      dup5\n        /* \"#utility.yul\":4788:4811   */\n      sub\n        /* \"#utility.yul\":4784:4816   */\n      slt\n        /* \"#utility.yul\":4781:4900   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4819:4898   */\n      tag_369\n      tag_279\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4781:4900   */\n    tag_368:\n        /* \"#utility.yul\":4939:4940   */\n      0x00\n        /* \"#utility.yul\":4964:5017   */\n      tag_370\n        /* \"#utility.yul\":5009:5016   */\n      dup5\n        /* \"#utility.yul\":5000:5006   */\n      dup3\n        /* \"#utility.yul\":4989:4998   */\n      dup6\n        /* \"#utility.yul\":4985:5007   */\n      add\n        /* \"#utility.yul\":4964:5017   */\n      tag_282\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4954:5017   */\n      swap2\n      pop\n        /* \"#utility.yul\":4910:5027   */\n      pop\n        /* \"#utility.yul\":4705:5034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5040:5166   */\n    tag_284:\n        /* \"#utility.yul\":5077:5084   */\n      0x00\n        /* \"#utility.yul\":5117:5159   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5110:5115   */\n      dup3\n        /* \"#utility.yul\":5106:5160   */\n      and\n        /* \"#utility.yul\":5095:5160   */\n      swap1\n      pop\n        /* \"#utility.yul\":5040:5166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5172:5268   */\n    tag_285:\n        /* \"#utility.yul\":5209:5216   */\n      0x00\n        /* \"#utility.yul\":5238:5262   */\n      tag_373\n        /* \"#utility.yul\":5256:5261   */\n      dup3\n        /* \"#utility.yul\":5238:5262   */\n      tag_284\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5227:5262   */\n      swap1\n      pop\n        /* \"#utility.yul\":5172:5268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5274:5392   */\n    tag_286:\n        /* \"#utility.yul\":5361:5385   */\n      tag_375\n        /* \"#utility.yul\":5379:5384   */\n      dup2\n        /* \"#utility.yul\":5361:5385   */\n      tag_285\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5356:5359   */\n      dup3\n        /* \"#utility.yul\":5349:5386   */\n      mstore\n        /* \"#utility.yul\":5274:5392   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5398:5620   */\n    tag_50:\n        /* \"#utility.yul\":5491:5495   */\n      0x00\n        /* \"#utility.yul\":5529:5531   */\n      0x20\n        /* \"#utility.yul\":5518:5527   */\n      dup3\n        /* \"#utility.yul\":5514:5532   */\n      add\n        /* \"#utility.yul\":5506:5532   */\n      swap1\n      pop\n        /* \"#utility.yul\":5542:5613   */\n      tag_377\n        /* \"#utility.yul\":5610:5611   */\n      0x00\n        /* \"#utility.yul\":5599:5608   */\n      dup4\n        /* \"#utility.yul\":5595:5612   */\n      add\n        /* \"#utility.yul\":5586:5592   */\n      dup5\n        /* \"#utility.yul\":5542:5613   */\n      tag_286\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5398:5620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5626:5748   */\n    tag_287:\n        /* \"#utility.yul\":5699:5723   */\n      tag_379\n        /* \"#utility.yul\":5717:5722   */\n      dup2\n        /* \"#utility.yul\":5699:5723   */\n      tag_285\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5692:5697   */\n      dup2\n        /* \"#utility.yul\":5689:5724   */\n      eq\n        /* \"#utility.yul\":5679:5742   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5738:5739   */\n      0x00\n        /* \"#utility.yul\":5735:5736   */\n      dup1\n        /* \"#utility.yul\":5728:5740   */\n      revert\n        /* \"#utility.yul\":5679:5742   */\n    tag_380:\n        /* \"#utility.yul\":5626:5748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5754:5893   */\n    tag_288:\n        /* \"#utility.yul\":5800:5805   */\n      0x00\n        /* \"#utility.yul\":5838:5844   */\n      dup2\n        /* \"#utility.yul\":5825:5845   */\n      calldataload\n        /* \"#utility.yul\":5816:5845   */\n      swap1\n      pop\n        /* \"#utility.yul\":5854:5887   */\n      tag_382\n        /* \"#utility.yul\":5881:5886   */\n      dup2\n        /* \"#utility.yul\":5854:5887   */\n      tag_287\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5754:5893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6228   */\n    tag_76:\n        /* \"#utility.yul\":5958:5964   */\n      0x00\n        /* \"#utility.yul\":6007:6009   */\n      0x20\n        /* \"#utility.yul\":5995:6004   */\n      dup3\n        /* \"#utility.yul\":5986:5993   */\n      dup5\n        /* \"#utility.yul\":5982:6005   */\n      sub\n        /* \"#utility.yul\":5978:6010   */\n      slt\n        /* \"#utility.yul\":5975:6094   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":6013:6092   */\n      tag_385\n      tag_279\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5975:6094   */\n    tag_384:\n        /* \"#utility.yul\":6133:6134   */\n      0x00\n        /* \"#utility.yul\":6158:6211   */\n      tag_386\n        /* \"#utility.yul\":6203:6210   */\n      dup5\n        /* \"#utility.yul\":6194:6200   */\n      dup3\n        /* \"#utility.yul\":6183:6192   */\n      dup6\n        /* \"#utility.yul\":6179:6201   */\n      add\n        /* \"#utility.yul\":6158:6211   */\n      tag_288\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6148:6211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6104:6221   */\n      pop\n        /* \"#utility.yul\":5899:6228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6234:6403   */\n    tag_289:\n        /* \"#utility.yul\":6318:6329   */\n      0x00\n        /* \"#utility.yul\":6352:6358   */\n      dup3\n        /* \"#utility.yul\":6347:6350   */\n      dup3\n        /* \"#utility.yul\":6340:6359   */\n      mstore\n        /* \"#utility.yul\":6392:6396   */\n      0x20\n        /* \"#utility.yul\":6387:6390   */\n      dup3\n        /* \"#utility.yul\":6383:6397   */\n      add\n        /* \"#utility.yul\":6368:6397   */\n      swap1\n      pop\n        /* \"#utility.yul\":6234:6403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6409:6576   */\n    tag_290:\n        /* \"#utility.yul\":6549:6568   */\n      0x5374616b696e67206e6f7420666f756e64000000000000000000000000000000\n        /* \"#utility.yul\":6545:6546   */\n      0x00\n        /* \"#utility.yul\":6537:6543   */\n      dup3\n        /* \"#utility.yul\":6533:6547   */\n      add\n        /* \"#utility.yul\":6526:6569   */\n      mstore\n        /* \"#utility.yul\":6409:6576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6582:6948   */\n    tag_291:\n        /* \"#utility.yul\":6724:6727   */\n      0x00\n        /* \"#utility.yul\":6745:6812   */\n      tag_390\n        /* \"#utility.yul\":6809:6811   */\n      0x11\n        /* \"#utility.yul\":6804:6807   */\n      dup4\n        /* \"#utility.yul\":6745:6812   */\n      tag_289\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6738:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6821:6914   */\n      tag_391\n        /* \"#utility.yul\":6910:6913   */\n      dup3\n        /* \"#utility.yul\":6821:6914   */\n      tag_290\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6939:6941   */\n      0x20\n        /* \"#utility.yul\":6934:6937   */\n      dup3\n        /* \"#utility.yul\":6930:6942   */\n      add\n        /* \"#utility.yul\":6923:6942   */\n      swap1\n      pop\n        /* \"#utility.yul\":6582:6948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6954:7373   */\n    tag_83:\n        /* \"#utility.yul\":7120:7124   */\n      0x00\n        /* \"#utility.yul\":7158:7160   */\n      0x20\n        /* \"#utility.yul\":7147:7156   */\n      dup3\n        /* \"#utility.yul\":7143:7161   */\n      add\n        /* \"#utility.yul\":7135:7161   */\n      swap1\n      pop\n        /* \"#utility.yul\":7207:7216   */\n      dup2\n        /* \"#utility.yul\":7201:7205   */\n      dup2\n        /* \"#utility.yul\":7197:7217   */\n      sub\n        /* \"#utility.yul\":7193:7194   */\n      0x00\n        /* \"#utility.yul\":7182:7191   */\n      dup4\n        /* \"#utility.yul\":7178:7195   */\n      add\n        /* \"#utility.yul\":7171:7218   */\n      mstore\n        /* \"#utility.yul\":7235:7366   */\n      tag_393\n        /* \"#utility.yul\":7361:7365   */\n      dup2\n        /* \"#utility.yul\":7235:7366   */\n      tag_291\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7227:7366   */\n      swap1\n      pop\n        /* \"#utility.yul\":6954:7373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7379:7559   */\n    tag_292:\n        /* \"#utility.yul\":7427:7504   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7424:7425   */\n      0x00\n        /* \"#utility.yul\":7417:7505   */\n      mstore\n        /* \"#utility.yul\":7524:7528   */\n      0x11\n        /* \"#utility.yul\":7521:7522   */\n      0x04\n        /* \"#utility.yul\":7514:7529   */\n      mstore\n        /* \"#utility.yul\":7548:7552   */\n      0x24\n        /* \"#utility.yul\":7545:7546   */\n      0x00\n        /* \"#utility.yul\":7538:7553   */\n      revert\n        /* \"#utility.yul\":7565:7913   */\n    tag_88:\n        /* \"#utility.yul\":7605:7612   */\n      0x00\n        /* \"#utility.yul\":7628:7648   */\n      tag_396\n        /* \"#utility.yul\":7646:7647   */\n      dup3\n        /* \"#utility.yul\":7628:7648   */\n      tag_272\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7623:7648   */\n      swap2\n      pop\n        /* \"#utility.yul\":7662:7682   */\n      tag_397\n        /* \"#utility.yul\":7680:7681   */\n      dup4\n        /* \"#utility.yul\":7662:7682   */\n      tag_272\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7657:7682   */\n      swap3\n      pop\n        /* \"#utility.yul\":7850:7851   */\n      dup2\n        /* \"#utility.yul\":7782:7848   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7778:7852   */\n      div\n        /* \"#utility.yul\":7775:7776   */\n      dup4\n        /* \"#utility.yul\":7772:7853   */\n      gt\n        /* \"#utility.yul\":7767:7768   */\n      dup3\n        /* \"#utility.yul\":7760:7769   */\n      iszero\n        /* \"#utility.yul\":7753:7770   */\n      iszero\n        /* \"#utility.yul\":7749:7854   */\n      and\n        /* \"#utility.yul\":7746:7877   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_399\n      tag_292\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7746:7877   */\n    tag_398:\n        /* \"#utility.yul\":7905:7906   */\n      dup3\n        /* \"#utility.yul\":7902:7903   */\n      dup3\n        /* \"#utility.yul\":7898:7907   */\n      mul\n        /* \"#utility.yul\":7887:7907   */\n      swap1\n      pop\n        /* \"#utility.yul\":7565:7913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7919:8099   */\n    tag_293:\n        /* \"#utility.yul\":7967:8044   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7964:7965   */\n      0x00\n        /* \"#utility.yul\":7957:8045   */\n      mstore\n        /* \"#utility.yul\":8064:8068   */\n      0x12\n        /* \"#utility.yul\":8061:8062   */\n      0x04\n        /* \"#utility.yul\":8054:8069   */\n      mstore\n        /* \"#utility.yul\":8088:8092   */\n      0x24\n        /* \"#utility.yul\":8085:8086   */\n      0x00\n        /* \"#utility.yul\":8078:8093   */\n      revert\n        /* \"#utility.yul\":8105:8290   */\n    tag_90:\n        /* \"#utility.yul\":8145:8146   */\n      0x00\n        /* \"#utility.yul\":8162:8182   */\n      tag_402\n        /* \"#utility.yul\":8180:8181   */\n      dup3\n        /* \"#utility.yul\":8162:8182   */\n      tag_272\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8157:8182   */\n      swap2\n      pop\n        /* \"#utility.yul\":8196:8216   */\n      tag_403\n        /* \"#utility.yul\":8214:8215   */\n      dup4\n        /* \"#utility.yul\":8196:8216   */\n      tag_272\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8191:8216   */\n      swap3\n      pop\n        /* \"#utility.yul\":8235:8236   */\n      dup3\n        /* \"#utility.yul\":8225:8260   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":8240:8258   */\n      tag_405\n      tag_293\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8225:8260   */\n    tag_404:\n        /* \"#utility.yul\":8282:8283   */\n      dup3\n        /* \"#utility.yul\":8279:8280   */\n      dup3\n        /* \"#utility.yul\":8275:8284   */\n      div\n        /* \"#utility.yul\":8270:8284   */\n      swap1\n      pop\n        /* \"#utility.yul\":8105:8290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8296:8601   */\n    tag_94:\n        /* \"#utility.yul\":8336:8339   */\n      0x00\n        /* \"#utility.yul\":8355:8375   */\n      tag_407\n        /* \"#utility.yul\":8373:8374   */\n      dup3\n        /* \"#utility.yul\":8355:8375   */\n      tag_272\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8350:8375   */\n      swap2\n      pop\n        /* \"#utility.yul\":8389:8409   */\n      tag_408\n        /* \"#utility.yul\":8407:8408   */\n      dup4\n        /* \"#utility.yul\":8389:8409   */\n      tag_272\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8384:8409   */\n      swap3\n      pop\n        /* \"#utility.yul\":8543:8544   */\n      dup3\n        /* \"#utility.yul\":8475:8541   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8471:8545   */\n      sub\n        /* \"#utility.yul\":8468:8469   */\n      dup3\n        /* \"#utility.yul\":8465:8546   */\n      gt\n        /* \"#utility.yul\":8462:8569   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8549:8567   */\n      tag_410\n      tag_292\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8462:8569   */\n    tag_409:\n        /* \"#utility.yul\":8593:8594   */\n      dup3\n        /* \"#utility.yul\":8590:8591   */\n      dup3\n        /* \"#utility.yul\":8586:8595   */\n      add\n        /* \"#utility.yul\":8579:8595   */\n      swap1\n      pop\n        /* \"#utility.yul\":8296:8601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8607:8778   */\n    tag_294:\n        /* \"#utility.yul\":8747:8770   */\n      0x436c61696d61626c65206f6e63652061207765656b0000000000000000000000\n        /* \"#utility.yul\":8743:8744   */\n      0x00\n        /* \"#utility.yul\":8735:8741   */\n      dup3\n        /* \"#utility.yul\":8731:8745   */\n      add\n        /* \"#utility.yul\":8724:8771   */\n      mstore\n        /* \"#utility.yul\":8607:8778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8784:9150   */\n    tag_295:\n        /* \"#utility.yul\":8926:8929   */\n      0x00\n        /* \"#utility.yul\":8947:9014   */\n      tag_413\n        /* \"#utility.yul\":9011:9013   */\n      0x15\n        /* \"#utility.yul\":9006:9009   */\n      dup4\n        /* \"#utility.yul\":8947:9014   */\n      tag_289\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8940:9014   */\n      swap2\n      pop\n        /* \"#utility.yul\":9023:9116   */\n      tag_414\n        /* \"#utility.yul\":9112:9115   */\n      dup3\n        /* \"#utility.yul\":9023:9116   */\n      tag_294\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"#utility.yul\":9136:9139   */\n      dup3\n        /* \"#utility.yul\":9132:9144   */\n      add\n        /* \"#utility.yul\":9125:9144   */\n      swap1\n      pop\n        /* \"#utility.yul\":8784:9150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9156:9575   */\n    tag_110:\n        /* \"#utility.yul\":9322:9326   */\n      0x00\n        /* \"#utility.yul\":9360:9362   */\n      0x20\n        /* \"#utility.yul\":9349:9358   */\n      dup3\n        /* \"#utility.yul\":9345:9363   */\n      add\n        /* \"#utility.yul\":9337:9363   */\n      swap1\n      pop\n        /* \"#utility.yul\":9409:9418   */\n      dup2\n        /* \"#utility.yul\":9403:9407   */\n      dup2\n        /* \"#utility.yul\":9399:9419   */\n      sub\n        /* \"#utility.yul\":9395:9396   */\n      0x00\n        /* \"#utility.yul\":9384:9393   */\n      dup4\n        /* \"#utility.yul\":9380:9397   */\n      add\n        /* \"#utility.yul\":9373:9420   */\n      mstore\n        /* \"#utility.yul\":9437:9568   */\n      tag_416\n        /* \"#utility.yul\":9563:9567   */\n      dup2\n        /* \"#utility.yul\":9437:9568   */\n      tag_295\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9429:9568   */\n      swap1\n      pop\n        /* \"#utility.yul\":9156:9575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9581:9763   */\n    tag_296:\n        /* \"#utility.yul\":9721:9755   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9717:9718   */\n      0x00\n        /* \"#utility.yul\":9709:9715   */\n      dup3\n        /* \"#utility.yul\":9705:9719   */\n      add\n        /* \"#utility.yul\":9698:9756   */\n      mstore\n        /* \"#utility.yul\":9581:9763   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9769:10135   */\n    tag_297:\n        /* \"#utility.yul\":9911:9914   */\n      0x00\n        /* \"#utility.yul\":9932:9999   */\n      tag_419\n        /* \"#utility.yul\":9996:9998   */\n      0x20\n        /* \"#utility.yul\":9991:9994   */\n      dup4\n        /* \"#utility.yul\":9932:9999   */\n      tag_289\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9925:9999   */\n      swap2\n      pop\n        /* \"#utility.yul\":10008:10101   */\n      tag_420\n        /* \"#utility.yul\":10097:10100   */\n      dup3\n        /* \"#utility.yul\":10008:10101   */\n      tag_296\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10126:10128   */\n      0x20\n        /* \"#utility.yul\":10121:10124   */\n      dup3\n        /* \"#utility.yul\":10117:10129   */\n      add\n        /* \"#utility.yul\":10110:10129   */\n      swap1\n      pop\n        /* \"#utility.yul\":9769:10135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10141:10560   */\n    tag_120:\n        /* \"#utility.yul\":10307:10311   */\n      0x00\n        /* \"#utility.yul\":10345:10347   */\n      0x20\n        /* \"#utility.yul\":10334:10343   */\n      dup3\n        /* \"#utility.yul\":10330:10348   */\n      add\n        /* \"#utility.yul\":10322:10348   */\n      swap1\n      pop\n        /* \"#utility.yul\":10394:10403   */\n      dup2\n        /* \"#utility.yul\":10388:10392   */\n      dup2\n        /* \"#utility.yul\":10384:10404   */\n      sub\n        /* \"#utility.yul\":10380:10381   */\n      0x00\n        /* \"#utility.yul\":10369:10378   */\n      dup4\n        /* \"#utility.yul\":10365:10382   */\n      add\n        /* \"#utility.yul\":10358:10405   */\n      mstore\n        /* \"#utility.yul\":10422:10553   */\n      tag_422\n        /* \"#utility.yul\":10548:10552   */\n      dup2\n        /* \"#utility.yul\":10422:10553   */\n      tag_297\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10414:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10141:10560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10566:10747   */\n    tag_298:\n        /* \"#utility.yul\":10706:10739   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10702:10703   */\n      0x00\n        /* \"#utility.yul\":10694:10700   */\n      dup3\n        /* \"#utility.yul\":10690:10704   */\n      add\n        /* \"#utility.yul\":10683:10740   */\n      mstore\n        /* \"#utility.yul\":10566:10747   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10753:11119   */\n    tag_299:\n        /* \"#utility.yul\":10895:10898   */\n      0x00\n        /* \"#utility.yul\":10916:10983   */\n      tag_425\n        /* \"#utility.yul\":10980:10982   */\n      0x1f\n        /* \"#utility.yul\":10975:10978   */\n      dup4\n        /* \"#utility.yul\":10916:10983   */\n      tag_289\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10909:10983   */\n      swap2\n      pop\n        /* \"#utility.yul\":10992:11085   */\n      tag_426\n        /* \"#utility.yul\":11081:11084   */\n      dup3\n        /* \"#utility.yul\":10992:11085   */\n      tag_298\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11110:11112   */\n      0x20\n        /* \"#utility.yul\":11105:11108   */\n      dup3\n        /* \"#utility.yul\":11101:11113   */\n      add\n        /* \"#utility.yul\":11094:11113   */\n      swap1\n      pop\n        /* \"#utility.yul\":10753:11119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11125:11544   */\n    tag_127:\n        /* \"#utility.yul\":11291:11295   */\n      0x00\n        /* \"#utility.yul\":11329:11331   */\n      0x20\n        /* \"#utility.yul\":11318:11327   */\n      dup3\n        /* \"#utility.yul\":11314:11332   */\n      add\n        /* \"#utility.yul\":11306:11332   */\n      swap1\n      pop\n        /* \"#utility.yul\":11378:11387   */\n      dup2\n        /* \"#utility.yul\":11372:11376   */\n      dup2\n        /* \"#utility.yul\":11368:11388   */\n      sub\n        /* \"#utility.yul\":11364:11365   */\n      0x00\n        /* \"#utility.yul\":11353:11362   */\n      dup4\n        /* \"#utility.yul\":11349:11366   */\n      add\n        /* \"#utility.yul\":11342:11389   */\n      mstore\n        /* \"#utility.yul\":11406:11537   */\n      tag_428\n        /* \"#utility.yul\":11532:11536   */\n      dup2\n        /* \"#utility.yul\":11406:11537   */\n      tag_299\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11398:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11125:11544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11550:11716   */\n    tag_300:\n        /* \"#utility.yul\":11690:11708   */\n      0x557365722069732061205374616b657200000000000000000000000000000000\n        /* \"#utility.yul\":11686:11687   */\n      0x00\n        /* \"#utility.yul\":11678:11684   */\n      dup3\n        /* \"#utility.yul\":11674:11688   */\n      add\n        /* \"#utility.yul\":11667:11709   */\n      mstore\n        /* \"#utility.yul\":11550:11716   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11722:12088   */\n    tag_301:\n        /* \"#utility.yul\":11864:11867   */\n      0x00\n        /* \"#utility.yul\":11885:11952   */\n      tag_431\n        /* \"#utility.yul\":11949:11951   */\n      0x10\n        /* \"#utility.yul\":11944:11947   */\n      dup4\n        /* \"#utility.yul\":11885:11952   */\n      tag_289\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11878:11952   */\n      swap2\n      pop\n        /* \"#utility.yul\":11961:12054   */\n      tag_432\n        /* \"#utility.yul\":12050:12053   */\n      dup3\n        /* \"#utility.yul\":11961:12054   */\n      tag_300\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12079:12081   */\n      0x20\n        /* \"#utility.yul\":12074:12077   */\n      dup3\n        /* \"#utility.yul\":12070:12082   */\n      add\n        /* \"#utility.yul\":12063:12082   */\n      swap1\n      pop\n        /* \"#utility.yul\":11722:12088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12094:12513   */\n    tag_131:\n        /* \"#utility.yul\":12260:12264   */\n      0x00\n        /* \"#utility.yul\":12298:12300   */\n      0x20\n        /* \"#utility.yul\":12287:12296   */\n      dup3\n        /* \"#utility.yul\":12283:12301   */\n      add\n        /* \"#utility.yul\":12275:12301   */\n      swap1\n      pop\n        /* \"#utility.yul\":12347:12356   */\n      dup2\n        /* \"#utility.yul\":12341:12345   */\n      dup2\n        /* \"#utility.yul\":12337:12357   */\n      sub\n        /* \"#utility.yul\":12333:12334   */\n      0x00\n        /* \"#utility.yul\":12322:12331   */\n      dup4\n        /* \"#utility.yul\":12318:12335   */\n      add\n        /* \"#utility.yul\":12311:12358   */\n      mstore\n        /* \"#utility.yul\":12375:12506   */\n      tag_434\n        /* \"#utility.yul\":12501:12505   */\n      dup2\n        /* \"#utility.yul\":12375:12506   */\n      tag_301\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12367:12506   */\n      swap1\n      pop\n        /* \"#utility.yul\":12094:12513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12519:12686   */\n    tag_302:\n        /* \"#utility.yul\":12659:12678   */\n      0x5061636b616765206e6f7420466f756e64000000000000000000000000000000\n        /* \"#utility.yul\":12655:12656   */\n      0x00\n        /* \"#utility.yul\":12647:12653   */\n      dup3\n        /* \"#utility.yul\":12643:12657   */\n      add\n        /* \"#utility.yul\":12636:12679   */\n      mstore\n        /* \"#utility.yul\":12519:12686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12692:13058   */\n    tag_303:\n        /* \"#utility.yul\":12834:12837   */\n      0x00\n        /* \"#utility.yul\":12855:12922   */\n      tag_437\n        /* \"#utility.yul\":12919:12921   */\n      0x11\n        /* \"#utility.yul\":12914:12917   */\n      dup4\n        /* \"#utility.yul\":12855:12922   */\n      tag_289\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12848:12922   */\n      swap2\n      pop\n        /* \"#utility.yul\":12931:13024   */\n      tag_438\n        /* \"#utility.yul\":13020:13023   */\n      dup3\n        /* \"#utility.yul\":12931:13024   */\n      tag_302\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13049:13051   */\n      0x20\n        /* \"#utility.yul\":13044:13047   */\n      dup3\n        /* \"#utility.yul\":13040:13052   */\n      add\n        /* \"#utility.yul\":13033:13052   */\n      swap1\n      pop\n        /* \"#utility.yul\":12692:13058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13064:13483   */\n    tag_134:\n        /* \"#utility.yul\":13230:13234   */\n      0x00\n        /* \"#utility.yul\":13268:13270   */\n      0x20\n        /* \"#utility.yul\":13257:13266   */\n      dup3\n        /* \"#utility.yul\":13253:13271   */\n      add\n        /* \"#utility.yul\":13245:13271   */\n      swap1\n      pop\n        /* \"#utility.yul\":13317:13326   */\n      dup2\n        /* \"#utility.yul\":13311:13315   */\n      dup2\n        /* \"#utility.yul\":13307:13327   */\n      sub\n        /* \"#utility.yul\":13303:13304   */\n      0x00\n        /* \"#utility.yul\":13292:13301   */\n      dup4\n        /* \"#utility.yul\":13288:13305   */\n      add\n        /* \"#utility.yul\":13281:13328   */\n      mstore\n        /* \"#utility.yul\":13345:13476   */\n      tag_440\n        /* \"#utility.yul\":13471:13475   */\n      dup2\n        /* \"#utility.yul\":13345:13476   */\n      tag_303\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13337:13476   */\n      swap1\n      pop\n        /* \"#utility.yul\":13064:13483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13489:13931   */\n    tag_140:\n        /* \"#utility.yul\":13638:13642   */\n      0x00\n        /* \"#utility.yul\":13676:13678   */\n      0x60\n        /* \"#utility.yul\":13665:13674   */\n      dup3\n        /* \"#utility.yul\":13661:13679   */\n      add\n        /* \"#utility.yul\":13653:13679   */\n      swap1\n      pop\n        /* \"#utility.yul\":13689:13760   */\n      tag_442\n        /* \"#utility.yul\":13757:13758   */\n      0x00\n        /* \"#utility.yul\":13746:13755   */\n      dup4\n        /* \"#utility.yul\":13742:13759   */\n      add\n        /* \"#utility.yul\":13733:13739   */\n      dup7\n        /* \"#utility.yul\":13689:13760   */\n      tag_283\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13770:13842   */\n      tag_443\n        /* \"#utility.yul\":13838:13840   */\n      0x20\n        /* \"#utility.yul\":13827:13836   */\n      dup4\n        /* \"#utility.yul\":13823:13841   */\n      add\n        /* \"#utility.yul\":13814:13820   */\n      dup6\n        /* \"#utility.yul\":13770:13842   */\n      tag_283\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13852:13924   */\n      tag_444\n        /* \"#utility.yul\":13920:13922   */\n      0x40\n        /* \"#utility.yul\":13909:13918   */\n      dup4\n        /* \"#utility.yul\":13905:13923   */\n      add\n        /* \"#utility.yul\":13896:13902   */\n      dup5\n        /* \"#utility.yul\":13852:13924   */\n      tag_283\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13489:13931   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13937:14102   */\n    tag_304:\n        /* \"#utility.yul\":14077:14094   */\n      0x50656e616c7479206d6178203330250000000000000000000000000000000000\n        /* \"#utility.yul\":14073:14074   */\n      0x00\n        /* \"#utility.yul\":14065:14071   */\n      dup3\n        /* \"#utility.yul\":14061:14075   */\n      add\n        /* \"#utility.yul\":14054:14095   */\n      mstore\n        /* \"#utility.yul\":13937:14102   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14108:14474   */\n    tag_305:\n        /* \"#utility.yul\":14250:14253   */\n      0x00\n        /* \"#utility.yul\":14271:14338   */\n      tag_447\n        /* \"#utility.yul\":14335:14337   */\n      0x0f\n        /* \"#utility.yul\":14330:14333   */\n      dup4\n        /* \"#utility.yul\":14271:14338   */\n      tag_289\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14264:14338   */\n      swap2\n      pop\n        /* \"#utility.yul\":14347:14440   */\n      tag_448\n        /* \"#utility.yul\":14436:14439   */\n      dup3\n        /* \"#utility.yul\":14347:14440   */\n      tag_304\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14465:14467   */\n      0x20\n        /* \"#utility.yul\":14460:14463   */\n      dup3\n        /* \"#utility.yul\":14456:14468   */\n      add\n        /* \"#utility.yul\":14449:14468   */\n      swap1\n      pop\n        /* \"#utility.yul\":14108:14474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14480:14899   */\n    tag_149:\n        /* \"#utility.yul\":14646:14650   */\n      0x00\n        /* \"#utility.yul\":14684:14686   */\n      0x20\n        /* \"#utility.yul\":14673:14682   */\n      dup3\n        /* \"#utility.yul\":14669:14687   */\n      add\n        /* \"#utility.yul\":14661:14687   */\n      swap1\n      pop\n        /* \"#utility.yul\":14733:14742   */\n      dup2\n        /* \"#utility.yul\":14727:14731   */\n      dup2\n        /* \"#utility.yul\":14723:14743   */\n      sub\n        /* \"#utility.yul\":14719:14720   */\n      0x00\n        /* \"#utility.yul\":14708:14717   */\n      dup4\n        /* \"#utility.yul\":14704:14721   */\n      add\n        /* \"#utility.yul\":14697:14744   */\n      mstore\n        /* \"#utility.yul\":14761:14892   */\n      tag_450\n        /* \"#utility.yul\":14887:14891   */\n      dup2\n        /* \"#utility.yul\":14761:14892   */\n      tag_305\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14753:14892   */\n      swap1\n      pop\n        /* \"#utility.yul\":14480:14899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14905:15096   */\n    tag_155:\n        /* \"#utility.yul\":14945:14949   */\n      0x00\n        /* \"#utility.yul\":14965:14985   */\n      tag_452\n        /* \"#utility.yul\":14983:14984   */\n      dup3\n        /* \"#utility.yul\":14965:14985   */\n      tag_272\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14960:14985   */\n      swap2\n      pop\n        /* \"#utility.yul\":14999:15019   */\n      tag_453\n        /* \"#utility.yul\":15017:15018   */\n      dup4\n        /* \"#utility.yul\":14999:15019   */\n      tag_272\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14994:15019   */\n      swap3\n      pop\n        /* \"#utility.yul\":15038:15039   */\n      dup3\n        /* \"#utility.yul\":15035:15036   */\n      dup3\n        /* \"#utility.yul\":15032:15040   */\n      lt\n        /* \"#utility.yul\":15029:15063   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":15043:15061   */\n      tag_455\n      tag_292\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15029:15063   */\n    tag_454:\n        /* \"#utility.yul\":15088:15089   */\n      dup3\n        /* \"#utility.yul\":15085:15086   */\n      dup3\n        /* \"#utility.yul\":15081:15090   */\n      sub\n        /* \"#utility.yul\":15073:15090   */\n      swap1\n      pop\n        /* \"#utility.yul\":14905:15096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15102:15267   */\n    tag_306:\n        /* \"#utility.yul\":15242:15259   */\n      0x41697264726f70206d6178203230250000000000000000000000000000000000\n        /* \"#utility.yul\":15238:15239   */\n      0x00\n        /* \"#utility.yul\":15230:15236   */\n      dup3\n        /* \"#utility.yul\":15226:15240   */\n      add\n        /* \"#utility.yul\":15219:15260   */\n      mstore\n        /* \"#utility.yul\":15102:15267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15273:15639   */\n    tag_307:\n        /* \"#utility.yul\":15415:15418   */\n      0x00\n        /* \"#utility.yul\":15436:15503   */\n      tag_458\n        /* \"#utility.yul\":15500:15502   */\n      0x0f\n        /* \"#utility.yul\":15495:15498   */\n      dup4\n        /* \"#utility.yul\":15436:15503   */\n      tag_289\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15429:15503   */\n      swap2\n      pop\n        /* \"#utility.yul\":15512:15605   */\n      tag_459\n        /* \"#utility.yul\":15601:15604   */\n      dup3\n        /* \"#utility.yul\":15512:15605   */\n      tag_306\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15630:15632   */\n      0x20\n        /* \"#utility.yul\":15625:15628   */\n      dup3\n        /* \"#utility.yul\":15621:15633   */\n      add\n        /* \"#utility.yul\":15614:15633   */\n      swap1\n      pop\n        /* \"#utility.yul\":15273:15639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15645:16064   */\n    tag_186:\n        /* \"#utility.yul\":15811:15815   */\n      0x00\n        /* \"#utility.yul\":15849:15851   */\n      0x20\n        /* \"#utility.yul\":15838:15847   */\n      dup3\n        /* \"#utility.yul\":15834:15852   */\n      add\n        /* \"#utility.yul\":15826:15852   */\n      swap1\n      pop\n        /* \"#utility.yul\":15898:15907   */\n      dup2\n        /* \"#utility.yul\":15892:15896   */\n      dup2\n        /* \"#utility.yul\":15888:15908   */\n      sub\n        /* \"#utility.yul\":15884:15885   */\n      0x00\n        /* \"#utility.yul\":15873:15882   */\n      dup4\n        /* \"#utility.yul\":15869:15886   */\n      add\n        /* \"#utility.yul\":15862:15909   */\n      mstore\n        /* \"#utility.yul\":15926:16057   */\n      tag_461\n        /* \"#utility.yul\":16052:16056   */\n      dup2\n        /* \"#utility.yul\":15926:16057   */\n      tag_307\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15918:16057   */\n      swap1\n      pop\n        /* \"#utility.yul\":15645:16064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16070:16295   */\n    tag_308:\n        /* \"#utility.yul\":16210:16244   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16206:16207   */\n      0x00\n        /* \"#utility.yul\":16198:16204   */\n      dup3\n        /* \"#utility.yul\":16194:16208   */\n      add\n        /* \"#utility.yul\":16187:16245   */\n      mstore\n        /* \"#utility.yul\":16279:16287   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16274:16276   */\n      0x20\n        /* \"#utility.yul\":16266:16272   */\n      dup3\n        /* \"#utility.yul\":16262:16277   */\n      add\n        /* \"#utility.yul\":16255:16288   */\n      mstore\n        /* \"#utility.yul\":16070:16295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16301:16667   */\n    tag_309:\n        /* \"#utility.yul\":16443:16446   */\n      0x00\n        /* \"#utility.yul\":16464:16531   */\n      tag_464\n        /* \"#utility.yul\":16528:16530   */\n      0x26\n        /* \"#utility.yul\":16523:16526   */\n      dup4\n        /* \"#utility.yul\":16464:16531   */\n      tag_289\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16457:16531   */\n      swap2\n      pop\n        /* \"#utility.yul\":16540:16633   */\n      tag_465\n        /* \"#utility.yul\":16629:16632   */\n      dup3\n        /* \"#utility.yul\":16540:16633   */\n      tag_308\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16658:16660   */\n      0x40\n        /* \"#utility.yul\":16653:16656   */\n      dup3\n        /* \"#utility.yul\":16649:16661   */\n      add\n        /* \"#utility.yul\":16642:16661   */\n      swap1\n      pop\n        /* \"#utility.yul\":16301:16667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16673:17092   */\n    tag_196:\n        /* \"#utility.yul\":16839:16843   */\n      0x00\n        /* \"#utility.yul\":16877:16879   */\n      0x20\n        /* \"#utility.yul\":16866:16875   */\n      dup3\n        /* \"#utility.yul\":16862:16880   */\n      add\n        /* \"#utility.yul\":16854:16880   */\n      swap1\n      pop\n        /* \"#utility.yul\":16926:16935   */\n      dup2\n        /* \"#utility.yul\":16920:16924   */\n      dup2\n        /* \"#utility.yul\":16916:16936   */\n      sub\n        /* \"#utility.yul\":16912:16913   */\n      0x00\n        /* \"#utility.yul\":16901:16910   */\n      dup4\n        /* \"#utility.yul\":16897:16914   */\n      add\n        /* \"#utility.yul\":16890:16937   */\n      mstore\n        /* \"#utility.yul\":16954:17085   */\n      tag_467\n        /* \"#utility.yul\":17080:17084   */\n      dup2\n        /* \"#utility.yul\":16954:17085   */\n      tag_309\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16946:17085   */\n      swap1\n      pop\n        /* \"#utility.yul\":16673:17092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17098:17267   */\n    tag_310:\n        /* \"#utility.yul\":17238:17259   */\n      0x41697264726f70206e6f74207374617274656400000000000000000000000000\n        /* \"#utility.yul\":17234:17235   */\n      0x00\n        /* \"#utility.yul\":17226:17232   */\n      dup3\n        /* \"#utility.yul\":17222:17236   */\n      add\n        /* \"#utility.yul\":17215:17260   */\n      mstore\n        /* \"#utility.yul\":17098:17267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17273:17639   */\n    tag_311:\n        /* \"#utility.yul\":17415:17418   */\n      0x00\n        /* \"#utility.yul\":17436:17503   */\n      tag_470\n        /* \"#utility.yul\":17500:17502   */\n      0x13\n        /* \"#utility.yul\":17495:17498   */\n      dup4\n        /* \"#utility.yul\":17436:17503   */\n      tag_289\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":17429:17503   */\n      swap2\n      pop\n        /* \"#utility.yul\":17512:17605   */\n      tag_471\n        /* \"#utility.yul\":17601:17604   */\n      dup3\n        /* \"#utility.yul\":17512:17605   */\n      tag_310\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":17630:17632   */\n      0x20\n        /* \"#utility.yul\":17625:17628   */\n      dup3\n        /* \"#utility.yul\":17621:17633   */\n      add\n        /* \"#utility.yul\":17614:17633   */\n      swap1\n      pop\n        /* \"#utility.yul\":17273:17639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17645:18064   */\n    tag_211:\n        /* \"#utility.yul\":17811:17815   */\n      0x00\n        /* \"#utility.yul\":17849:17851   */\n      0x20\n        /* \"#utility.yul\":17838:17847   */\n      dup3\n        /* \"#utility.yul\":17834:17852   */\n      add\n        /* \"#utility.yul\":17826:17852   */\n      swap1\n      pop\n        /* \"#utility.yul\":17898:17907   */\n      dup2\n        /* \"#utility.yul\":17892:17896   */\n      dup2\n        /* \"#utility.yul\":17888:17908   */\n      sub\n        /* \"#utility.yul\":17884:17885   */\n      0x00\n        /* \"#utility.yul\":17873:17882   */\n      dup4\n        /* \"#utility.yul\":17869:17886   */\n      add\n        /* \"#utility.yul\":17862:17909   */\n      mstore\n        /* \"#utility.yul\":17926:18057   */\n      tag_473\n        /* \"#utility.yul\":18052:18056   */\n      dup2\n        /* \"#utility.yul\":17926:18057   */\n      tag_311\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17918:18057   */\n      swap1\n      pop\n        /* \"#utility.yul\":17645:18064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18070:18402   */\n    tag_215:\n        /* \"#utility.yul\":18191:18195   */\n      0x00\n        /* \"#utility.yul\":18229:18231   */\n      0x40\n        /* \"#utility.yul\":18218:18227   */\n      dup3\n        /* \"#utility.yul\":18214:18232   */\n      add\n        /* \"#utility.yul\":18206:18232   */\n      swap1\n      pop\n        /* \"#utility.yul\":18242:18313   */\n      tag_475\n        /* \"#utility.yul\":18310:18311   */\n      0x00\n        /* \"#utility.yul\":18299:18308   */\n      dup4\n        /* \"#utility.yul\":18295:18312   */\n      add\n        /* \"#utility.yul\":18286:18292   */\n      dup6\n        /* \"#utility.yul\":18242:18313   */\n      tag_286\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":18323:18395   */\n      tag_476\n        /* \"#utility.yul\":18391:18393   */\n      0x20\n        /* \"#utility.yul\":18380:18389   */\n      dup4\n        /* \"#utility.yul\":18376:18394   */\n      add\n        /* \"#utility.yul\":18367:18373   */\n      dup5\n        /* \"#utility.yul\":18323:18395   */\n      tag_283\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":18070:18402   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18408:18850   */\n    tag_222:\n        /* \"#utility.yul\":18557:18561   */\n      0x00\n        /* \"#utility.yul\":18595:18597   */\n      0x60\n        /* \"#utility.yul\":18584:18593   */\n      dup3\n        /* \"#utility.yul\":18580:18598   */\n      add\n        /* \"#utility.yul\":18572:18598   */\n      swap1\n      pop\n        /* \"#utility.yul\":18608:18679   */\n      tag_478\n        /* \"#utility.yul\":18676:18677   */\n      0x00\n        /* \"#utility.yul\":18665:18674   */\n      dup4\n        /* \"#utility.yul\":18661:18678   */\n      add\n        /* \"#utility.yul\":18652:18658   */\n      dup7\n        /* \"#utility.yul\":18608:18679   */\n      tag_286\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":18689:18761   */\n      tag_479\n        /* \"#utility.yul\":18757:18759   */\n      0x20\n        /* \"#utility.yul\":18746:18755   */\n      dup4\n        /* \"#utility.yul\":18742:18760   */\n      add\n        /* \"#utility.yul\":18733:18739   */\n      dup6\n        /* \"#utility.yul\":18689:18761   */\n      tag_286\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18771:18843   */\n      tag_480\n        /* \"#utility.yul\":18839:18841   */\n      0x40\n        /* \"#utility.yul\":18828:18837   */\n      dup4\n        /* \"#utility.yul\":18824:18842   */\n      add\n        /* \"#utility.yul\":18815:18821   */\n      dup5\n        /* \"#utility.yul\":18771:18843   */\n      tag_283\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":18408:18850   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18856:18972   */\n    tag_312:\n        /* \"#utility.yul\":18926:18947   */\n      tag_482\n        /* \"#utility.yul\":18941:18946   */\n      dup2\n        /* \"#utility.yul\":18926:18947   */\n      tag_276\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18919:18924   */\n      dup2\n        /* \"#utility.yul\":18916:18948   */\n      eq\n        /* \"#utility.yul\":18906:18966   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":18962:18963   */\n      0x00\n        /* \"#utility.yul\":18959:18960   */\n      dup1\n        /* \"#utility.yul\":18952:18964   */\n      revert\n        /* \"#utility.yul\":18906:18966   */\n    tag_483:\n        /* \"#utility.yul\":18856:18972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18978:19115   */\n    tag_313:\n        /* \"#utility.yul\":19032:19037   */\n      0x00\n        /* \"#utility.yul\":19063:19069   */\n      dup2\n        /* \"#utility.yul\":19057:19070   */\n      mload\n        /* \"#utility.yul\":19048:19070   */\n      swap1\n      pop\n        /* \"#utility.yul\":19079:19109   */\n      tag_485\n        /* \"#utility.yul\":19103:19108   */\n      dup2\n        /* \"#utility.yul\":19079:19109   */\n      tag_312\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18978:19115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19121:19466   */\n    tag_239:\n        /* \"#utility.yul\":19188:19194   */\n      0x00\n        /* \"#utility.yul\":19237:19239   */\n      0x20\n        /* \"#utility.yul\":19225:19234   */\n      dup3\n        /* \"#utility.yul\":19216:19223   */\n      dup5\n        /* \"#utility.yul\":19212:19235   */\n      sub\n        /* \"#utility.yul\":19208:19240   */\n      slt\n        /* \"#utility.yul\":19205:19324   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":19243:19322   */\n      tag_488\n      tag_279\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":19205:19324   */\n    tag_487:\n        /* \"#utility.yul\":19363:19364   */\n      0x00\n        /* \"#utility.yul\":19388:19449   */\n      tag_489\n        /* \"#utility.yul\":19441:19448   */\n      dup5\n        /* \"#utility.yul\":19432:19438   */\n      dup3\n        /* \"#utility.yul\":19421:19430   */\n      dup6\n        /* \"#utility.yul\":19417:19439   */\n      add\n        /* \"#utility.yul\":19388:19449   */\n      tag_313\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":19378:19449   */\n      swap2\n      pop\n        /* \"#utility.yul\":19334:19459   */\n      pop\n        /* \"#utility.yul\":19121:19466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19472:19701   */\n    tag_314:\n        /* \"#utility.yul\":19612:19646   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":19608:19609   */\n      0x00\n        /* \"#utility.yul\":19600:19606   */\n      dup3\n        /* \"#utility.yul\":19596:19610   */\n      add\n        /* \"#utility.yul\":19589:19647   */\n      mstore\n        /* \"#utility.yul\":19681:19693   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19676:19678   */\n      0x20\n        /* \"#utility.yul\":19668:19674   */\n      dup3\n        /* \"#utility.yul\":19664:19679   */\n      add\n        /* \"#utility.yul\":19657:19694   */\n      mstore\n        /* \"#utility.yul\":19472:19701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19707:20073   */\n    tag_315:\n        /* \"#utility.yul\":19849:19852   */\n      0x00\n        /* \"#utility.yul\":19870:19937   */\n      tag_492\n        /* \"#utility.yul\":19934:19936   */\n      0x2a\n        /* \"#utility.yul\":19929:19932   */\n      dup4\n        /* \"#utility.yul\":19870:19937   */\n      tag_289\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":19863:19937   */\n      swap2\n      pop\n        /* \"#utility.yul\":19946:20039   */\n      tag_493\n        /* \"#utility.yul\":20035:20038   */\n      dup3\n        /* \"#utility.yul\":19946:20039   */\n      tag_314\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":20064:20066   */\n      0x40\n        /* \"#utility.yul\":20059:20062   */\n      dup3\n        /* \"#utility.yul\":20055:20067   */\n      add\n        /* \"#utility.yul\":20048:20067   */\n      swap1\n      pop\n        /* \"#utility.yul\":19707:20073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20079:20498   */\n    tag_242:\n        /* \"#utility.yul\":20245:20249   */\n      0x00\n        /* \"#utility.yul\":20283:20285   */\n      0x20\n        /* \"#utility.yul\":20272:20281   */\n      dup3\n        /* \"#utility.yul\":20268:20286   */\n      add\n        /* \"#utility.yul\":20260:20286   */\n      swap1\n      pop\n        /* \"#utility.yul\":20332:20341   */\n      dup2\n        /* \"#utility.yul\":20326:20330   */\n      dup2\n        /* \"#utility.yul\":20322:20342   */\n      sub\n        /* \"#utility.yul\":20318:20319   */\n      0x00\n        /* \"#utility.yul\":20307:20316   */\n      dup4\n        /* \"#utility.yul\":20303:20320   */\n      add\n        /* \"#utility.yul\":20296:20343   */\n      mstore\n        /* \"#utility.yul\":20360:20491   */\n      tag_495\n        /* \"#utility.yul\":20486:20490   */\n      dup2\n        /* \"#utility.yul\":20360:20491   */\n      tag_315\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":20352:20491   */\n      swap1\n      pop\n        /* \"#utility.yul\":20079:20498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20504:20729   */\n    tag_316:\n        /* \"#utility.yul\":20644:20678   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":20640:20641   */\n      0x00\n        /* \"#utility.yul\":20632:20638   */\n      dup3\n        /* \"#utility.yul\":20628:20642   */\n      add\n        /* \"#utility.yul\":20621:20679   */\n      mstore\n        /* \"#utility.yul\":20713:20721   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20708:20710   */\n      0x20\n        /* \"#utility.yul\":20700:20706   */\n      dup3\n        /* \"#utility.yul\":20696:20711   */\n      add\n        /* \"#utility.yul\":20689:20722   */\n      mstore\n        /* \"#utility.yul\":20504:20729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20735:21101   */\n    tag_317:\n        /* \"#utility.yul\":20877:20880   */\n      0x00\n        /* \"#utility.yul\":20898:20965   */\n      tag_498\n        /* \"#utility.yul\":20962:20964   */\n      0x26\n        /* \"#utility.yul\":20957:20960   */\n      dup4\n        /* \"#utility.yul\":20898:20965   */\n      tag_289\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":20891:20965   */\n      swap2\n      pop\n        /* \"#utility.yul\":20974:21067   */\n      tag_499\n        /* \"#utility.yul\":21063:21066   */\n      dup3\n        /* \"#utility.yul\":20974:21067   */\n      tag_316\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":21092:21094   */\n      0x40\n        /* \"#utility.yul\":21087:21090   */\n      dup3\n        /* \"#utility.yul\":21083:21095   */\n      add\n        /* \"#utility.yul\":21076:21095   */\n      swap1\n      pop\n        /* \"#utility.yul\":20735:21101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21107:21526   */\n    tag_249:\n        /* \"#utility.yul\":21273:21277   */\n      0x00\n        /* \"#utility.yul\":21311:21313   */\n      0x20\n        /* \"#utility.yul\":21300:21309   */\n      dup3\n        /* \"#utility.yul\":21296:21314   */\n      add\n        /* \"#utility.yul\":21288:21314   */\n      swap1\n      pop\n        /* \"#utility.yul\":21360:21369   */\n      dup2\n        /* \"#utility.yul\":21354:21358   */\n      dup2\n        /* \"#utility.yul\":21350:21370   */\n      sub\n        /* \"#utility.yul\":21346:21347   */\n      0x00\n        /* \"#utility.yul\":21335:21344   */\n      dup4\n        /* \"#utility.yul\":21331:21348   */\n      add\n        /* \"#utility.yul\":21324:21371   */\n      mstore\n        /* \"#utility.yul\":21388:21519   */\n      tag_501\n        /* \"#utility.yul\":21514:21518   */\n      dup2\n        /* \"#utility.yul\":21388:21519   */\n      tag_317\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":21380:21519   */\n      swap1\n      pop\n        /* \"#utility.yul\":21107:21526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21532:21711   */\n    tag_318:\n        /* \"#utility.yul\":21672:21703   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":21668:21669   */\n      0x00\n        /* \"#utility.yul\":21660:21666   */\n      dup3\n        /* \"#utility.yul\":21656:21670   */\n      add\n        /* \"#utility.yul\":21649:21704   */\n      mstore\n        /* \"#utility.yul\":21532:21711   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21717:22083   */\n    tag_319:\n        /* \"#utility.yul\":21859:21862   */\n      0x00\n        /* \"#utility.yul\":21880:21947   */\n      tag_504\n        /* \"#utility.yul\":21944:21946   */\n      0x1d\n        /* \"#utility.yul\":21939:21942   */\n      dup4\n        /* \"#utility.yul\":21880:21947   */\n      tag_289\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":21873:21947   */\n      swap2\n      pop\n        /* \"#utility.yul\":21956:22049   */\n      tag_505\n        /* \"#utility.yul\":22045:22048   */\n      dup3\n        /* \"#utility.yul\":21956:22049   */\n      tag_318\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":22074:22076   */\n      0x20\n        /* \"#utility.yul\":22069:22072   */\n      dup3\n        /* \"#utility.yul\":22065:22077   */\n      add\n        /* \"#utility.yul\":22058:22077   */\n      swap1\n      pop\n        /* \"#utility.yul\":21717:22083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22089:22508   */\n    tag_254:\n        /* \"#utility.yul\":22255:22259   */\n      0x00\n        /* \"#utility.yul\":22293:22295   */\n      0x20\n        /* \"#utility.yul\":22282:22291   */\n      dup3\n        /* \"#utility.yul\":22278:22296   */\n      add\n        /* \"#utility.yul\":22270:22296   */\n      swap1\n      pop\n        /* \"#utility.yul\":22342:22351   */\n      dup2\n        /* \"#utility.yul\":22336:22340   */\n      dup2\n        /* \"#utility.yul\":22332:22352   */\n      sub\n        /* \"#utility.yul\":22328:22329   */\n      0x00\n        /* \"#utility.yul\":22317:22326   */\n      dup4\n        /* \"#utility.yul\":22313:22330   */\n      add\n        /* \"#utility.yul\":22306:22353   */\n      mstore\n        /* \"#utility.yul\":22370:22501   */\n      tag_507\n        /* \"#utility.yul\":22496:22500   */\n      dup2\n        /* \"#utility.yul\":22370:22501   */\n      tag_319\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":22362:22501   */\n      swap1\n      pop\n        /* \"#utility.yul\":22089:22508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22514:22612   */\n    tag_320:\n        /* \"#utility.yul\":22565:22571   */\n      0x00\n        /* \"#utility.yul\":22599:22604   */\n      dup2\n        /* \"#utility.yul\":22593:22605   */\n      mload\n        /* \"#utility.yul\":22583:22605   */\n      swap1\n      pop\n        /* \"#utility.yul\":22514:22612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22618:22765   */\n    tag_321:\n        /* \"#utility.yul\":22719:22730   */\n      0x00\n        /* \"#utility.yul\":22756:22759   */\n      dup2\n        /* \"#utility.yul\":22741:22759   */\n      swap1\n      pop\n        /* \"#utility.yul\":22618:22765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22771:23078   */\n    tag_322:\n        /* \"#utility.yul\":22839:22840   */\n      0x00\n        /* \"#utility.yul\":22849:22962   */\n    tag_511:\n        /* \"#utility.yul\":22863:22869   */\n      dup4\n        /* \"#utility.yul\":22860:22861   */\n      dup2\n        /* \"#utility.yul\":22857:22870   */\n      lt\n        /* \"#utility.yul\":22849:22962   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":22948:22949   */\n      dup1\n        /* \"#utility.yul\":22943:22946   */\n      dup3\n        /* \"#utility.yul\":22939:22950   */\n      add\n        /* \"#utility.yul\":22933:22951   */\n      mload\n        /* \"#utility.yul\":22929:22930   */\n      dup2\n        /* \"#utility.yul\":22924:22927   */\n      dup5\n        /* \"#utility.yul\":22920:22931   */\n      add\n        /* \"#utility.yul\":22913:22952   */\n      mstore\n        /* \"#utility.yul\":22885:22887   */\n      0x20\n        /* \"#utility.yul\":22882:22883   */\n      dup2\n        /* \"#utility.yul\":22878:22888   */\n      add\n        /* \"#utility.yul\":22873:22888   */\n      swap1\n      pop\n        /* \"#utility.yul\":22849:22962   */\n      jump(tag_511)\n    tag_513:\n        /* \"#utility.yul\":22980:22986   */\n      dup4\n        /* \"#utility.yul\":22977:22978   */\n      dup2\n        /* \"#utility.yul\":22974:22987   */\n      gt\n        /* \"#utility.yul\":22971:23072   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":23060:23061   */\n      0x00\n        /* \"#utility.yul\":23051:23057   */\n      dup5\n        /* \"#utility.yul\":23046:23049   */\n      dup5\n        /* \"#utility.yul\":23042:23058   */\n      add\n        /* \"#utility.yul\":23035:23062   */\n      mstore\n        /* \"#utility.yul\":22971:23072   */\n    tag_514:\n        /* \"#utility.yul\":22820:23078   */\n      pop\n        /* \"#utility.yul\":22771:23078   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23084:23457   */\n    tag_323:\n        /* \"#utility.yul\":23188:23191   */\n      0x00\n        /* \"#utility.yul\":23216:23254   */\n      tag_516\n        /* \"#utility.yul\":23248:23253   */\n      dup3\n        /* \"#utility.yul\":23216:23254   */\n      tag_320\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":23270:23358   */\n      tag_517\n        /* \"#utility.yul\":23351:23357   */\n      dup2\n        /* \"#utility.yul\":23346:23349   */\n      dup6\n        /* \"#utility.yul\":23270:23358   */\n      tag_321\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":23263:23358   */\n      swap4\n      pop\n        /* \"#utility.yul\":23367:23419   */\n      tag_518\n        /* \"#utility.yul\":23412:23418   */\n      dup2\n        /* \"#utility.yul\":23407:23410   */\n      dup6\n        /* \"#utility.yul\":23400:23404   */\n      0x20\n        /* \"#utility.yul\":23393:23398   */\n      dup7\n        /* \"#utility.yul\":23389:23405   */\n      add\n        /* \"#utility.yul\":23367:23419   */\n      tag_322\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":23444:23450   */\n      dup1\n        /* \"#utility.yul\":23439:23442   */\n      dup5\n        /* \"#utility.yul\":23435:23451   */\n      add\n        /* \"#utility.yul\":23428:23451   */\n      swap2\n      pop\n        /* \"#utility.yul\":23192:23457   */\n      pop\n        /* \"#utility.yul\":23084:23457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23463:23734   */\n    tag_256:\n        /* \"#utility.yul\":23593:23596   */\n      0x00\n        /* \"#utility.yul\":23615:23708   */\n      tag_520\n        /* \"#utility.yul\":23704:23707   */\n      dup3\n        /* \"#utility.yul\":23695:23701   */\n      dup5\n        /* \"#utility.yul\":23615:23708   */\n      tag_323\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":23608:23708   */\n      swap2\n      pop\n        /* \"#utility.yul\":23725:23728   */\n      dup2\n        /* \"#utility.yul\":23718:23728   */\n      swap1\n      pop\n        /* \"#utility.yul\":23463:23734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23740:23839   */\n    tag_324:\n        /* \"#utility.yul\":23792:23798   */\n      0x00\n        /* \"#utility.yul\":23826:23831   */\n      dup2\n        /* \"#utility.yul\":23820:23832   */\n      mload\n        /* \"#utility.yul\":23810:23832   */\n      swap1\n      pop\n        /* \"#utility.yul\":23740:23839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23845:23947   */\n    tag_325:\n        /* \"#utility.yul\":23886:23892   */\n      0x00\n        /* \"#utility.yul\":23937:23939   */\n      0x1f\n        /* \"#utility.yul\":23933:23940   */\n      not\n        /* \"#utility.yul\":23928:23930   */\n      0x1f\n        /* \"#utility.yul\":23921:23926   */\n      dup4\n        /* \"#utility.yul\":23917:23931   */\n      add\n        /* \"#utility.yul\":23913:23941   */\n      and\n        /* \"#utility.yul\":23903:23941   */\n      swap1\n      pop\n        /* \"#utility.yul\":23845:23947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23953:24317   */\n    tag_326:\n        /* \"#utility.yul\":24041:24044   */\n      0x00\n        /* \"#utility.yul\":24069:24108   */\n      tag_524\n        /* \"#utility.yul\":24102:24107   */\n      dup3\n        /* \"#utility.yul\":24069:24108   */\n      tag_324\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":24124:24195   */\n      tag_525\n        /* \"#utility.yul\":24188:24194   */\n      dup2\n        /* \"#utility.yul\":24183:24186   */\n      dup6\n        /* \"#utility.yul\":24124:24195   */\n      tag_289\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":24117:24195   */\n      swap4\n      pop\n        /* \"#utility.yul\":24204:24256   */\n      tag_526\n        /* \"#utility.yul\":24249:24255   */\n      dup2\n        /* \"#utility.yul\":24244:24247   */\n      dup6\n        /* \"#utility.yul\":24237:24241   */\n      0x20\n        /* \"#utility.yul\":24230:24235   */\n      dup7\n        /* \"#utility.yul\":24226:24242   */\n      add\n        /* \"#utility.yul\":24204:24256   */\n      tag_322\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":24281:24310   */\n      tag_527\n        /* \"#utility.yul\":24303:24309   */\n      dup2\n        /* \"#utility.yul\":24281:24310   */\n      tag_325\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":24276:24279   */\n      dup5\n        /* \"#utility.yul\":24272:24311   */\n      add\n        /* \"#utility.yul\":24265:24311   */\n      swap2\n      pop\n        /* \"#utility.yul\":24045:24317   */\n      pop\n        /* \"#utility.yul\":23953:24317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24323:24636   */\n    tag_269:\n        /* \"#utility.yul\":24436:24440   */\n      0x00\n        /* \"#utility.yul\":24474:24476   */\n      0x20\n        /* \"#utility.yul\":24463:24472   */\n      dup3\n        /* \"#utility.yul\":24459:24477   */\n      add\n        /* \"#utility.yul\":24451:24477   */\n      swap1\n      pop\n        /* \"#utility.yul\":24523:24532   */\n      dup2\n        /* \"#utility.yul\":24517:24521   */\n      dup2\n        /* \"#utility.yul\":24513:24533   */\n      sub\n        /* \"#utility.yul\":24509:24510   */\n      0x00\n        /* \"#utility.yul\":24498:24507   */\n      dup4\n        /* \"#utility.yul\":24494:24511   */\n      add\n        /* \"#utility.yul\":24487:24534   */\n      mstore\n        /* \"#utility.yul\":24551:24629   */\n      tag_529\n        /* \"#utility.yul\":24624:24628   */\n      dup2\n        /* \"#utility.yul\":24615:24621   */\n      dup5\n        /* \"#utility.yul\":24551:24629   */\n      tag_326\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":24543:24629   */\n      swap1\n      pop\n        /* \"#utility.yul\":24323:24636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122000b3444dbebe441cc07de2b305bdcadc85b6615ac278de8077d79389c82a616864736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_823": {
									"entryPoint": null,
									"id": 823,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": 268,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 276,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x24B1 CODESIZE SUB DUP1 PUSH3 0x24B1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x244 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0x5F PUSH3 0x53 PUSH3 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x114 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xF PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x50 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x2 PUSH1 0x0 PUSH3 0x76A700 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x2 PUSH1 0x0 PUSH3 0xED4E00 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x2 PUSH1 0x0 PUSH4 0x1E13380 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH3 0x276 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20C DUP3 PUSH3 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21E DUP2 PUSH3 0x1FF JUMP JUMPDEST DUP2 EQ PUSH3 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23E DUP2 PUSH3 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25D JUMPI PUSH3 0x25C PUSH3 0x1DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26D DUP5 DUP3 DUP6 ADD PUSH3 0x22D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x222B DUP1 PUSH3 0x286 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBED9D861 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xD2A569C3 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AC JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xADB61832 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xB5D9DF83 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x240 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x1B6 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x10486B6A EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2CF1A5FB EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x4BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15E PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0xAB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xD13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x3D8 DUP4 PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x438 JUMPI PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP3 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0x447 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xA8A JUMP JUMPDEST GT ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 PUSH2 0x45C DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x482 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4C2 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x55C DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x5FB PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x5F6 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x626 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x673 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 PUSH1 0x0 PUSH2 0x110F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A9 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP5 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH2 0x8C1 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x11D5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP5 DUP4 DUP5 DUP7 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x916 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x939 PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x957 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 DUP3 TIMESTAMP PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF0 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0xBDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE8 DUP3 PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP TIMESTAMP DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 PUSH2 0xC81 DUP5 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x125E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xCBD PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST POP POP PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xD00 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xCFB SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD1B PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD39 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDBB PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD9 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE26 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xEBC PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEDA PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF27 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA9 DUP2 PUSH2 0x110F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xFC7 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x12B8 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0xFEF SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x4 SLOAD DUP5 PUSH2 0x100E SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x1018 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x107F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1076 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1102 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1258 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST DUP5 PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x12A2 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST DUP5 PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x12D6 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1353 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP1 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13C7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140C SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x141E DUP6 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1454 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14D8 DUP3 DUP3 DUP7 PUSH2 0x1507 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1517 JUMPI DUP3 SWAP1 POP PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x152A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158F PUSH2 0x1595 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E5 DUP2 PUSH2 0x15D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1601 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1614 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1627 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x163A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x164D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1660 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1673 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1690 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16A3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16B6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x15EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x16D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1679 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1708 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x15D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1739 DUP2 PUSH2 0x1713 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP6 DUP3 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1775 DUP6 DUP3 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1788 DUP2 PUSH2 0x15D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BF JUMPI PUSH2 0x17BE PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17CD DUP5 DUP3 DUP6 ADD PUSH2 0x172A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1801 DUP3 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1811 DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183B DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1858 DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1882 DUP5 DUP3 DUP6 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D2 PUSH1 0x11 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x18DD DUP3 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1901 DUP2 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1942 DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x194D DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1985 PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D6 DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FC DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A07 DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A3C JUMPI PUSH2 0x1A3B PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D61626C65206F6E63652061207765656B0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7D PUSH1 0x15 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A88 DUP3 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AAC DUP2 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE9 PUSH1 0x20 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF4 DUP3 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B18 DUP2 PUSH2 0x1ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B55 PUSH1 0x1F DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B60 DUP3 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B84 DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x557365722069732061205374616B657200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 PUSH1 0x10 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCC DUP3 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF0 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061636B616765206E6F7420466F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2D PUSH1 0x11 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C38 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5C DUP2 PUSH2 0x1C20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C78 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x1C85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x1C92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x50656E616C7479206D6178203330250000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0xF DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFF DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1C DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D2F JUMPI PUSH2 0x1D2E PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41697264726F70206D6178203230250000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D70 PUSH1 0xF DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7B DUP3 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9F DUP2 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E02 PUSH1 0x26 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0D DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E31 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70206E6F74207374617274656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6E PUSH1 0x13 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E79 DUP3 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9D DUP2 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EB9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1EC6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EE2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1EEF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1EFC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F0D DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F2A DUP2 PUSH2 0x1F04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F54 DUP5 DUP3 DUP6 ADD PUSH2 0x1F1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB9 PUSH1 0x2A DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC4 DUP3 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE8 DUP2 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204B PUSH1 0x26 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x2056 DUP3 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 PUSH2 0x203E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B7 PUSH1 0x1D DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x20C2 DUP3 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E6 DUP2 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2106 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2130 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2141 DUP3 PUSH2 0x20ED JUMP JUMPDEST PUSH2 0x214B DUP2 DUP6 PUSH2 0x20F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x215B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2103 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2173 DUP3 DUP5 PUSH2 0x2136 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A5 DUP3 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x21AF DUP2 DUP6 PUSH2 0x188B JUMP JUMPDEST SWAP4 POP PUSH2 0x21BF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2103 JUMP JUMPDEST PUSH2 0x21C8 DUP2 PUSH2 0x2189 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21ED DUP2 DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xB3 DIFFICULTY 0x4D 0xBE 0xBE DIFFICULTY SHR 0xC0 PUSH30 0xE2B305BDCADC85B6615AC278DE8077D79389C82A616864736F6C63430008 SIGNEXTEND STOP CALLER ",
							"sourceMap": "247:8846:6:-:0;;;692:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:1;1806:7;:22;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;812:2:6;791:18;:23;;;;838:2;824:11;:16;;;;867:5;851:13;;:21;;;;;;;;;;;;;;;;;;909:1;883:14;:23;898:7;883:23;;;;;;;;;;;:27;;;;947:1;920:14;:24;935:8;920:24;;;;;;;;;;;:28;;;;985:1;958:14;:24;973:8;958:24;;;;;;;;;;;:28;;;;692:301;247:8846;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;247:8846:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateAirdrop_1347": {
									"entryPoint": 4086,
									"id": 1347,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakeReward_1036": {
									"entryPoint": 4012,
									"id": 1036,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingDuration_1013": {
									"entryPoint": 4792,
									"id": 1013,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingWithPenalty_1068": {
									"entryPoint": 4702,
									"id": 1068,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_callOptionalReturn_445": {
									"entryPoint": 4849,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkAirdropStatus_882": {
									"entryPoint": 4137,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_753": {
									"entryPoint": 4359,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 4367,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdropRate_781": {
									"entryPoint": 2347,
									"id": 781,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_783": {
									"entryPoint": 2733,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropStatus_785": {
									"entryPoint": 1191,
									"id": 785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blockTimestamp_1313": {
									"entryPoint": 2690,
									"id": 1313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateWeek_1329": {
									"entryPoint": 2698,
									"id": 1329,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeAirdropPercentage_1304": {
									"entryPoint": 3507,
									"id": 1304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePenaltyFee_994": {
									"entryPoint": 2353,
									"id": 994,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_1416": {
									"entryPoint": 1210,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_605": {
									"entryPoint": 5072,
									"id": 605,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_535": {
									"entryPoint": 5048,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hasStake_1266": {
									"entryPoint": 712,
									"id": 1266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_464": {
									"entryPoint": 5348,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2648,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1536,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_279": {
									"entryPoint": 4565,
									"id": 279,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_253": {
									"entryPoint": 4225,
									"id": 253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_971": {
									"entryPoint": 1672,
									"id": 971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_779": {
									"entryPoint": 3341,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirdrop_1281": {
									"entryPoint": 3347,
									"id": 1281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_address_787": {
									"entryPoint": 2610,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3764,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_740": {
									"entryPoint": 5383,
									"id": 740,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawStake_1150": {
									"entryPoint": 2739,
									"id": 1150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$838_memory_ptr_to_t_struct$_Stake_$838_memory_ptr": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$846_memory_ptr_to_t_struct$_StakingSummary_$846_memory_ptr_fromStack": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7885,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$846_memory_ptr__to_t_struct$_StakingSummary_$846_memory_ptr__fromStack_reversed": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24639:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "145:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "162:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "185:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "167:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "167:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "155:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "155:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "133:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "140:3:7",
														"type": ""
													}
												],
												"src": "90:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "356:1304:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "366:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "382:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:4:7",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "370:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "402:166:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "439:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "469:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "476:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "465:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "465:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "459:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "459:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "443:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "529:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "547:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "552:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "543:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "543:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "495:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "495:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "578:165:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "614:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "644:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "651:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "640:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "640:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "634:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "618:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "704:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "722:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "727:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "670:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "670:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "670:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "753:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "793:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "823:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "830:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "819:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "819:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "813:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "813:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "797:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "883:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "901:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "906:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "897:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "897:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "849:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "849:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "932:171:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "974:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1004:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1011:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1000:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1000:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "994:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "994:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "978:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1064:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1082:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1087:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1078:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1078:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1030:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1030:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1030:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1113:169:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1153:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1183:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1190:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1179:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1179:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1173:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1173:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1157:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1243:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1261:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1266:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1257:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1257:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1209:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1209:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1292:176:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1339:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1369:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1376:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1365:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1365:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1359:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1343:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1429:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1447:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1452:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1443:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1443:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1395:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1395:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:175:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1524:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1554:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1561:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1550:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1550:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1544:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1528:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1614:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1632:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1637:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1628:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1628:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1580:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1580:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$838_memory_ptr_to_t_struct$_Stake_$838_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "343:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "350:3:7",
														"type": ""
													}
												],
												"src": "256:1404:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1864:623:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1874:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1890:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1895:6:7",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1886:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1878:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1912:172:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1955:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1985:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1992:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1981:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1981:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1975:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1975:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1959:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2045:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2063:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2068:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2059:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2059:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2011:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2011:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2094:167:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2132:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2162:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2169:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2158:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2158:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2152:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2136:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2222:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2240:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2245:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2236:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2236:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2188:33:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:63:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2188:63:7"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2271:209:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2337:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2344:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2333:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2333:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2327:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2327:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2311:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2441:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2459:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2464:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2455:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2455:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_struct$_Stake_$838_memory_ptr_to_t_struct$_Stake_$838_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2363:77:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:107:7"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2363:107:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$846_memory_ptr_to_t_struct$_StakingSummary_$846_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1851:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1858:3:7",
														"type": ""
													}
												],
												"src": "1736:751:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2653:187:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2663:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2675:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2663:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2806:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$846_memory_ptr_to_t_struct$_StakingSummary_$846_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2700:105:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:133:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2700:133:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$846_memory_ptr__to_t_struct$_StakingSummary_$846_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2625:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2637:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2648:4:7",
														"type": ""
													}
												],
												"src": "2493:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2898:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2923:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2916:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2916:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2909:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2909:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2898:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2870:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2880:7:7",
														"type": ""
													}
												],
												"src": "2846:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3001:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3018:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3038:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3023:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3011:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2989:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2996:3:7",
														"type": ""
													}
												],
												"src": "2942:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3149:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3159:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3171:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3159:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3257:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3195:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3195:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3121:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3133:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3144:4:7",
														"type": ""
													}
												],
												"src": "3057:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3313:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3323:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3339:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3333:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3333:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3323:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"src": "3273:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3443:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3460:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3463:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3453:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3453:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3354:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3566:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3583:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3586:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3576:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3477:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3643:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3700:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3709:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3712:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3702:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3702:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3702:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3666:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3691:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3673:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3673:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3663:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3663:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:43:7"
															},
															"nodeType": "YulIf",
															"src": "3653:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3636:5:7",
														"type": ""
													}
												],
												"src": "3600:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3790:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3812:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3799:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3790:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3855:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3828:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3828:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3758:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3766:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3774:5:7",
														"type": ""
													}
												],
												"src": "3728:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3956:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4004:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4004:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3973:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3998:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:32:7"
															},
															"nodeType": "YulIf",
															"src": "3966:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4095:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4110:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4139:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4174:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4185:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4170:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4170:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4194:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4149:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4222:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4237:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4241:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4267:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4302:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4313:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4298:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4298:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4322:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4277:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4267:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3929:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3941:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3949:6:7",
														"type": ""
													}
												],
												"src": "3873:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4418:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4435:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4458:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4440:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4440:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4428:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4428:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4406:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4413:3:7",
														"type": ""
													}
												],
												"src": "4353:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4575:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4585:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4585:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4665:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4689:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4674:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4621:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4621:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4547:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4559:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4570:4:7",
														"type": ""
													}
												],
												"src": "4477:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4771:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4817:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4819:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4819:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4819:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4792:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4801:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4788:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4784:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4784:32:7"
															},
															"nodeType": "YulIf",
															"src": "4781:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4910:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4925:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4929:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4954:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4989:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5000:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4985:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4985:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5009:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4964:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4954:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4741:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4752:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4764:6:7",
														"type": ""
													}
												],
												"src": "4705:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5085:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5095:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5110:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5117:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5095:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5067:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5077:7:7",
														"type": ""
													}
												],
												"src": "5040:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5217:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5227:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5256:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5238:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5227:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5199:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5209:7:7",
														"type": ""
													}
												],
												"src": "5172:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5339:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5356:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5379:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5361:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5349:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5327:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5334:3:7",
														"type": ""
													}
												],
												"src": "5274:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5496:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5506:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5518:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5529:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5514:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5514:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5506:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5586:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5610:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5542:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5468:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5480:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5491:4:7",
														"type": ""
													}
												],
												"src": "5398:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5726:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5735:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5738:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5728:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5728:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5692:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5717:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5699:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5699:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5689:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5689:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5682:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5682:43:7"
															},
															"nodeType": "YulIf",
															"src": "5679:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5662:5:7",
														"type": ""
													}
												],
												"src": "5626:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5806:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5816:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5838:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5825:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5816:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5881:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5854:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5854:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5784:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5792:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5800:5:7",
														"type": ""
													}
												],
												"src": "5754:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5965:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6011:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6013:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6013:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6013:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5986:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5995:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5982:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5982:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6007:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5978:32:7"
															},
															"nodeType": "YulIf",
															"src": "5975:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6104:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6119:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6133:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6123:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6148:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6183:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6194:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6179:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6179:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6203:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6158:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6148:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5935:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5946:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5958:6:7",
														"type": ""
													}
												],
												"src": "5899:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6330:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6347:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6352:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6340:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6340:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6368:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6387:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6368:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6302:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6307:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6318:11:7",
														"type": ""
													}
												],
												"src": "6234:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6515:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6537:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6545:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6533:14:7"
																	},
																	{
																		"hexValue": "5374616b696e67206e6f7420666f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6549:19:7",
																		"type": "",
																		"value": "Staking not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6526:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6526:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6526:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6507:6:7",
														"type": ""
													}
												],
												"src": "6409:167:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6728:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6738:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6804:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6809:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6745:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6910:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																	"nodeType": "YulIdentifier",
																	"src": "6821:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6821:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6923:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6934:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6939:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6930:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6923:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6716:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6724:3:7",
														"type": ""
													}
												],
												"src": "6582:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7125:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7135:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7147:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7158:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7143:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7135:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7182:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7193:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7178:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7178:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7201:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7207:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7197:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7227:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7361:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7235:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7227:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7105:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7120:4:7",
														"type": ""
													}
												],
												"src": "6954:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7407:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7424:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7427:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7417:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7521:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7524:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7514:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7514:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7514:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7545:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7548:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7538:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7538:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7379:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7613:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7623:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7646:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7628:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7628:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7623:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7657:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7680:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7662:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7662:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7657:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7855:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7767:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7760:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7760:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7753:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7753:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7775:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7782:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7850:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7778:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7778:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7772:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7772:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:105:7"
															},
															"nodeType": "YulIf",
															"src": "7746:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7887:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7902:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7905:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7898:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7898:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7887:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7596:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7599:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7605:7:7",
														"type": ""
													}
												],
												"src": "7565:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7947:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7964:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7967:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7957:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7957:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7957:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8061:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8064:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8054:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8054:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8085:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8088:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8078:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8078:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8078:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7919:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8147:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8157:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8180:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8162:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8162:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8157:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8191:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8214:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8196:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8196:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8191:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8238:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8240:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8240:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8240:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8235:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8228:9:7"
															},
															"nodeType": "YulIf",
															"src": "8225:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8270:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8279:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8282:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8270:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8136:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8139:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8145:1:7",
														"type": ""
													}
												],
												"src": "8105:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8340:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8350:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8373:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8355:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8355:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8350:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8384:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8407:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8389:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8389:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8384:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8547:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8549:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8549:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8549:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8468:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8475:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8543:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8471:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8465:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:81:7"
															},
															"nodeType": "YulIf",
															"src": "8462:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8579:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8590:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8593:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8586:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8579:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8327:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8330:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8336:3:7",
														"type": ""
													}
												],
												"src": "8296:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8713:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8735:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8743:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8731:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8731:14:7"
																	},
																	{
																		"hexValue": "436c61696d61626c65206f6e63652061207765656b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8747:23:7",
																		"type": "",
																		"value": "Claimable once a week"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8724:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8705:6:7",
														"type": ""
													}
												],
												"src": "8607:171:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8930:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8940:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9006:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9011:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8947:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8947:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8940:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9112:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																	"nodeType": "YulIdentifier",
																	"src": "9023:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9023:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9023:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9125:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9136:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9132:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9125:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8918:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8926:3:7",
														"type": ""
													}
												],
												"src": "8784:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9327:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9337:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9349:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9360:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9345:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9345:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9337:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9384:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9395:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9380:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9380:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9403:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9409:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9399:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9399:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9373:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9373:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9373:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9429:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9563:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9437:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9437:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9429:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9307:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9322:4:7",
														"type": ""
													}
												],
												"src": "9156:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9687:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9709:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9717:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9705:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9721:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9698:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9679:6:7",
														"type": ""
													}
												],
												"src": "9581:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9915:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9925:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9991:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9932:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9932:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10097:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10008:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10008:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10110:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10121:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10117:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10110:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9911:3:7",
														"type": ""
													}
												],
												"src": "9769:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10312:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10334:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10369:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10380:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10365:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10388:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10394:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10384:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10358:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10358:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10358:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10414:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10548:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10422:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10422:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10414:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10292:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10307:4:7",
														"type": ""
													}
												],
												"src": "10141:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10672:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10694:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10702:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10690:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10690:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10706:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10664:6:7",
														"type": ""
													}
												],
												"src": "10566:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10899:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10909:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10975:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10980:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10916:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11081:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "10992:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10992:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11094:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11105:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11110:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11101:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11101:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11094:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10887:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10895:3:7",
														"type": ""
													}
												],
												"src": "10753:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11296:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11306:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11318:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11329:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11314:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11306:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11353:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11364:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11349:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11372:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11378:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11368:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11368:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11342:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11342:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11398:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11532:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11406:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11398:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11276:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11291:4:7",
														"type": ""
													}
												],
												"src": "11125:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11656:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11678:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11686:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11674:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11674:14:7"
																	},
																	{
																		"hexValue": "557365722069732061205374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11690:18:7",
																		"type": "",
																		"value": "User is a Staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11667:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11648:6:7",
														"type": ""
													}
												],
												"src": "11550:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11868:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11878:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11944:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11949:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11885:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11885:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11878:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12050:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8",
																	"nodeType": "YulIdentifier",
																	"src": "11961:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11961:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11961:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12063:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12074:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12079:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12070:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12070:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12063:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11856:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11864:3:7",
														"type": ""
													}
												],
												"src": "11722:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12265:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12275:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12287:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12283:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12283:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12275:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12322:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12333:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12318:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12318:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12341:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12347:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12337:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12337:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12311:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12311:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12311:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12367:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12501:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12375:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12367:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12245:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12260:4:7",
														"type": ""
													}
												],
												"src": "12094:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12625:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12647:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12655:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12643:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12643:14:7"
																	},
																	{
																		"hexValue": "5061636b616765206e6f7420466f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12659:19:7",
																		"type": "",
																		"value": "Package not Found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12636:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12636:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12636:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12617:6:7",
														"type": ""
													}
												],
												"src": "12519:167:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12838:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12848:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12914:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12919:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12855:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12848:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13020:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734",
																	"nodeType": "YulIdentifier",
																	"src": "12931:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12931:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12931:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13033:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13044:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13049:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13040:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13033:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12826:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12834:3:7",
														"type": ""
													}
												],
												"src": "12692:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13235:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13245:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13257:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13268:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13245:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13292:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13303:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13288:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13288:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13311:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13317:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13307:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13307:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13281:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13281:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13281:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13337:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13471:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13345:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13345:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13337:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13215:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13230:4:7",
														"type": ""
													}
												],
												"src": "13064:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13643:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13653:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13665:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13676:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13661:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13661:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13653:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13733:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13746:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13757:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13742:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13742:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13689:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13689:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13689:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13814:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13827:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13838:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13823:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13823:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13770:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13770:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13770:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13896:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13909:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13920:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13905:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13905:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13852:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13852:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13852:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13599:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13611:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13619:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13627:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13638:4:7",
														"type": ""
													}
												],
												"src": "13489:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14043:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14065:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14073:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14061:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14061:14:7"
																	},
																	{
																		"hexValue": "50656e616c7479206d617820333025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14077:17:7",
																		"type": "",
																		"value": "Penalty max 30%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14054:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14054:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14054:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14035:6:7",
														"type": ""
													}
												],
												"src": "13937:165:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14254:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14264:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14330:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14335:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14271:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14271:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14264:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14436:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a",
																	"nodeType": "YulIdentifier",
																	"src": "14347:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14347:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14347:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14449:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14460:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14465:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14456:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14456:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14449:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14242:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14250:3:7",
														"type": ""
													}
												],
												"src": "14108:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14651:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14661:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14673:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14684:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14669:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14669:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14661:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14708:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14719:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14704:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14727:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14733:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14723:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14723:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14697:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14697:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14697:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14753:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14887:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14761:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14761:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14753:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14631:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14646:4:7",
														"type": ""
													}
												],
												"src": "14480:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14950:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14960:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14983:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14965:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14965:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14960:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14994:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15017:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14999:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14999:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14994:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15041:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15043:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15043:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15043:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15035:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15038:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15032:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15032:8:7"
															},
															"nodeType": "YulIf",
															"src": "15029:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15073:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15085:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15088:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15081:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15073:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14936:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14939:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14945:4:7",
														"type": ""
													}
												],
												"src": "14905:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15208:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15230:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15238:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15226:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15226:14:7"
																	},
																	{
																		"hexValue": "41697264726f70206d617820323025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15242:17:7",
																		"type": "",
																		"value": "Airdrop max 20%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15219:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15219:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15219:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15200:6:7",
														"type": ""
													}
												],
												"src": "15102:165:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15419:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15429:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15495:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15500:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15436:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15436:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15429:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15601:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287",
																	"nodeType": "YulIdentifier",
																	"src": "15512:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15512:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15512:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15614:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15625:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15630:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15621:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15621:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15614:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15407:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15415:3:7",
														"type": ""
													}
												],
												"src": "15273:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15816:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15826:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15838:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15849:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15834:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15834:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15826:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15873:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15884:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15869:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15869:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15892:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15898:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15888:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15888:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15862:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15862:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15862:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15918:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16052:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15926:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15926:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15918:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15796:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15811:4:7",
														"type": ""
													}
												],
												"src": "15645:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16176:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16198:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16206:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16194:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16194:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16210:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16187:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16187:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16266:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16274:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16262:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16262:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16279:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16255:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16255:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16255:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16168:6:7",
														"type": ""
													}
												],
												"src": "16070:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16447:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16457:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16523:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16528:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16464:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16464:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16457:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16629:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16540:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16540:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16540:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16642:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16653:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16658:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16649:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16649:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16642:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16435:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16443:3:7",
														"type": ""
													}
												],
												"src": "16301:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16844:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16854:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16866:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16877:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16862:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16862:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16854:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16901:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16912:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16897:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16897:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16920:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16926:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16916:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16916:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16890:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16890:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16890:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16946:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17080:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16954:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16954:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16946:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16824:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16839:4:7",
														"type": ""
													}
												],
												"src": "16673:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17204:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17226:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17234:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17222:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17222:14:7"
																	},
																	{
																		"hexValue": "41697264726f70206e6f742073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17238:21:7",
																		"type": "",
																		"value": "Airdrop not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17215:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17215:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17215:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17196:6:7",
														"type": ""
													}
												],
												"src": "17098:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17419:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17429:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17495:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17500:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17436:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17436:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17429:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17601:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9",
																	"nodeType": "YulIdentifier",
																	"src": "17512:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17512:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17512:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17614:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17625:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17630:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17621:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17621:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17614:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17407:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17415:3:7",
														"type": ""
													}
												],
												"src": "17273:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17816:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17826:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17838:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17849:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17834:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17834:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17826:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17873:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17884:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17869:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17869:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17892:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17898:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17888:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17888:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17862:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17862:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17862:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17918:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18052:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17926:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17926:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17918:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17796:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17811:4:7",
														"type": ""
													}
												],
												"src": "17645:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18196:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18206:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18218:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18229:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18214:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18214:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18206:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18286:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18299:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18310:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18295:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18295:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18242:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18242:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18242:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18367:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18380:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18391:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18376:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18376:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18323:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18323:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18323:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18160:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18172:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18180:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18191:4:7",
														"type": ""
													}
												],
												"src": "18070:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18562:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18572:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18584:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18595:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18580:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18580:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18572:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18652:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18665:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18676:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18661:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18661:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18608:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18608:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18608:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18733:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18746:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18757:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18742:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18742:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18689:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18689:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18689:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18815:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18828:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18839:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18824:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18824:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18771:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18771:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18771:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18518:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18530:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18538:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18546:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18557:4:7",
														"type": ""
													}
												],
												"src": "18408:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18896:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18950:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18959:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18962:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18952:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18952:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18952:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18919:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18941:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18926:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18926:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18916:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18916:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18909:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18909:40:7"
															},
															"nodeType": "YulIf",
															"src": "18906:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18889:5:7",
														"type": ""
													}
												],
												"src": "18856:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19038:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19048:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19063:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19057:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19057:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19048:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19103:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "19079:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19079:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19079:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19016:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19024:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19032:5:7",
														"type": ""
													}
												],
												"src": "18978:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19195:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19241:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19243:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19243:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19243:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19216:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19225:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19212:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19212:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19237:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19208:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19208:32:7"
															},
															"nodeType": "YulIf",
															"src": "19205:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "19334:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19349:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19363:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19353:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19378:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19421:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19432:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19417:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19417:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19441:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19388:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19388:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19378:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19165:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19176:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19188:6:7",
														"type": ""
													}
												],
												"src": "19121:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19578:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19600:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19608:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19596:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19596:14:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19612:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19589:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19589:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19668:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19676:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19664:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19664:15:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19681:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19657:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19657:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19657:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19570:6:7",
														"type": ""
													}
												],
												"src": "19472:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19853:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19863:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19929:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19934:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19870:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19870:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19863:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20035:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "19946:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19946:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19946:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20048:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20059:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20064:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20055:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20055:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20048:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19841:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19849:3:7",
														"type": ""
													}
												],
												"src": "19707:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20250:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20260:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20272:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20283:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20268:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20268:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20260:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20307:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20318:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20303:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20303:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20326:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20332:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20322:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20322:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20296:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20296:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20296:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20352:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20486:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20360:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20360:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20352:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20230:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20245:4:7",
														"type": ""
													}
												],
												"src": "20079:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20610:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20632:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20640:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20628:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20628:14:7"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20644:34:7",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20621:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20621:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20621:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20700:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20708:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20696:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20696:15:7"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20713:8:7",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20689:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20689:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20689:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20602:6:7",
														"type": ""
													}
												],
												"src": "20504:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20881:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20891:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20957:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20962:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20898:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20898:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20891:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21063:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "20974:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20974:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20974:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21076:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21087:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21092:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21083:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21083:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21076:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20869:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20877:3:7",
														"type": ""
													}
												],
												"src": "20735:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21278:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21288:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21300:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21311:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21296:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21296:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21288:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21335:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21346:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21331:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21331:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21354:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21360:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21350:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21350:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21324:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21324:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21324:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21380:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21514:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21388:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21388:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21380:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21258:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21273:4:7",
														"type": ""
													}
												],
												"src": "21107:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21638:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21660:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21668:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21656:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21656:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21672:31:7",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21649:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21649:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21649:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21630:6:7",
														"type": ""
													}
												],
												"src": "21532:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21863:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21873:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21939:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21944:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21880:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21880:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21873:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22045:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "21956:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21956:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21956:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22058:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22069:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22065:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22065:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22058:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21859:3:7",
														"type": ""
													}
												],
												"src": "21717:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22260:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22270:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22282:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22278:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22278:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22270:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22317:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22328:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22313:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22313:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22336:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22342:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22332:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22332:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22306:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22306:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22306:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22362:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22496:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22370:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22370:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22362:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22240:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22255:4:7",
														"type": ""
													}
												],
												"src": "22089:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22572:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22583:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22599:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22593:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22593:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22583:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22555:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22565:6:7",
														"type": ""
													}
												],
												"src": "22514:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22731:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22741:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22756:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22741:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22703:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22708:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22719:11:7",
														"type": ""
													}
												],
												"src": "22618:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22820:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22830:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "22839:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "22834:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22899:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "22924:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "22929:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22920:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22920:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "22943:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "22948:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "22939:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22939:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "22933:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22933:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22913:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22913:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22913:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "22860:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22863:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22857:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22857:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "22871:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "22873:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "22882:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22885:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "22878:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22878:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "22873:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "22853:3:7",
																"statements": []
															},
															"src": "22849:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22996:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "23046:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "23051:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23042:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23042:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23060:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23035:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23035:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23035:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "22977:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22980:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22974:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "22974:13:7"
															},
															"nodeType": "YulIf",
															"src": "22971:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "22802:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "22807:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22812:6:7",
														"type": ""
													}
												],
												"src": "22771:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23192:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23202:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23248:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23216:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23216:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23206:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23263:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23346:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23351:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23270:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23270:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23263:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23393:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23400:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23389:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23407:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23412:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "23367:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23367:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23367:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23428:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23439:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23444:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23435:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23435:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23428:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23173:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23180:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23188:3:7",
														"type": ""
													}
												],
												"src": "23084:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23597:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23608:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23695:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23704:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23615:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23615:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23608:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23718:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23725:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23718:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23576:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23582:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23593:3:7",
														"type": ""
													}
												],
												"src": "23463:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23799:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23810:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23826:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23820:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23820:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23810:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23782:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23792:6:7",
														"type": ""
													}
												],
												"src": "23740:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23893:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23903:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23921:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23928:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23917:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23937:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "23933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23933:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23913:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "23913:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23903:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23876:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "23886:6:7",
														"type": ""
													}
												],
												"src": "23845:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24045:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24055:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24102:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "24069:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24069:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24059:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24117:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24183:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24188:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24124:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24124:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24117:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24230:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24237:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24226:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24226:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24244:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24249:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "24204:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24204:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24204:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24265:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24276:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24303:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24281:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24281:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24272:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24272:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24265:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24026:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24033:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24041:3:7",
														"type": ""
													}
												],
												"src": "23953:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24441:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24451:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24463:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24474:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24459:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24459:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24451:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24509:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24494:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24517:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24523:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24513:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24487:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24487:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24543:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24615:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24624:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24551:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "24551:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24413:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24425:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24436:4:7",
														"type": ""
													}
												],
												"src": "24323:313:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Staking.Stake -> struct Staking.Stake\n    function abi_encode_t_struct$_Stake_$838_memory_ptr_to_t_struct$_Stake_$838_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // rewardAPY\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // releaseTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // claimableAirdrop\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // latestClaimDrop\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    // struct Staking.StakingSummary -> struct Staking.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$846_memory_ptr_to_t_struct$_StakingSummary_$846_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // penalty\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stake\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Stake_$838_memory_ptr_to_t_struct$_Stake_$838_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$846_memory_ptr__to_t_struct$_StakingSummary_$846_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_StakingSummary_$846_memory_ptr_to_t_struct$_StakingSummary_$846_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claimable once a week\")\n\n    }\n\n    function abi_encode_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"User is a Staker\")\n\n    }\n\n    function abi_encode_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734(memPtr) {\n\n        mstore(add(memPtr, 0), \"Package not Found\")\n\n    }\n\n    function abi_encode_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Penalty max 30%\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287(memPtr) {\n\n        mstore(add(memPtr, 0), \"Airdrop max 20%\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Airdrop not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063bed9d86111610071578063bed9d8611461025e578063cb79c2e114610268578063d2a569c314610286578063d5dbdf1b14610290578063f2fde38b146102ac5761010b565b80638da5cb5b146101d4578063adb61832146101f2578063b5d9df8314610210578063b87da76d146102405761010b565b80637b0472f0116100de5780637b0472f0146101605780638891cf0d1461017c5780638c63f97f1461019a5780638c8e8fee146101b65761010b565b806310486b6a146101105780632cf1a5fb1461012e5780635b88349d1461014c578063715018a614610156575b600080fd5b6101186102c8565b60405161012591906116bc565b60405180910390f35b6101366104a7565b60405161014391906116f3565b60405180910390f35b6101546104ba565b005b61015e610600565b005b61017a6004803603810190610175919061173f565b610688565b005b61018461092b565b604051610191919061178e565b60405180910390f35b6101b460048036038101906101af91906117a9565b610931565b005b6101be610a32565b6040516101cb9190611817565b60405180910390f35b6101dc610a58565b6040516101e99190611817565b60405180910390f35b6101fa610a82565b604051610207919061178e565b60405180910390f35b61022a600480360381019061022591906117a9565b610a8a565b604051610237919061178e565b60405180910390f35b610248610aad565b604051610255919061178e565b60405180910390f35b610266610ab3565b005b610270610d0d565b60405161027d919061178e565b60405180910390f35b61028e610d13565b005b6102aa60048036038101906102a591906117a9565b610db3565b005b6102c660048036038101906102c1919061185e565b610eb4565b005b6102d061156e565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505090506000816000015114156103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a3906118e8565b60405180910390fd5b60006040518060600160405280600081526020016000815260200183815250905060006103d883610fac565b9050428260400151606001511115610438576103e8600354826103fb9190611937565b61040591906119c0565b6103e8600354856000015161041a9190611937565b61042491906119c0565b61042e91906119f1565b8260200181815250505b60006104478460c00151610a8a565b111561047257600061045c8460000151610ff6565b905080836040015160a001818152505050610482565b6000826040015160a00181815250505b8082604001516080018181525050826000015182600001818152505081935050505090565b600660009054906101000a900460ff1681565b6104c2611029565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154141561054d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610544906118e8565b60405180910390fd5b600061055c8260060154610a8a565b90506000826000015411156105fc5760008114156105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a690611a93565b60405180910390fd5b600082600501819055504282600601819055506105fb600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336105f68560000154610ff6565b611081565b5b5050565b610608611107565b73ffffffffffffffffffffffffffffffffffffffff16610626610a58565b73ffffffffffffffffffffffffffffffffffffffff161461067c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067390611aff565b60405180910390fd5b610686600061110f565b565b600260005414156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611b6b565b60405180910390fd5b60026000819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461075b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075290611bd7565b60405180910390fd5b6000600260008381526020019081526020016000205414156107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a990611c43565b60405180910390fd5b60004290506040518060e001604052808481526020018281526020016002600085815260200190815260200160002054815260200182846107f391906119f1565b815260200160008152602001600081526020016000815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050506108c1600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff163330866111d5565b3373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8483848661090791906119f1565b60405161091693929190611c63565b60405180910390a25060016000819055505050565b60045481565b610939611107565b73ffffffffffffffffffffffffffffffffffffffff16610957610a58565b73ffffffffffffffffffffffffffffffffffffffff16146109ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a490611aff565b60405180910390fd5b601e8111156109f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e890611ce6565b60405180910390fd5b806003819055507fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a981604051610a27919061178e565b60405180910390a150565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600042905090565b600062093a808242610a9c9190611d06565b610aa691906119c0565b9050919050565b60055481565b60026000541415610af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af090611b6b565b60405180910390fd5b60026000819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600081600001511415610bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd4906118e8565b60405180910390fd5b6000610be882610fac565b9050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160009055600382016000905560048201600090556005820160009055600682016000905550504282606001511115610cc457600080610c8184600001518461125e565b91509150610cbd600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338385610cb891906119f1565b611081565b5050610d01565b610d00600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633838560000151610cfb91906119f1565b611081565b5b50506001600081905550565b60035481565b610d1b611107565b73ffffffffffffffffffffffffffffffffffffffff16610d39610a58565b73ffffffffffffffffffffffffffffffffffffffff1614610d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8690611aff565b60405180910390fd5b426005819055506001600660006101000a81548160ff021916908315150217905550565b610dbb611107565b73ffffffffffffffffffffffffffffffffffffffff16610dd9610a58565b73ffffffffffffffffffffffffffffffffffffffff1614610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2690611aff565b60405180910390fd5b60c8811115610e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6a90611d86565b60405180910390fd5b806004819055507fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e81604051610ea9919061178e565b60405180910390a150565b610ebc611107565b73ffffffffffffffffffffffffffffffffffffffff16610eda610a58565b73ffffffffffffffffffffffffffffffffffffffff1614610f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2790611aff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9790611e18565b60405180910390fd5b610fa98161110f565b50565b60006a52b7d2dcc80cd2e4000000610fc783602001516112b8565b83604001518460000151610fdb9190611937565b610fe59190611937565b610fef91906119c0565b9050919050565b60006301dfe2006103e86004548461100e9190611937565b61101891906119c0565b61102291906119c0565b9050919050565b60011515600660009054906101000a900460ff1615151461107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690611e84565b60405180910390fd5b565b6111028363a9059cbb60e01b84846040516024016110a0929190611ea4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f1565b505050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611258846323b872dd60e01b8585856040516024016111f693929190611ecd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f1565b50505050565b6000806103e8600354856112729190611937565b61127c91906119c0565b846112879190611d06565b6103e8600354856112989190611937565b6112a291906119c0565b846112ad9190611d06565b915091509250929050565b60006301e1338069d3c21bcecceda100000083426112d69190611d06565b6112e09190611937565b6112ea91906119c0565b9050919050565b6000611353826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113b89092919063ffffffff16565b90506000815111156113b357808060200190518101906113739190611f30565b6113b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a990611fcf565b60405180910390fd5b5b505050565b60606113c784846000856113d0565b90509392505050565b606082471015611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c90612061565b60405180910390fd5b61141e856114e4565b61145d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611454906120cd565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114869190612167565b60006040518083038185875af1925050503d80600081146114c3576040519150601f19603f3d011682016040523d82523d6000602084013e6114c8565b606091505b50915091506114d8828286611507565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561151757829050611567565b60008351111561152a5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155e91906121d3565b60405180910390fd5b9392505050565b6040518060600160405280600081526020016000815260200161158f611595565b81525090565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000819050919050565b6115e5816115d2565b82525050565b60e08201600082015161160160008501826115dc565b50602082015161161460208501826115dc565b50604082015161162760408501826115dc565b50606082015161163a60608501826115dc565b50608082015161164d60808501826115dc565b5060a082015161166060a08501826115dc565b5060c082015161167360c08501826115dc565b50505050565b6101208201600082015161169060008501826115dc565b5060208201516116a360208501826115dc565b5060408201516116b660408501826115eb565b50505050565b6000610120820190506116d26000830184611679565b92915050565b60008115159050919050565b6116ed816116d8565b82525050565b600060208201905061170860008301846116e4565b92915050565b600080fd5b61171c816115d2565b811461172757600080fd5b50565b60008135905061173981611713565b92915050565b600080604083850312156117565761175561170e565b5b60006117648582860161172a565b92505060206117758582860161172a565b9150509250929050565b611788816115d2565b82525050565b60006020820190506117a3600083018461177f565b92915050565b6000602082840312156117bf576117be61170e565b5b60006117cd8482850161172a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611801826117d6565b9050919050565b611811816117f6565b82525050565b600060208201905061182c6000830184611808565b92915050565b61183b816117f6565b811461184657600080fd5b50565b60008135905061185881611832565b92915050565b6000602082840312156118745761187361170e565b5b600061188284828501611849565b91505092915050565b600082825260208201905092915050565b7f5374616b696e67206e6f7420666f756e64000000000000000000000000000000600082015250565b60006118d260118361188b565b91506118dd8261189c565b602082019050919050565b60006020820190508181036000830152611901816118c5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611942826115d2565b915061194d836115d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561198657611985611908565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119cb826115d2565b91506119d6836115d2565b9250826119e6576119e5611991565b5b828204905092915050565b60006119fc826115d2565b9150611a07836115d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a3c57611a3b611908565b5b828201905092915050565b7f436c61696d61626c65206f6e63652061207765656b0000000000000000000000600082015250565b6000611a7d60158361188b565b9150611a8882611a47565b602082019050919050565b60006020820190508181036000830152611aac81611a70565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ae960208361188b565b9150611af482611ab3565b602082019050919050565b60006020820190508181036000830152611b1881611adc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611b55601f8361188b565b9150611b6082611b1f565b602082019050919050565b60006020820190508181036000830152611b8481611b48565b9050919050565b7f557365722069732061205374616b657200000000000000000000000000000000600082015250565b6000611bc160108361188b565b9150611bcc82611b8b565b602082019050919050565b60006020820190508181036000830152611bf081611bb4565b9050919050565b7f5061636b616765206e6f7420466f756e64000000000000000000000000000000600082015250565b6000611c2d60118361188b565b9150611c3882611bf7565b602082019050919050565b60006020820190508181036000830152611c5c81611c20565b9050919050565b6000606082019050611c78600083018661177f565b611c85602083018561177f565b611c92604083018461177f565b949350505050565b7f50656e616c7479206d6178203330250000000000000000000000000000000000600082015250565b6000611cd0600f8361188b565b9150611cdb82611c9a565b602082019050919050565b60006020820190508181036000830152611cff81611cc3565b9050919050565b6000611d11826115d2565b9150611d1c836115d2565b925082821015611d2f57611d2e611908565b5b828203905092915050565b7f41697264726f70206d6178203230250000000000000000000000000000000000600082015250565b6000611d70600f8361188b565b9150611d7b82611d3a565b602082019050919050565b60006020820190508181036000830152611d9f81611d63565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e0260268361188b565b9150611e0d82611da6565b604082019050919050565b60006020820190508181036000830152611e3181611df5565b9050919050565b7f41697264726f70206e6f74207374617274656400000000000000000000000000600082015250565b6000611e6e60138361188b565b9150611e7982611e38565b602082019050919050565b60006020820190508181036000830152611e9d81611e61565b9050919050565b6000604082019050611eb96000830185611808565b611ec6602083018461177f565b9392505050565b6000606082019050611ee26000830186611808565b611eef6020830185611808565b611efc604083018461177f565b949350505050565b611f0d816116d8565b8114611f1857600080fd5b50565b600081519050611f2a81611f04565b92915050565b600060208284031215611f4657611f4561170e565b5b6000611f5484828501611f1b565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611fb9602a8361188b565b9150611fc482611f5d565b604082019050919050565b60006020820190508181036000830152611fe881611fac565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061204b60268361188b565b915061205682611fef565b604082019050919050565b6000602082019050818103600083015261207a8161203e565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006120b7601d8361188b565b91506120c282612081565b602082019050919050565b600060208201905081810360008301526120e6816120aa565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015612121578082015181840152602081019050612106565b83811115612130576000848401525b50505050565b6000612141826120ed565b61214b81856120f8565b935061215b818560208601612103565b80840191505092915050565b60006121738284612136565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006121a58261217e565b6121af818561188b565b93506121bf818560208601612103565b6121c881612189565b840191505092915050565b600060208201905081810360008301526121ed818461219a565b90509291505056fea264697066735822122000b3444dbebe441cc07de2b305bdcadc85b6615ac278de8077d79389c82a616864736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBED9D861 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xD2A569C3 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AC JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xADB61832 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xB5D9DF83 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x240 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x8C8E8FEE EQ PUSH2 0x1B6 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x10486B6A EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2CF1A5FB EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH2 0x4BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15E PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0xAB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0xD13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x3D8 DUP4 PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x438 JUMPI PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP3 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x0 PUSH2 0x447 DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0xA8A JUMP JUMPDEST GT ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 PUSH2 0x45C DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x482 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4C2 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x55C DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x5FB PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x5F6 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x626 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x673 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 PUSH1 0x0 PUSH2 0x110F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x752 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A9 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP5 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH2 0x8C1 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x11D5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP5 DUP4 DUP5 DUP7 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x916 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x939 PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x957 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 DUP3 TIMESTAMP PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF0 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0xBDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE8 DUP3 PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP TIMESTAMP DUP3 PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x0 DUP1 PUSH2 0xC81 DUP5 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x125E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xCBD PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST POP POP PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xD00 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0xCFB SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH2 0x1081 JUMP JUMPDEST JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD1B PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD39 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDBB PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD9 PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE26 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E DUP2 PUSH1 0x40 MLOAD PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xEBC PUSH2 0x1107 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEDA PUSH2 0xA58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF27 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA9 DUP2 PUSH2 0x110F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xFC7 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x12B8 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0xFEF SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x4 SLOAD DUP5 PUSH2 0x100E SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x1018 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x1022 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x107F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1076 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1102 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10A0 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1258 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12F1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST DUP5 PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP6 PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x12A2 SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST DUP5 PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 PUSH10 0xD3C21BCECCEDA1000000 DUP4 TIMESTAMP PUSH2 0x12D6 SWAP2 SWAP1 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x12E0 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x19C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1353 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP1 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13C7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140C SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x141E DUP6 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x145D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1454 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14C3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14D8 DUP3 DUP3 DUP7 PUSH2 0x1507 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1517 JUMPI DUP3 SWAP1 POP PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x152A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158F PUSH2 0x1595 JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E5 DUP2 PUSH2 0x15D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1601 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1614 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1627 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x163A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x164D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1660 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1673 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1690 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16A3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x15DC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16B6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x15EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x16D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1679 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1708 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x15D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1739 DUP2 PUSH2 0x1713 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1764 DUP6 DUP3 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1775 DUP6 DUP3 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1788 DUP2 PUSH2 0x15D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17BF JUMPI PUSH2 0x17BE PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17CD DUP5 DUP3 DUP6 ADD PUSH2 0x172A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1801 DUP3 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1811 DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183B DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1858 DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1882 DUP5 DUP3 DUP6 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67206E6F7420666F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D2 PUSH1 0x11 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x18DD DUP3 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1901 DUP2 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1942 DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x194D DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1985 PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D6 DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19E6 JUMPI PUSH2 0x19E5 PUSH2 0x1991 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FC DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A07 DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A3C JUMPI PUSH2 0x1A3B PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436C61696D61626C65206F6E63652061207765656B0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7D PUSH1 0x15 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A88 DUP3 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AAC DUP2 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE9 PUSH1 0x20 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF4 DUP3 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B18 DUP2 PUSH2 0x1ADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B55 PUSH1 0x1F DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B60 DUP3 PUSH2 0x1B1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B84 DUP2 PUSH2 0x1B48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x557365722069732061205374616B657200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 PUSH1 0x10 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCC DUP3 PUSH2 0x1B8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF0 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061636B616765206E6F7420466F756E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2D PUSH1 0x11 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C38 DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5C DUP2 PUSH2 0x1C20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C78 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x1C85 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x1C92 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x50656E616C7479206D6178203330250000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0xF DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFF DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1C DUP4 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D2F JUMPI PUSH2 0x1D2E PUSH2 0x1908 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41697264726F70206D6178203230250000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D70 PUSH1 0xF DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7B DUP3 PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9F DUP2 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E02 PUSH1 0x26 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0D DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E31 DUP2 PUSH2 0x1DF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41697264726F70206E6F74207374617274656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6E PUSH1 0x13 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E79 DUP3 PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9D DUP2 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EB9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1EC6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EE2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1EEF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x1EFC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F0D DUP2 PUSH2 0x16D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F2A DUP2 PUSH2 0x1F04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F46 JUMPI PUSH2 0x1F45 PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F54 DUP5 DUP3 DUP6 ADD PUSH2 0x1F1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB9 PUSH1 0x2A DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC4 DUP3 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FE8 DUP2 PUSH2 0x1FAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204B PUSH1 0x26 DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x2056 DUP3 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x207A DUP2 PUSH2 0x203E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B7 PUSH1 0x1D DUP4 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP PUSH2 0x20C2 DUP3 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20E6 DUP2 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2121 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2106 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2130 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2141 DUP3 PUSH2 0x20ED JUMP JUMPDEST PUSH2 0x214B DUP2 DUP6 PUSH2 0x20F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x215B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2103 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2173 DUP3 DUP5 PUSH2 0x2136 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A5 DUP3 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x21AF DUP2 DUP6 PUSH2 0x188B JUMP JUMPDEST SWAP4 POP PUSH2 0x21BF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2103 JUMP JUMPDEST PUSH2 0x21C8 DUP2 PUSH2 0x2189 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21ED DUP2 DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xB3 DIFFICULTY 0x4D 0xBE 0xBE DIFFICULTY SHR 0xC0 PUSH30 0xE2B305BDCADC85B6615AC278DE8077D79389C82A616864736F6C63430008 SIGNEXTEND STOP CALLER ",
							"sourceMap": "247:8846:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6602:931;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;625:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8396:695;;;:::i;:::-;;1668:101:0;;;:::i;:::-;;2931:1167:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;560:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4104:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;657:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7970:95:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8071:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5628:968;;;:::i;:::-;;521:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7645:120;;;:::i;:::-;;7771:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6602:931:6;6645:21;;:::i;:::-;6678:23;6704:12;:24;6717:10;6704:24;;;;;;;;;;;;;;;6678:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6767:1;6746:10;:17;;;:22;;6738:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6800:29;6832:32;;;;;;;;6847:1;6832:32;;;;6850:1;6832:32;;;;6853:10;6832:32;;;6800:64;;6875:14;6892:33;6914:10;6892:21;:33::i;:::-;6875:50;;6968:15;6940:7;:13;;;:25;;;:43;6936:214;;;7134:4;7112:18;;7103:6;:27;;;;:::i;:::-;7102:36;;;;:::i;:::-;7077:4;7055:18;;7035:10;:17;;;:38;;;;:::i;:::-;7034:47;;;;:::i;:::-;7033:106;;;;:::i;:::-;6999:7;:15;;:140;;;;;6936:214;7208:1;7164:41;7178:10;:26;;;7164:13;:41::i;:::-;:45;7160:249;;;7225:15;7243:36;7261:10;:17;;;7243;:36::i;:::-;7225:54;;7326:7;7293;:13;;;:30;;:40;;;;;7211:133;7160:249;;;7397:1;7364:7;:13;;;:30;;:34;;;;;7160:249;7445:6;7419:7;:13;;;:23;;:32;;;;;7484:10;:17;;;7461:7;:20;;:40;;;;;7519:7;7512:14;;;;;6602:931;:::o;625:25::-;;;;;;;;;;;;;:::o;8396:695::-;2575:21;:19;:21::i;:::-;8509:24:::1;8536:12;:24;8549:10;8536:24;;;;;;;;;;;;;;;8509:51;;8600:1;8579:10;:17;;;:22;;8571:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;8633:19;8655:41;8669:10;:26;;;8655:13;:41::i;:::-;8633:63;;8731:1;8711:10;:17;;;:21;8707:378;;;8771:1;8756:11;:16;;8748:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;8843:1;8813:10;:27;;:31;;;;8887:15;8858:10;:26;;:44;;;;8917:157;8964:13;;;;;;;;;;;8996:10;9024:36;9042:10;:17;;;9024;:36::i;:::-;8917:22;:157::i;:::-;8707:378;8447:644;;8396:695::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2931:1167:6:-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3241:1:6::1;3206:12;:24;3219:10;3206:24;;;;;;;;;;;;;;;:31;;;:36;3198:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3312:1;3281:14;:27;3296:11;3281:27;;;;;;;;;;;;:32;;3273:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3433:17;3453:15;3433:35;;3624:183;;;;;;;;3643:6;3624:183;;;;3663:9;3624:183;;;;3686:14;:27;3701:11;3686:27;;;;;;;;;;;;3624:183;;;;3742:9;3728:11;:23;;;;:::i;:::-;3624:183;;;;3766:1;3624:183;;;;3781:1;3624:183;;;;3796:1;3624:183;;::::0;3597:12:::1;:24;3610:10;3597:24;;;;;;;;;;;;;;;:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3818:142;3865:13;;;;;;;;;;;3893:10;3925:4;3944:6;3818:26;:142::i;:::-;4034:10;4027:64;;;4046:6;4054:9;4080;4066:11;:23;;;;:::i;:::-;4027:64;;;;;;;;:::i;:::-;;;;;;;;3005:1093;1701:1:1::0;2628:7;:22;;;;2931:1167:6;;:::o;560:26::-;;;;:::o;4104:266::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4267:2:6::1;4257:6;:12;;4249:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;4320:6;4299:18;:27;;;;4341:22;4356:6;4341:22;;;;;;:::i;:::-;;;;;;;;4104:266:::0;:::o;657:28::-;;;;;;;;;;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;7970:95:6:-;8017:7;8043:15;8036:22;;7970:95;:::o;8071:134::-;8134:7;8192:6;8179:9;8161:15;:27;;;;:::i;:::-;8160:38;;;;:::i;:::-;8153:45;;8071:134;;;:::o;592:27::-;;;;:::o;5628:968::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;5793:23:6::1;5819:12;:24;5832:10;5819:24;;;;;;;;;;;;;;;5793:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;5882:1;5861:10;:17;;;:22;;5853:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5916:14;5933:33;5955:10;5933:21;:33::i;:::-;5916:50;;5983:12;:24;5996:10;5983:24;;;;;;;;;;;;;;;;5976:31:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6047:15;6022:10;:22;;;:40;6018:572;;;6096:22;6136::::0;6175:55:::1;6204:10;:17;;;6223:6;6175:28;:55::i;:::-;6078:152;;;;6245:154;6292:13;;;;;;;;;;;6324:10;6370:14;6353;:31;;;;:::i;:::-;6245:22;:154::i;:::-;6064:346;;6018:572;;;6430:149;6477:13;;;;;;;;;;;6509:10;6558:6;6538:10;:17;;;:26;;;;:::i;:::-;6430:22;:149::i;:::-;6018:572;5675:921;;1701:1:1::0;2628:7;:22;;;;5628:968:6:o;521:33::-;;;;:::o;7645:120::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7713:15:6::1;7698:12;:30;;;;7754:4;7738:13;;:20;;;;;;;;;;;;;;;;;;7645:120::o:0;7771:193::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7867:3:6::1;7857:6;:13;;7849:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7914:6;7900:11;:20;;;;7935:22;7950:6;7935:22;;;;;;:::i;:::-;;;;;;;;7771:193:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4613:367:6:-;4716:7;4969:4;4922:43;4948:10;:16;;;4922:25;:43::i;:::-;4883:10;:20;;;4847:10;:17;;;:56;;;;:::i;:::-;:118;;;;:::i;:::-;4846:127;;;;:::i;:::-;4827:146;;4613:367;;;:::o;8211:179::-;8306:7;8375:8;8367:4;8352:11;;8338;:25;;;;:::i;:::-;8337:34;;;;:::i;:::-;8336:47;;;;:::i;:::-;8329:54;;8211:179;;;:::o;2415:115::-;2495:4;2478:21;;:13;;;;;;;;;;;:21;;;2470:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2415:115::o;701:205:3:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;912:241:3:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;4986:295:6:-;5103:7;5112;5198:4;5176:18;;5167:6;:27;;;;:::i;:::-;5166:36;;;;:::i;:::-;5156:6;:47;;;;:::i;:::-;5259:4;5237:18;;5228:6;:27;;;;:::i;:::-;5227:36;;;;:::i;:::-;5217:6;:47;;;;:::i;:::-;5135:139;;;;4986:295;;;;;:::o;4376:231::-;4473:7;4592:8;4584:4;4575:5;4557:15;:23;;;;:::i;:::-;4556:32;;;;:::i;:::-;4555:45;;;;:::i;:::-;4548:52;;4376:231;;;:::o;3207:706:3:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3861:223:4:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:108::-;167:24;185:5;167:24;:::i;:::-;162:3;155:37;90:108;;:::o;256:1404::-;387:4;382:3;378:14;476:4;469:5;465:16;459:23;495:63;552:4;547:3;543:14;529:12;495:63;:::i;:::-;402:166;651:4;644:5;640:16;634:23;670:63;727:4;722:3;718:14;704:12;670:63;:::i;:::-;578:165;830:4;823:5;819:16;813:23;849:63;906:4;901:3;897:14;883:12;849:63;:::i;:::-;753:169;1011:4;1004:5;1000:16;994:23;1030:63;1087:4;1082:3;1078:14;1064:12;1030:63;:::i;:::-;932:171;1190:4;1183:5;1179:16;1173:23;1209:63;1266:4;1261:3;1257:14;1243:12;1209:63;:::i;:::-;1113:169;1376:4;1369:5;1365:16;1359:23;1395:63;1452:4;1447:3;1443:14;1429:12;1395:63;:::i;:::-;1292:176;1561:4;1554:5;1550:16;1544:23;1580:63;1637:4;1632:3;1628:14;1614:12;1580:63;:::i;:::-;1478:175;356:1304;256:1404;;:::o;1736:751::-;1895:6;1890:3;1886:16;1992:4;1985:5;1981:16;1975:23;2011:63;2068:4;2063:3;2059:14;2045:12;2011:63;:::i;:::-;1912:172;2169:4;2162:5;2158:16;2152:23;2188:63;2245:4;2240:3;2236:14;2222:12;2188:63;:::i;:::-;2094:167;2344:4;2337:5;2333:16;2327:23;2363:107;2464:4;2459:3;2455:14;2441:12;2363:107;:::i;:::-;2271:209;1864:623;1736:751;;:::o;2493:347::-;2648:4;2686:3;2675:9;2671:19;2663:27;;2700:133;2830:1;2819:9;2815:17;2806:6;2700:133;:::i;:::-;2493:347;;;;:::o;2846:90::-;2880:7;2923:5;2916:13;2909:21;2898:32;;2846:90;;;:::o;2942:109::-;3023:21;3038:5;3023:21;:::i;:::-;3018:3;3011:34;2942:109;;:::o;3057:210::-;3144:4;3182:2;3171:9;3167:18;3159:26;;3195:65;3257:1;3246:9;3242:17;3233:6;3195:65;:::i;:::-;3057:210;;;;:::o;3354:117::-;3463:1;3460;3453:12;3600:122;3673:24;3691:5;3673:24;:::i;:::-;3666:5;3663:35;3653:63;;3712:1;3709;3702:12;3653:63;3600:122;:::o;3728:139::-;3774:5;3812:6;3799:20;3790:29;;3828:33;3855:5;3828:33;:::i;:::-;3728:139;;;;:::o;3873:474::-;3941:6;3949;3998:2;3986:9;3977:7;3973:23;3969:32;3966:119;;;4004:79;;:::i;:::-;3966:119;4124:1;4149:53;4194:7;4185:6;4174:9;4170:22;4149:53;:::i;:::-;4139:63;;4095:117;4251:2;4277:53;4322:7;4313:6;4302:9;4298:22;4277:53;:::i;:::-;4267:63;;4222:118;3873:474;;;;;:::o;4353:118::-;4440:24;4458:5;4440:24;:::i;:::-;4435:3;4428:37;4353:118;;:::o;4477:222::-;4570:4;4608:2;4597:9;4593:18;4585:26;;4621:71;4689:1;4678:9;4674:17;4665:6;4621:71;:::i;:::-;4477:222;;;;:::o;4705:329::-;4764:6;4813:2;4801:9;4792:7;4788:23;4784:32;4781:119;;;4819:79;;:::i;:::-;4781:119;4939:1;4964:53;5009:7;5000:6;4989:9;4985:22;4964:53;:::i;:::-;4954:63;;4910:117;4705:329;;;;:::o;5040:126::-;5077:7;5117:42;5110:5;5106:54;5095:65;;5040:126;;;:::o;5172:96::-;5209:7;5238:24;5256:5;5238:24;:::i;:::-;5227:35;;5172:96;;;:::o;5274:118::-;5361:24;5379:5;5361:24;:::i;:::-;5356:3;5349:37;5274:118;;:::o;5398:222::-;5491:4;5529:2;5518:9;5514:18;5506:26;;5542:71;5610:1;5599:9;5595:17;5586:6;5542:71;:::i;:::-;5398:222;;;;:::o;5626:122::-;5699:24;5717:5;5699:24;:::i;:::-;5692:5;5689:35;5679:63;;5738:1;5735;5728:12;5679:63;5626:122;:::o;5754:139::-;5800:5;5838:6;5825:20;5816:29;;5854:33;5881:5;5854:33;:::i;:::-;5754:139;;;;:::o;5899:329::-;5958:6;6007:2;5995:9;5986:7;5982:23;5978:32;5975:119;;;6013:79;;:::i;:::-;5975:119;6133:1;6158:53;6203:7;6194:6;6183:9;6179:22;6158:53;:::i;:::-;6148:63;;6104:117;5899:329;;;;:::o;6234:169::-;6318:11;6352:6;6347:3;6340:19;6392:4;6387:3;6383:14;6368:29;;6234:169;;;;:::o;6409:167::-;6549:19;6545:1;6537:6;6533:14;6526:43;6409:167;:::o;6582:366::-;6724:3;6745:67;6809:2;6804:3;6745:67;:::i;:::-;6738:74;;6821:93;6910:3;6821:93;:::i;:::-;6939:2;6934:3;6930:12;6923:19;;6582:366;;;:::o;6954:419::-;7120:4;7158:2;7147:9;7143:18;7135:26;;7207:9;7201:4;7197:20;7193:1;7182:9;7178:17;7171:47;7235:131;7361:4;7235:131;:::i;:::-;7227:139;;6954:419;;;:::o;7379:180::-;7427:77;7424:1;7417:88;7524:4;7521:1;7514:15;7548:4;7545:1;7538:15;7565:348;7605:7;7628:20;7646:1;7628:20;:::i;:::-;7623:25;;7662:20;7680:1;7662:20;:::i;:::-;7657:25;;7850:1;7782:66;7778:74;7775:1;7772:81;7767:1;7760:9;7753:17;7749:105;7746:131;;;7857:18;;:::i;:::-;7746:131;7905:1;7902;7898:9;7887:20;;7565:348;;;;:::o;7919:180::-;7967:77;7964:1;7957:88;8064:4;8061:1;8054:15;8088:4;8085:1;8078:15;8105:185;8145:1;8162:20;8180:1;8162:20;:::i;:::-;8157:25;;8196:20;8214:1;8196:20;:::i;:::-;8191:25;;8235:1;8225:35;;8240:18;;:::i;:::-;8225:35;8282:1;8279;8275:9;8270:14;;8105:185;;;;:::o;8296:305::-;8336:3;8355:20;8373:1;8355:20;:::i;:::-;8350:25;;8389:20;8407:1;8389:20;:::i;:::-;8384:25;;8543:1;8475:66;8471:74;8468:1;8465:81;8462:107;;;8549:18;;:::i;:::-;8462:107;8593:1;8590;8586:9;8579:16;;8296:305;;;;:::o;8607:171::-;8747:23;8743:1;8735:6;8731:14;8724:47;8607:171;:::o;8784:366::-;8926:3;8947:67;9011:2;9006:3;8947:67;:::i;:::-;8940:74;;9023:93;9112:3;9023:93;:::i;:::-;9141:2;9136:3;9132:12;9125:19;;8784:366;;;:::o;9156:419::-;9322:4;9360:2;9349:9;9345:18;9337:26;;9409:9;9403:4;9399:20;9395:1;9384:9;9380:17;9373:47;9437:131;9563:4;9437:131;:::i;:::-;9429:139;;9156:419;;;:::o;9581:182::-;9721:34;9717:1;9709:6;9705:14;9698:58;9581:182;:::o;9769:366::-;9911:3;9932:67;9996:2;9991:3;9932:67;:::i;:::-;9925:74;;10008:93;10097:3;10008:93;:::i;:::-;10126:2;10121:3;10117:12;10110:19;;9769:366;;;:::o;10141:419::-;10307:4;10345:2;10334:9;10330:18;10322:26;;10394:9;10388:4;10384:20;10380:1;10369:9;10365:17;10358:47;10422:131;10548:4;10422:131;:::i;:::-;10414:139;;10141:419;;;:::o;10566:181::-;10706:33;10702:1;10694:6;10690:14;10683:57;10566:181;:::o;10753:366::-;10895:3;10916:67;10980:2;10975:3;10916:67;:::i;:::-;10909:74;;10992:93;11081:3;10992:93;:::i;:::-;11110:2;11105:3;11101:12;11094:19;;10753:366;;;:::o;11125:419::-;11291:4;11329:2;11318:9;11314:18;11306:26;;11378:9;11372:4;11368:20;11364:1;11353:9;11349:17;11342:47;11406:131;11532:4;11406:131;:::i;:::-;11398:139;;11125:419;;;:::o;11550:166::-;11690:18;11686:1;11678:6;11674:14;11667:42;11550:166;:::o;11722:366::-;11864:3;11885:67;11949:2;11944:3;11885:67;:::i;:::-;11878:74;;11961:93;12050:3;11961:93;:::i;:::-;12079:2;12074:3;12070:12;12063:19;;11722:366;;;:::o;12094:419::-;12260:4;12298:2;12287:9;12283:18;12275:26;;12347:9;12341:4;12337:20;12333:1;12322:9;12318:17;12311:47;12375:131;12501:4;12375:131;:::i;:::-;12367:139;;12094:419;;;:::o;12519:167::-;12659:19;12655:1;12647:6;12643:14;12636:43;12519:167;:::o;12692:366::-;12834:3;12855:67;12919:2;12914:3;12855:67;:::i;:::-;12848:74;;12931:93;13020:3;12931:93;:::i;:::-;13049:2;13044:3;13040:12;13033:19;;12692:366;;;:::o;13064:419::-;13230:4;13268:2;13257:9;13253:18;13245:26;;13317:9;13311:4;13307:20;13303:1;13292:9;13288:17;13281:47;13345:131;13471:4;13345:131;:::i;:::-;13337:139;;13064:419;;;:::o;13489:442::-;13638:4;13676:2;13665:9;13661:18;13653:26;;13689:71;13757:1;13746:9;13742:17;13733:6;13689:71;:::i;:::-;13770:72;13838:2;13827:9;13823:18;13814:6;13770:72;:::i;:::-;13852;13920:2;13909:9;13905:18;13896:6;13852:72;:::i;:::-;13489:442;;;;;;:::o;13937:165::-;14077:17;14073:1;14065:6;14061:14;14054:41;13937:165;:::o;14108:366::-;14250:3;14271:67;14335:2;14330:3;14271:67;:::i;:::-;14264:74;;14347:93;14436:3;14347:93;:::i;:::-;14465:2;14460:3;14456:12;14449:19;;14108:366;;;:::o;14480:419::-;14646:4;14684:2;14673:9;14669:18;14661:26;;14733:9;14727:4;14723:20;14719:1;14708:9;14704:17;14697:47;14761:131;14887:4;14761:131;:::i;:::-;14753:139;;14480:419;;;:::o;14905:191::-;14945:4;14965:20;14983:1;14965:20;:::i;:::-;14960:25;;14999:20;15017:1;14999:20;:::i;:::-;14994:25;;15038:1;15035;15032:8;15029:34;;;15043:18;;:::i;:::-;15029:34;15088:1;15085;15081:9;15073:17;;14905:191;;;;:::o;15102:165::-;15242:17;15238:1;15230:6;15226:14;15219:41;15102:165;:::o;15273:366::-;15415:3;15436:67;15500:2;15495:3;15436:67;:::i;:::-;15429:74;;15512:93;15601:3;15512:93;:::i;:::-;15630:2;15625:3;15621:12;15614:19;;15273:366;;;:::o;15645:419::-;15811:4;15849:2;15838:9;15834:18;15826:26;;15898:9;15892:4;15888:20;15884:1;15873:9;15869:17;15862:47;15926:131;16052:4;15926:131;:::i;:::-;15918:139;;15645:419;;;:::o;16070:225::-;16210:34;16206:1;16198:6;16194:14;16187:58;16279:8;16274:2;16266:6;16262:15;16255:33;16070:225;:::o;16301:366::-;16443:3;16464:67;16528:2;16523:3;16464:67;:::i;:::-;16457:74;;16540:93;16629:3;16540:93;:::i;:::-;16658:2;16653:3;16649:12;16642:19;;16301:366;;;:::o;16673:419::-;16839:4;16877:2;16866:9;16862:18;16854:26;;16926:9;16920:4;16916:20;16912:1;16901:9;16897:17;16890:47;16954:131;17080:4;16954:131;:::i;:::-;16946:139;;16673:419;;;:::o;17098:169::-;17238:21;17234:1;17226:6;17222:14;17215:45;17098:169;:::o;17273:366::-;17415:3;17436:67;17500:2;17495:3;17436:67;:::i;:::-;17429:74;;17512:93;17601:3;17512:93;:::i;:::-;17630:2;17625:3;17621:12;17614:19;;17273:366;;;:::o;17645:419::-;17811:4;17849:2;17838:9;17834:18;17826:26;;17898:9;17892:4;17888:20;17884:1;17873:9;17869:17;17862:47;17926:131;18052:4;17926:131;:::i;:::-;17918:139;;17645:419;;;:::o;18070:332::-;18191:4;18229:2;18218:9;18214:18;18206:26;;18242:71;18310:1;18299:9;18295:17;18286:6;18242:71;:::i;:::-;18323:72;18391:2;18380:9;18376:18;18367:6;18323:72;:::i;:::-;18070:332;;;;;:::o;18408:442::-;18557:4;18595:2;18584:9;18580:18;18572:26;;18608:71;18676:1;18665:9;18661:17;18652:6;18608:71;:::i;:::-;18689:72;18757:2;18746:9;18742:18;18733:6;18689:72;:::i;:::-;18771;18839:2;18828:9;18824:18;18815:6;18771:72;:::i;:::-;18408:442;;;;;;:::o;18856:116::-;18926:21;18941:5;18926:21;:::i;:::-;18919:5;18916:32;18906:60;;18962:1;18959;18952:12;18906:60;18856:116;:::o;18978:137::-;19032:5;19063:6;19057:13;19048:22;;19079:30;19103:5;19079:30;:::i;:::-;18978:137;;;;:::o;19121:345::-;19188:6;19237:2;19225:9;19216:7;19212:23;19208:32;19205:119;;;19243:79;;:::i;:::-;19205:119;19363:1;19388:61;19441:7;19432:6;19421:9;19417:22;19388:61;:::i;:::-;19378:71;;19334:125;19121:345;;;;:::o;19472:229::-;19612:34;19608:1;19600:6;19596:14;19589:58;19681:12;19676:2;19668:6;19664:15;19657:37;19472:229;:::o;19707:366::-;19849:3;19870:67;19934:2;19929:3;19870:67;:::i;:::-;19863:74;;19946:93;20035:3;19946:93;:::i;:::-;20064:2;20059:3;20055:12;20048:19;;19707:366;;;:::o;20079:419::-;20245:4;20283:2;20272:9;20268:18;20260:26;;20332:9;20326:4;20322:20;20318:1;20307:9;20303:17;20296:47;20360:131;20486:4;20360:131;:::i;:::-;20352:139;;20079:419;;;:::o;20504:225::-;20644:34;20640:1;20632:6;20628:14;20621:58;20713:8;20708:2;20700:6;20696:15;20689:33;20504:225;:::o;20735:366::-;20877:3;20898:67;20962:2;20957:3;20898:67;:::i;:::-;20891:74;;20974:93;21063:3;20974:93;:::i;:::-;21092:2;21087:3;21083:12;21076:19;;20735:366;;;:::o;21107:419::-;21273:4;21311:2;21300:9;21296:18;21288:26;;21360:9;21354:4;21350:20;21346:1;21335:9;21331:17;21324:47;21388:131;21514:4;21388:131;:::i;:::-;21380:139;;21107:419;;;:::o;21532:179::-;21672:31;21668:1;21660:6;21656:14;21649:55;21532:179;:::o;21717:366::-;21859:3;21880:67;21944:2;21939:3;21880:67;:::i;:::-;21873:74;;21956:93;22045:3;21956:93;:::i;:::-;22074:2;22069:3;22065:12;22058:19;;21717:366;;;:::o;22089:419::-;22255:4;22293:2;22282:9;22278:18;22270:26;;22342:9;22336:4;22332:20;22328:1;22317:9;22313:17;22306:47;22370:131;22496:4;22370:131;:::i;:::-;22362:139;;22089:419;;;:::o;22514:98::-;22565:6;22599:5;22593:12;22583:22;;22514:98;;;:::o;22618:147::-;22719:11;22756:3;22741:18;;22618:147;;;;:::o;22771:307::-;22839:1;22849:113;22863:6;22860:1;22857:13;22849:113;;;22948:1;22943:3;22939:11;22933:18;22929:1;22924:3;22920:11;22913:39;22885:2;22882:1;22878:10;22873:15;;22849:113;;;22980:6;22977:1;22974:13;22971:101;;;23060:1;23051:6;23046:3;23042:16;23035:27;22971:101;22820:258;22771:307;;;:::o;23084:373::-;23188:3;23216:38;23248:5;23216:38;:::i;:::-;23270:88;23351:6;23346:3;23270:88;:::i;:::-;23263:95;;23367:52;23412:6;23407:3;23400:4;23393:5;23389:16;23367:52;:::i;:::-;23444:6;23439:3;23435:16;23428:23;;23192:265;23084:373;;;;:::o;23463:271::-;23593:3;23615:93;23704:3;23695:6;23615:93;:::i;:::-;23608:100;;23725:3;23718:10;;23463:271;;;;:::o;23740:99::-;23792:6;23826:5;23820:12;23810:22;;23740:99;;;:::o;23845:102::-;23886:6;23937:2;23933:7;23928:2;23921:5;23917:14;23913:28;23903:38;;23845:102;;;:::o;23953:364::-;24041:3;24069:39;24102:5;24069:39;:::i;:::-;24124:71;24188:6;24183:3;24124:71;:::i;:::-;24117:78;;24204:52;24249:6;24244:3;24237:4;24230:5;24226:16;24204:52;:::i;:::-;24281:29;24303:6;24281:29;:::i;:::-;24276:3;24272:39;24265:46;;24045:272;23953:364;;;;:::o;24323:313::-;24436:4;24474:2;24463:9;24459:18;24451:26;;24523:9;24517:4;24513:20;24509:1;24498:9;24494:17;24487:47;24551:78;24624:4;24615:6;24551:78;:::i;:::-;24543:86;;24323:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1749400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"airdropRate()": "2474",
								"airdropSince()": "2518",
								"airdropStatus()": "2517",
								"blockTimestamp()": "381",
								"calculateWeek(uint256)": "infinite",
								"changeAirdropPercentage(uint256)": "infinite",
								"changePenaltyFee(uint256)": "infinite",
								"claimAirdrop()": "infinite",
								"hasStake()": "infinite",
								"owner()": "2545",
								"renounceOwnership()": "30464",
								"stake(uint256,uint256)": "infinite",
								"stakingPenaltyRate()": "2473",
								"startAirdrop()": "48830",
								"token_address()": "2653",
								"transferOwnership(address)": "30833",
								"withdrawStake()": "infinite"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateStakeReward(struct Staking.Stake memory)": "infinite",
								"_calculateStakingDuration(uint256)": "infinite",
								"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
								"_checkAirdropStatus()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 692,
									"end": 993,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 791,
									"end": 809,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 791,
									"end": 814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 791,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 791,
									"end": 814,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 791,
									"end": 814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 838,
									"end": 840,
									"name": "PUSH",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 824,
									"end": 835,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 824,
									"end": 840,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 824,
									"end": 840,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 824,
									"end": 840,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 824,
									"end": 840,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 851,
									"end": 864,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 851,
									"end": 864,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 851,
									"end": 872,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 851,
									"end": 872,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 872,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 851,
									"end": 872,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 851,
									"end": 872,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 883,
									"end": 897,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 883,
									"end": 906,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 905,
									"name": "PUSH",
									"source": 6,
									"value": "76A700"
								},
								{
									"begin": 883,
									"end": 906,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 883,
									"end": 906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 883,
									"end": 906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 883,
									"end": 906,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 883,
									"end": 906,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 883,
									"end": 910,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 883,
									"end": 910,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 883,
									"end": 910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 883,
									"end": 910,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 947,
									"end": 948,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 920,
									"end": 934,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 920,
									"end": 944,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "ED4E00"
								},
								{
									"begin": 920,
									"end": 944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 920,
									"end": 944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 920,
									"end": 944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 920,
									"end": 944,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 920,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 920,
									"end": 948,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 920,
									"end": 948,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 920,
									"end": 948,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 985,
									"end": 986,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 958,
									"end": 972,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 958,
									"end": 982,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 973,
									"end": 981,
									"name": "PUSH",
									"source": 6,
									"value": "1E13380"
								},
								{
									"begin": 958,
									"end": 982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 958,
									"end": 982,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 982,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 958,
									"end": 986,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 986,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 958,
									"end": 986,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 958,
									"end": 986,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 692,
									"end": 993,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 9093,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000b3444dbebe441cc07de2b305bdcadc85b6615ac278de8077d79389c82a616864736f6c634300080b0033",
									".code": [
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "BED9D861"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "BED9D861"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "CB79C2E1"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "D2A569C3"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "D5DBDF1B"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "ADB61832"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "B5D9DF83"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "B87DA76D"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "7B0472F0"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "7B0472F0"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "8891CF0D"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "8C63F97F"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "8C8E8FEE"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "10486B6A"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "2CF1A5FB"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "5B88349D"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 247,
											"end": 9093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6645,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6728,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6767,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6763,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6768,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6738,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6832,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6914,
											"end": 6924,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6892,
											"end": 6925,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6892,
											"end": 6925,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6892,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6983,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6940,
											"end": 6953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6940,
											"end": 6965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6965,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6983,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6936,
											"end": 7150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7138,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7112,
											"end": 7130,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7112,
											"end": 7130,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 7103,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7102,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7045,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7052,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7035,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7034,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 7033,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 7150,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6936,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7178,
											"end": 7188,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7164,
											"end": 7205,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7205,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7164,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7209,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 7261,
											"end": 7271,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7243,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7243,
											"end": 7279,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7243,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 7243,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7323,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7293,
											"end": 7323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7333,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7364,
											"end": 7377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7394,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7364,
											"end": 7394,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7160,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7432,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7419,
											"end": 7432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7432,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7442,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7419,
											"end": 7442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7419,
											"end": 7451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7484,
											"end": 7494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7484,
											"end": 7501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7484,
											"end": 7501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7512,
											"end": 7526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 7533,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 625,
											"end": 650,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 625,
											"end": 650,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2575,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8548,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8559,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8560,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8509,
											"end": 8560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8596,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8601,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8571,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8633,
											"end": 8652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8669,
											"end": 8679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8695,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8669,
											"end": 8695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8695,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8655,
											"end": 8696,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8655,
											"end": 8696,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 8655,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8633,
											"end": 8696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8633,
											"end": 8696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8732,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 9085,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8707,
											"end": 9085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8771,
											"end": 8772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 8748,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 8844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8813,
											"end": 8840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8844,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8902,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8868,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8884,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8858,
											"end": 8884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8964,
											"end": 8977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 9006,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 9042,
											"end": 9052,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 9024,
											"end": 9060,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9024,
											"end": 9060,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 9024,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 8917,
											"end": 9074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 9074,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 8917,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 8707,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8447,
											"end": 9091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8447,
											"end": 9091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 9091,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3218,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3229,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3230,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3237,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3242,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3198,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3307,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3313,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3468,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3649,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3712,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3713,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3739,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3620,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3621,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3865,
											"end": 3878,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3903,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3818,
											"end": 3960,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3818,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4044,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4077,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4091,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 4098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 4098,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 586,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 560,
											"end": 586,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4269,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4269,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4249,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4299,
											"end": 4326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4326,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "CFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9"
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4363,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4370,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 657,
											"end": 685,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 657,
											"end": 685,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8058,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8036,
											"end": 8058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8036,
											"end": 8058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7970,
											"end": 8065,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8198,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 8179,
											"end": 8188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8176,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8161,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8160,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8153,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8071,
											"end": 8205,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 619,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 592,
											"end": 619,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5831,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5842,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5793,
											"end": 5843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5883,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5883,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5853,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5955,
											"end": 5965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 5995,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6006,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6062,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6044,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6022,
											"end": 6044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6062,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6204,
											"end": 6214,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6221,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6175,
											"end": 6230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6175,
											"end": 6230,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6175,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6245,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6292,
											"end": 6305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6334,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6384,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6353,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6245,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6245,
											"end": 6399,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6245,
											"end": 6399,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6245,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6477,
											"end": 6490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6519,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6548,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6555,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6430,
											"end": 6579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6430,
											"end": 6579,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6430,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6018,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 6596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 6596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5628,
											"end": 6596,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 521,
											"end": 554,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 521,
											"end": 554,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7713,
											"end": 7728,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7710,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7698,
											"end": 7728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7728,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7758,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7738,
											"end": 7751,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7738,
											"end": 7751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7765,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7870,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7857,
											"end": 7870,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7857,
											"end": 7870,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7849,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 7920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7911,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 7920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7920,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "PUSH",
											"source": 6,
											"value": "CC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E"
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7935,
											"end": 7957,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7771,
											"end": 7964,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4613,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4613,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "PUSH",
											"source": 6,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 4922,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4948,
											"end": 4958,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4922,
											"end": 4965,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4922,
											"end": 4965,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4922,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4847,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4847,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4846,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4980,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8211,
											"end": 8390,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8211,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8383,
											"name": "PUSH",
											"source": 6,
											"value": "1DFE200"
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 8352,
											"end": 8363,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8352,
											"end": 8363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8349,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8338,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8337,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 8336,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8390,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2415,
											"end": 2530,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2415,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2478,
											"end": 2499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2499,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2470,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2530,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 888,
											"end": 890,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 892,
											"end": 897,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1144,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5173,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5167,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5166,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5156,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5259,
											"end": 5263,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5228,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5217,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5281,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4376,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4376,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4600,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4572,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4557,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4556,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4555,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4607,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "270"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "271"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "270"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "271"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 185,
											"end": 190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 167,
											"end": 191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 167,
											"end": 191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 162,
											"end": 165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 155,
											"end": 192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 198,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 256,
											"end": 1660,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 256,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 382,
											"end": 385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 378,
											"end": 392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 476,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 465,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 459,
											"end": 482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 495,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 552,
											"end": 556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 543,
											"end": 557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 495,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 495,
											"end": 558,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 558,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 495,
											"end": 558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 402,
											"end": 568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 651,
											"end": 655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 644,
											"end": 649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 640,
											"end": 656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 634,
											"end": 657,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 670,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 722,
											"end": 725,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 718,
											"end": 732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 704,
											"end": 716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 670,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 670,
											"end": 733,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 670,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 578,
											"end": 743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 830,
											"end": 834,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 819,
											"end": 835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 813,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 849,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 906,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 904,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 897,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 883,
											"end": 895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 849,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 849,
											"end": 912,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 912,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 849,
											"end": 912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 753,
											"end": 922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 932,
											"end": 1103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1190,
											"end": 1194,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1196,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1209,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1266,
											"end": 1270,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1261,
											"end": 1264,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1209,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1209,
											"end": 1272,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1272,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1209,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1452,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1447,
											"end": 1450,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1565,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1554,
											"end": 1559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1632,
											"end": 1635,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1580,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 356,
											"end": 1660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 256,
											"end": 1660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 256,
											"end": 1660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 256,
											"end": 1660,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 2487,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1736,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1890,
											"end": 1893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 1996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1998,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2173,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2175,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2245,
											"end": 2249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2243,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2188,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2094,
											"end": 2261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2464,
											"end": 2468,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2462,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2363,
											"end": 2470,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2470,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2363,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 2487,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2689,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2700,
											"end": 2833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2833,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2700,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2840,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2846,
											"end": 2936,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2846,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 2929,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2930,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2936,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2942,
											"end": 3051,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2942,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3023,
											"end": 3044,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3044,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3023,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3011,
											"end": 3045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 3051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 3051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 3051,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 3185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3195,
											"end": 3260,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3195,
											"end": 3260,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3195,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3267,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3461,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3465,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3722,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3600,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3698,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3653,
											"end": 3716,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3714,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3716,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3653,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3722,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3855,
											"end": 3860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3867,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 4085,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3966,
											"end": 4085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 4085,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3966,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4194,
											"end": 4201,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4183,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4170,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4149,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4149,
											"end": 4202,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4149,
											"end": 4202,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4149,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4202,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4277,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 4322,
											"end": 4329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4311,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4277,
											"end": 4330,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4277,
											"end": 4330,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 4277,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4267,
											"end": 4330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4347,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4353,
											"end": 4471,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4353,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4458,
											"end": 4463,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4440,
											"end": 4464,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4464,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4440,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4471,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4687,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 4621,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4699,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4799,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4811,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4784,
											"end": 4816,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4900,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4781,
											"end": 4900,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4819,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4819,
											"end": 4898,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 4898,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4819,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4900,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4781,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5009,
											"end": 5016,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 4998,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4964,
											"end": 5017,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 5017,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4964,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5017,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 5017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 5027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 5034,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5040,
											"end": 5166,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5040,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5159,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5160,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5166,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5172,
											"end": 5268,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5172,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5209,
											"end": 5216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 5256,
											"end": 5261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5238,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5238,
											"end": 5262,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5262,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 5238,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5268,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5274,
											"end": 5392,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5274,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 5379,
											"end": 5384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5392,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 5610,
											"end": 5611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5595,
											"end": 5612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5586,
											"end": 5592,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5620,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5626,
											"end": 5748,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5626,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5717,
											"end": 5722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5699,
											"end": 5723,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5699,
											"end": 5723,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5699,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5689,
											"end": 5724,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5679,
											"end": 5742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5740,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5742,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5679,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5748,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5800,
											"end": 5805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5845,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5881,
											"end": 5886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5854,
											"end": 5887,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 5887,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5854,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5893,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5995,
											"end": 6004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6005,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 6010,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 6094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5975,
											"end": 6094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 6013,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 6094,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5975,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6158,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6203,
											"end": 6210,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 6158,
											"end": 6211,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6158,
											"end": 6211,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6158,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 6228,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6383,
											"end": 6397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6403,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6409,
											"end": 6576,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6409,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B696E67206E6F7420666F756E64000000000000000000000000000000"
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6543,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6526,
											"end": 6569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6576,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6582,
											"end": 6948,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6582,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6745,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6809,
											"end": 6811,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6804,
											"end": 6807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6745,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6745,
											"end": 6812,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6745,
											"end": 6812,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6745,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6738,
											"end": 6812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6738,
											"end": 6812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6910,
											"end": 6913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6821,
											"end": 6914,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6821,
											"end": 6914,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6821,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6923,
											"end": 6942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6923,
											"end": 6942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6948,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6954,
											"end": 7373,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6954,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7147,
											"end": 7156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7201,
											"end": 7205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7217,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7171,
											"end": 7218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 7361,
											"end": 7365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7235,
											"end": 7366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7235,
											"end": 7366,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 7235,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6954,
											"end": 7373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6954,
											"end": 7373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6954,
											"end": 7373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6954,
											"end": 7373,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7379,
											"end": 7559,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7379,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7504,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7424,
											"end": 7425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7505,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7514,
											"end": 7529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7552,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7545,
											"end": 7546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7538,
											"end": 7553,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7646,
											"end": 7647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7628,
											"end": 7648,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7628,
											"end": 7648,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7628,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7623,
											"end": 7648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7657,
											"end": 7682,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7657,
											"end": 7682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7848,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7778,
											"end": 7852,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7853,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7767,
											"end": 7768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7770,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7854,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 7906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 7903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7907,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7565,
											"end": 7913,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7919,
											"end": 8099,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7919,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7967,
											"end": 8044,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 8045,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8068,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8061,
											"end": 8062,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8054,
											"end": 8069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8092,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8085,
											"end": 8086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8078,
											"end": 8093,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8162,
											"end": 8182,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8162,
											"end": 8182,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 8162,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8157,
											"end": 8182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8157,
											"end": 8182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 8196,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 8225,
											"end": 8260,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8240,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8260,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 8225,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8282,
											"end": 8283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8290,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8355,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8355,
											"end": 8375,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8355,
											"end": 8375,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8355,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8350,
											"end": 8375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8350,
											"end": 8375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8407,
											"end": 8408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8389,
											"end": 8409,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8389,
											"end": 8409,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8389,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8409,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8541,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8471,
											"end": 8545,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8546,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8462,
											"end": 8569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8569,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8462,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8591,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8579,
											"end": 8595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8601,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8607,
											"end": 8778,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 8607,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8747,
											"end": 8770,
											"name": "PUSH",
											"source": 7,
											"value": "436C61696D61626C65206F6E63652061207765656B0000000000000000000000"
										},
										{
											"begin": 8743,
											"end": 8744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8778,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8784,
											"end": 9150,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 8784,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8947,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9006,
											"end": 9009,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8947,
											"end": 9014,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8947,
											"end": 9014,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8947,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 9014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 9014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 9112,
											"end": 9115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9023,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9023,
											"end": 9116,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9023,
											"end": 9116,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 9023,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9132,
											"end": 9144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 9150,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 9150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 9150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 9150,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9156,
											"end": 9575,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 9156,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9362,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9345,
											"end": 9363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9337,
											"end": 9363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9337,
											"end": 9363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9409,
											"end": 9418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9419,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9393,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9373,
											"end": 9420,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9437,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 9563,
											"end": 9567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9437,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 9437,
											"end": 9568,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9437,
											"end": 9568,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 9437,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9575,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9581,
											"end": 9763,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9581,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9755,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9717,
											"end": 9718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9698,
											"end": 9756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9581,
											"end": 9763,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9991,
											"end": 9994,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9925,
											"end": 9999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9925,
											"end": 9999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 10097,
											"end": 10100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10117,
											"end": 10129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10307,
											"end": 10311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10394,
											"end": 10403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10388,
											"end": 10392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10384,
											"end": 10404,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10358,
											"end": 10405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10566,
											"end": 10747,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10566,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10706,
											"end": 10739,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10702,
											"end": 10703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10694,
											"end": 10700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10690,
											"end": 10704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10747,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 10980,
											"end": 10982,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10975,
											"end": 10978,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 11081,
											"end": 11084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11110,
											"end": 11112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11105,
											"end": 11108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11291,
											"end": 11295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11318,
											"end": 11327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11378,
											"end": 11387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11364,
											"end": 11365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11353,
											"end": 11362,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11349,
											"end": 11366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11342,
											"end": 11389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 11532,
											"end": 11536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11398,
											"end": 11537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11398,
											"end": 11537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11550,
											"end": 11716,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11550,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11690,
											"end": 11708,
											"name": "PUSH",
											"source": 7,
											"value": "557365722069732061205374616B657200000000000000000000000000000000"
										},
										{
											"begin": 11686,
											"end": 11687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11674,
											"end": 11688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11667,
											"end": 11709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11550,
											"end": 11716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11550,
											"end": 11716,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 12088,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 11722,
											"end": 12088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11864,
											"end": 11867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11885,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 11949,
											"end": 11951,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 11944,
											"end": 11947,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 11885,
											"end": 11952,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11885,
											"end": 11952,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 11885,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 11952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 11952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11961,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 12050,
											"end": 12053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11961,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11961,
											"end": 12054,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11961,
											"end": 12054,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 11961,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12074,
											"end": 12077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12070,
											"end": 12082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 12088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 12088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 12088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 12088,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12094,
											"end": 12513,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 12094,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12275,
											"end": 12301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12275,
											"end": 12301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12356,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12341,
											"end": 12345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12357,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12333,
											"end": 12334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12322,
											"end": 12331,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12311,
											"end": 12358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12375,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 12501,
											"end": 12505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12375,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 12375,
											"end": 12506,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12375,
											"end": 12506,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 12375,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12367,
											"end": 12506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12367,
											"end": 12506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12094,
											"end": 12513,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12094,
											"end": 12513,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12094,
											"end": 12513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12094,
											"end": 12513,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12519,
											"end": 12686,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 12519,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12659,
											"end": 12678,
											"name": "PUSH",
											"source": 7,
											"value": "5061636B616765206E6F7420466F756E64000000000000000000000000000000"
										},
										{
											"begin": 12655,
											"end": 12656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12647,
											"end": 12653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12643,
											"end": 12657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12636,
											"end": 12679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12519,
											"end": 12686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12519,
											"end": 12686,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12692,
											"end": 13058,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 12692,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12834,
											"end": 12837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 12919,
											"end": 12921,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 12914,
											"end": 12917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12855,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12855,
											"end": 12922,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12855,
											"end": 12922,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 12855,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12848,
											"end": 12922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12848,
											"end": 12922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12931,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13020,
											"end": 13023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12931,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 12931,
											"end": 13024,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12931,
											"end": 13024,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 12931,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13049,
											"end": 13051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13044,
											"end": 13047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13040,
											"end": 13052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 13058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 13058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 13058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 13058,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13064,
											"end": 13483,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 13064,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13230,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13270,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13245,
											"end": 13271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13245,
											"end": 13271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13317,
											"end": 13326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13307,
											"end": 13327,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13303,
											"end": 13304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13301,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13288,
											"end": 13305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13281,
											"end": 13328,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 13471,
											"end": 13475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 13345,
											"end": 13476,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13345,
											"end": 13476,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 13345,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13483,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13638,
											"end": 13642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13678,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13665,
											"end": 13674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13661,
											"end": 13679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13653,
											"end": 13679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13746,
											"end": 13755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13742,
											"end": 13759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13733,
											"end": 13739,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 13689,
											"end": 13760,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13689,
											"end": 13760,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 13689,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13770,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 13838,
											"end": 13840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13827,
											"end": 13836,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13814,
											"end": 13820,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13770,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 13770,
											"end": 13842,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13770,
											"end": 13842,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 13770,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 13920,
											"end": 13922,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13905,
											"end": 13923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13896,
											"end": 13902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 13852,
											"end": 13924,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13852,
											"end": 13924,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 13852,
											"end": 13924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13931,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13937,
											"end": 14102,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13937,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "PUSH",
											"source": 7,
											"value": "50656E616C7479206D6178203330250000000000000000000000000000000000"
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14061,
											"end": 14075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14054,
											"end": 14095,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 14102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 14102,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14108,
											"end": 14474,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 14108,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14250,
											"end": 14253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14271,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14335,
											"end": 14337,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 14330,
											"end": 14333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 14271,
											"end": 14338,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14271,
											"end": 14338,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14271,
											"end": 14338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14264,
											"end": 14338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14264,
											"end": 14338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14436,
											"end": 14439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14347,
											"end": 14440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 14347,
											"end": 14440,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14347,
											"end": 14440,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14347,
											"end": 14440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14465,
											"end": 14467,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14460,
											"end": 14463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14456,
											"end": 14468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14449,
											"end": 14468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14449,
											"end": 14468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14108,
											"end": 14474,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14480,
											"end": 14899,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 14480,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14646,
											"end": 14650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14684,
											"end": 14686,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14673,
											"end": 14682,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14669,
											"end": 14687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 14687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 14687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14733,
											"end": 14742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14727,
											"end": 14731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14723,
											"end": 14743,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14719,
											"end": 14720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14708,
											"end": 14717,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14704,
											"end": 14721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14697,
											"end": 14744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14761,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 14887,
											"end": 14891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14761,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 14761,
											"end": 14892,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14761,
											"end": 14892,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 14761,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14753,
											"end": 14892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14753,
											"end": 14892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14480,
											"end": 14899,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14480,
											"end": 14899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14480,
											"end": 14899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14480,
											"end": 14899,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14945,
											"end": 14949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14965,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 14983,
											"end": 14984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14965,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 14965,
											"end": 14985,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14965,
											"end": 14985,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 14965,
											"end": 14985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 14985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14960,
											"end": 14985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 15017,
											"end": 15018,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14999,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 14999,
											"end": 15019,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14999,
											"end": 15019,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 14999,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14994,
											"end": 15019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14994,
											"end": 15019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15038,
											"end": 15039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15035,
											"end": 15036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15040,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 15029,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15088,
											"end": 15089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15085,
											"end": 15086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15081,
											"end": 15090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15073,
											"end": 15090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15073,
											"end": 15090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14905,
											"end": 15096,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15102,
											"end": 15267,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 15102,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15242,
											"end": 15259,
											"name": "PUSH",
											"source": 7,
											"value": "41697264726F70206D6178203230250000000000000000000000000000000000"
										},
										{
											"begin": 15238,
											"end": 15239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15230,
											"end": 15236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15226,
											"end": 15240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15219,
											"end": 15260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15102,
											"end": 15267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15102,
											"end": 15267,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15415,
											"end": 15418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 15500,
											"end": 15502,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 15495,
											"end": 15498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 15436,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15429,
											"end": 15503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15429,
											"end": 15503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 15601,
											"end": 15604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 15512,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15625,
											"end": 15628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15621,
											"end": 15633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15614,
											"end": 15633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15614,
											"end": 15633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15639,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15811,
											"end": 15815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15849,
											"end": 15851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15838,
											"end": 15847,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15826,
											"end": 15852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15826,
											"end": 15852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15898,
											"end": 15907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15888,
											"end": 15908,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15884,
											"end": 15885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15873,
											"end": 15882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 15886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15862,
											"end": 15909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 16052,
											"end": 16056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15926,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15918,
											"end": 16057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15918,
											"end": 16057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15645,
											"end": 16064,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16070,
											"end": 16295,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 16070,
											"end": 16295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16210,
											"end": 16244,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16206,
											"end": 16207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16198,
											"end": 16204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16187,
											"end": 16245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16287,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16274,
											"end": 16276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16266,
											"end": 16272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16262,
											"end": 16277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16255,
											"end": 16288,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16070,
											"end": 16295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16070,
											"end": 16295,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16301,
											"end": 16667,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 16301,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16443,
											"end": 16446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16464,
											"end": 16531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 16528,
											"end": 16530,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 16523,
											"end": 16526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16464,
											"end": 16531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 16464,
											"end": 16531,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16464,
											"end": 16531,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 16464,
											"end": 16531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16457,
											"end": 16531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16457,
											"end": 16531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 16629,
											"end": 16632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 16540,
											"end": 16633,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16540,
											"end": 16633,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 16540,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16658,
											"end": 16660,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16653,
											"end": 16656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16649,
											"end": 16661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16642,
											"end": 16661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16642,
											"end": 16661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16301,
											"end": 16667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16301,
											"end": 16667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16301,
											"end": 16667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16301,
											"end": 16667,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 16673,
											"end": 17092,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 16673,
											"end": 17092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16839,
											"end": 16843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16877,
											"end": 16879,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16866,
											"end": 16875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16862,
											"end": 16880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16854,
											"end": 16880,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16854,
											"end": 16880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16926,
											"end": 16935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16920,
											"end": 16924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16912,
											"end": 16913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 16910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 16914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16954,
											"end": 17085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 17080,
											"end": 17084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16954,
											"end": 17085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 16954,
											"end": 17085,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 16954,
											"end": 17085,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 16954,
											"end": 17085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16946,
											"end": 17085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16946,
											"end": 17085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16673,
											"end": 17092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16673,
											"end": 17092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16673,
											"end": 17092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16673,
											"end": 17092,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17098,
											"end": 17267,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 17098,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17259,
											"name": "PUSH",
											"source": 7,
											"value": "41697264726F70206E6F74207374617274656400000000000000000000000000"
										},
										{
											"begin": 17234,
											"end": 17235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17226,
											"end": 17232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17222,
											"end": 17236,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17215,
											"end": 17260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17098,
											"end": 17267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17098,
											"end": 17267,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17273,
											"end": 17639,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 17273,
											"end": 17639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17415,
											"end": 17418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17436,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 17500,
											"end": 17502,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 17495,
											"end": 17498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17436,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 17436,
											"end": 17503,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17436,
											"end": 17503,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 17436,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17429,
											"end": 17503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17429,
											"end": 17503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17512,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 17601,
											"end": 17604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17512,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 17512,
											"end": 17605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17512,
											"end": 17605,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 17512,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17630,
											"end": 17632,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17625,
											"end": 17628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17614,
											"end": 17633,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17614,
											"end": 17633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17273,
											"end": 17639,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17273,
											"end": 17639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17273,
											"end": 17639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17273,
											"end": 17639,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17645,
											"end": 18064,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 17645,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17811,
											"end": 17815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17849,
											"end": 17851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17838,
											"end": 17847,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17834,
											"end": 17852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17898,
											"end": 17907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17892,
											"end": 17896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17888,
											"end": 17908,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17884,
											"end": 17885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17869,
											"end": 17886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17862,
											"end": 17909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17926,
											"end": 18057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 18052,
											"end": 18056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17926,
											"end": 18057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 17926,
											"end": 18057,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17926,
											"end": 18057,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 17926,
											"end": 18057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17918,
											"end": 18057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17918,
											"end": 18057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17645,
											"end": 18064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17645,
											"end": 18064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17645,
											"end": 18064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17645,
											"end": 18064,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18191,
											"end": 18195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18229,
											"end": 18231,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18218,
											"end": 18227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18214,
											"end": 18232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18206,
											"end": 18232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18206,
											"end": 18232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18242,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 18310,
											"end": 18311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18299,
											"end": 18308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18295,
											"end": 18312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18286,
											"end": 18292,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18242,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 18242,
											"end": 18313,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18242,
											"end": 18313,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 18242,
											"end": 18313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 18391,
											"end": 18393,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18380,
											"end": 18389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18376,
											"end": 18394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18367,
											"end": 18373,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 18323,
											"end": 18395,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18323,
											"end": 18395,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 18323,
											"end": 18395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18070,
											"end": 18402,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18557,
											"end": 18561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18595,
											"end": 18597,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18584,
											"end": 18593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18580,
											"end": 18598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18572,
											"end": 18598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18572,
											"end": 18598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18608,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 18676,
											"end": 18677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18665,
											"end": 18674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18661,
											"end": 18678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18652,
											"end": 18658,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18608,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 18608,
											"end": 18679,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18608,
											"end": 18679,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 18608,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 18757,
											"end": 18759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18746,
											"end": 18755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18742,
											"end": 18760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18733,
											"end": 18739,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 18689,
											"end": 18761,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18689,
											"end": 18761,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 18689,
											"end": 18761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 18843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 18839,
											"end": 18841,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18828,
											"end": 18837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18824,
											"end": 18842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18815,
											"end": 18821,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18771,
											"end": 18843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 18771,
											"end": 18843,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18771,
											"end": 18843,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 18771,
											"end": 18843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18408,
											"end": 18850,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 18856,
											"end": 18972,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 18856,
											"end": 18972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18926,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 18941,
											"end": 18946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18926,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 18926,
											"end": 18947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 18926,
											"end": 18947,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 18926,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18919,
											"end": 18924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18916,
											"end": 18948,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 18906,
											"end": 18966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 18906,
											"end": 18966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18962,
											"end": 18963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18959,
											"end": 18960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18952,
											"end": 18964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18906,
											"end": 18966,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 18906,
											"end": 18966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18856,
											"end": 18972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18856,
											"end": 18972,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19032,
											"end": 19037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19063,
											"end": 19069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19057,
											"end": 19070,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 19048,
											"end": 19070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19048,
											"end": 19070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19079,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 19103,
											"end": 19108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19079,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 19079,
											"end": 19109,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19079,
											"end": 19109,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 19079,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18978,
											"end": 19115,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19188,
											"end": 19194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19237,
											"end": 19239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19225,
											"end": 19234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19216,
											"end": 19223,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19212,
											"end": 19235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19208,
											"end": 19240,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 19205,
											"end": 19324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19205,
											"end": 19324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 19205,
											"end": 19324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19243,
											"end": 19322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 19243,
											"end": 19322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 19243,
											"end": 19322,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19243,
											"end": 19322,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 19243,
											"end": 19322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19205,
											"end": 19324,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 19205,
											"end": 19324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19363,
											"end": 19364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19388,
											"end": 19449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 19441,
											"end": 19448,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19432,
											"end": 19438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19421,
											"end": 19430,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19417,
											"end": 19439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19388,
											"end": 19449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 19388,
											"end": 19449,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19388,
											"end": 19449,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 19388,
											"end": 19449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19378,
											"end": 19449,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19378,
											"end": 19449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19334,
											"end": 19459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19121,
											"end": 19466,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 19472,
											"end": 19701,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 19472,
											"end": 19701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19612,
											"end": 19646,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 19608,
											"end": 19609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19600,
											"end": 19606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19596,
											"end": 19610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19589,
											"end": 19647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19681,
											"end": 19693,
											"name": "PUSH",
											"source": 7,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 19676,
											"end": 19678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19668,
											"end": 19674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19664,
											"end": 19679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19657,
											"end": 19694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19472,
											"end": 19701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19472,
											"end": 19701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19849,
											"end": 19852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 19934,
											"end": 19936,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 19929,
											"end": 19932,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 19870,
											"end": 19937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19863,
											"end": 19937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19863,
											"end": 19937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 20035,
											"end": 20038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 19946,
											"end": 20039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20064,
											"end": 20066,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20059,
											"end": 20062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20055,
											"end": 20067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20048,
											"end": 20067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20048,
											"end": 20067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19707,
											"end": 20073,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20245,
											"end": 20249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20283,
											"end": 20285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20272,
											"end": 20281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20268,
											"end": 20286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20332,
											"end": 20341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20326,
											"end": 20330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20322,
											"end": 20342,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20307,
											"end": 20316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20303,
											"end": 20320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20296,
											"end": 20343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 20486,
											"end": 20490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 20360,
											"end": 20491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20352,
											"end": 20491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20352,
											"end": 20491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20079,
											"end": 20498,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20504,
											"end": 20729,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 20504,
											"end": 20729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20644,
											"end": 20678,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 20640,
											"end": 20641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20628,
											"end": 20642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20621,
											"end": 20679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20713,
											"end": 20721,
											"name": "PUSH",
											"source": 7,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20708,
											"end": 20710,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20700,
											"end": 20706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20696,
											"end": 20711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20689,
											"end": 20722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20504,
											"end": 20729,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20735,
											"end": 21101,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 20735,
											"end": 21101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20877,
											"end": 20880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20898,
											"end": 20965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 20962,
											"end": 20964,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 20957,
											"end": 20960,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20898,
											"end": 20965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 20898,
											"end": 20965,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20898,
											"end": 20965,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 20898,
											"end": 20965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20965,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20974,
											"end": 21067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 21063,
											"end": 21066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20974,
											"end": 21067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 20974,
											"end": 21067,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 20974,
											"end": 21067,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 20974,
											"end": 21067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21092,
											"end": 21094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21087,
											"end": 21090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21083,
											"end": 21095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20735,
											"end": 21101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20735,
											"end": 21101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20735,
											"end": 21101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20735,
											"end": 21101,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 21107,
											"end": 21526,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 21107,
											"end": 21526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21273,
											"end": 21277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21311,
											"end": 21313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21296,
											"end": 21314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21288,
											"end": 21314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21288,
											"end": 21314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21360,
											"end": 21369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21354,
											"end": 21358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21350,
											"end": 21370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21346,
											"end": 21347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21335,
											"end": 21344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21331,
											"end": 21348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21324,
											"end": 21371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21388,
											"end": 21519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 21514,
											"end": 21518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21388,
											"end": 21519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 21388,
											"end": 21519,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21388,
											"end": 21519,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 21388,
											"end": 21519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21380,
											"end": 21519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21380,
											"end": 21519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21107,
											"end": 21526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21107,
											"end": 21526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21107,
											"end": 21526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21107,
											"end": 21526,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 21532,
											"end": 21711,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 21532,
											"end": 21711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21672,
											"end": 21703,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 21668,
											"end": 21669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21660,
											"end": 21666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21656,
											"end": 21670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21649,
											"end": 21704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21532,
											"end": 21711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21532,
											"end": 21711,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 21717,
											"end": 22083,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 21717,
											"end": 22083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21859,
											"end": 21862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21880,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 21944,
											"end": 21946,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 21939,
											"end": 21942,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21880,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 21880,
											"end": 21947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21880,
											"end": 21947,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 21880,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21873,
											"end": 21947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21873,
											"end": 21947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21956,
											"end": 22049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 22045,
											"end": 22048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21956,
											"end": 22049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 21956,
											"end": 22049,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 21956,
											"end": 22049,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 21956,
											"end": 22049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22074,
											"end": 22076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22069,
											"end": 22072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22065,
											"end": 22077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22058,
											"end": 22077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22058,
											"end": 22077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21717,
											"end": 22083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21717,
											"end": 22083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21717,
											"end": 22083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21717,
											"end": 22083,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 22089,
											"end": 22508,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 22089,
											"end": 22508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22255,
											"end": 22259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22293,
											"end": 22295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22282,
											"end": 22291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22278,
											"end": 22296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22270,
											"end": 22296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22270,
											"end": 22296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22342,
											"end": 22351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22336,
											"end": 22340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22332,
											"end": 22352,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 22328,
											"end": 22329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22317,
											"end": 22326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22313,
											"end": 22330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22306,
											"end": 22353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22370,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 22496,
											"end": 22500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22370,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 22370,
											"end": 22501,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 22370,
											"end": 22501,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 22370,
											"end": 22501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22362,
											"end": 22501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22362,
											"end": 22501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22089,
											"end": 22508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22089,
											"end": 22508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22089,
											"end": 22508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22089,
											"end": 22508,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 22514,
											"end": 22612,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 22514,
											"end": 22612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22565,
											"end": 22571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22599,
											"end": 22604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22593,
											"end": 22605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22583,
											"end": 22605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22583,
											"end": 22605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22514,
											"end": 22612,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22514,
											"end": 22612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22514,
											"end": 22612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22514,
											"end": 22612,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22719,
											"end": 22730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22756,
											"end": 22759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22741,
											"end": 22759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22741,
											"end": 22759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22618,
											"end": 22765,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 22771,
											"end": 23078,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 22771,
											"end": 23078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22839,
											"end": 22840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22863,
											"end": 22869,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22860,
											"end": 22861,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22857,
											"end": 22870,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 22948,
											"end": 22949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 22943,
											"end": 22946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22939,
											"end": 22950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22933,
											"end": 22951,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 22929,
											"end": 22930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22924,
											"end": 22927,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22920,
											"end": 22931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22913,
											"end": 22952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22885,
											"end": 22887,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22882,
											"end": 22883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22878,
											"end": 22888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22873,
											"end": 22888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22873,
											"end": 22888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 22849,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22980,
											"end": 22986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22977,
											"end": 22978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22974,
											"end": 22987,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 22971,
											"end": 23072,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 22971,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 22971,
											"end": 23072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23060,
											"end": 23061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23051,
											"end": 23057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23046,
											"end": 23049,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23042,
											"end": 23058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23035,
											"end": 23062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22971,
											"end": 23072,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 22971,
											"end": 23072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22820,
											"end": 23078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22771,
											"end": 23078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22771,
											"end": 23078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22771,
											"end": 23078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22771,
											"end": 23078,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23188,
											"end": 23191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23216,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 23248,
											"end": 23253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23216,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 23216,
											"end": 23254,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23216,
											"end": 23254,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 23216,
											"end": 23254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23270,
											"end": 23358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 23351,
											"end": 23357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23346,
											"end": 23349,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 23270,
											"end": 23358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 23270,
											"end": 23358,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23270,
											"end": 23358,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 23270,
											"end": 23358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23263,
											"end": 23358,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 23263,
											"end": 23358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23367,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 23412,
											"end": 23418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23407,
											"end": 23410,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 23400,
											"end": 23404,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23393,
											"end": 23398,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 23389,
											"end": 23405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23367,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 23367,
											"end": 23419,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23367,
											"end": 23419,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 23367,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23444,
											"end": 23450,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 23439,
											"end": 23442,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23435,
											"end": 23451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23428,
											"end": 23451,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23428,
											"end": 23451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23192,
											"end": 23457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23084,
											"end": 23457,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23593,
											"end": 23596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23615,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 23704,
											"end": 23707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23695,
											"end": 23701,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23615,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 23615,
											"end": 23708,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23615,
											"end": 23708,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 23615,
											"end": 23708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23608,
											"end": 23708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23608,
											"end": 23708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23725,
											"end": 23728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23718,
											"end": 23728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23718,
											"end": 23728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23463,
											"end": 23734,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23740,
											"end": 23839,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 23740,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23792,
											"end": 23798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23826,
											"end": 23831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23820,
											"end": 23832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23810,
											"end": 23832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23810,
											"end": 23832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23740,
											"end": 23839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23740,
											"end": 23839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23740,
											"end": 23839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23740,
											"end": 23839,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23845,
											"end": 23947,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 23845,
											"end": 23947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23886,
											"end": 23892,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23937,
											"end": 23939,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 23933,
											"end": 23940,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 23928,
											"end": 23930,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 23921,
											"end": 23926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23917,
											"end": 23931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23913,
											"end": 23941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 23903,
											"end": 23941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23903,
											"end": 23941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23845,
											"end": 23947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23845,
											"end": 23947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23845,
											"end": 23947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23845,
											"end": 23947,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24041,
											"end": 24044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24069,
											"end": 24108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 24102,
											"end": 24107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24069,
											"end": 24108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 24069,
											"end": 24108,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24069,
											"end": 24108,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 24069,
											"end": 24108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24124,
											"end": 24195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 24188,
											"end": 24194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24183,
											"end": 24186,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24124,
											"end": 24195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 24124,
											"end": 24195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24124,
											"end": 24195,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 24124,
											"end": 24195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24117,
											"end": 24195,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24117,
											"end": 24195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24204,
											"end": 24256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 24249,
											"end": 24255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24244,
											"end": 24247,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24237,
											"end": 24241,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24230,
											"end": 24235,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24226,
											"end": 24242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24204,
											"end": 24256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 24204,
											"end": 24256,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24204,
											"end": 24256,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 24204,
											"end": 24256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 24303,
											"end": 24309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 24281,
											"end": 24310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24276,
											"end": 24279,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24272,
											"end": 24311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24265,
											"end": 24311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24265,
											"end": 24311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24045,
											"end": 24317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23953,
											"end": 24317,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24436,
											"end": 24440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24474,
											"end": 24476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24463,
											"end": 24472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24459,
											"end": 24477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24451,
											"end": 24477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24451,
											"end": 24477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24523,
											"end": 24532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24517,
											"end": 24521,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24513,
											"end": 24533,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24509,
											"end": 24510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24498,
											"end": 24507,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24494,
											"end": 24511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24487,
											"end": 24534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24551,
											"end": 24629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 24624,
											"end": 24628,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24615,
											"end": 24621,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24551,
											"end": 24629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 24551,
											"end": 24629,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 24551,
											"end": 24629,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 24551,
											"end": 24629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24543,
											"end": 24629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24543,
											"end": 24629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24323,
											"end": 24636,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"airdropStatus()": "2cf1a5fb",
							"blockTimestamp()": "adb61832",
							"calculateWeek(uint256)": "b5d9df83",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"claimAirdrop()": "5b88349d",
							"hasStake()": "10486b6a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdrop()": "d2a569c3",
							"token_address()": "8c8e8fee",
							"transferOwnership(address)": "f2fde38b",
							"withdrawStake()": "bed9d861"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"calculateWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDrop\",\"type\":\"uint256\"}],\"internalType\":\"struct Staking.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Staking.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"stake(uint256,uint256)\":{\"notice\":\"_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID\"},\"withdrawStake()\":{\"notice\":\"withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xa2e67b2cfbc8dd6b797acca925e6d1f654c92384786ca04a0017ce6ff3a83e13\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9316dc579ad697c9050301149065b6766b8c0abf5195d7af5bc577bb3ddf7dd5\",\"dweb:/ipfs/QmRAuqxhM1DTYPoyd71W5H8WL9yz2NhMeXFNb6npZwApxm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 115,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 777,
								"contract": "contracts/Staking.sol:Staking",
								"label": "stakingPackage",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 779,
								"contract": "contracts/Staking.sol:Staking",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 781,
								"contract": "contracts/Staking.sol:Staking",
								"label": "airdropRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 783,
								"contract": "contracts/Staking.sol:Staking",
								"label": "airdropSince",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 785,
								"contract": "contracts/Staking.sol:Staking",
								"label": "airdropStatus",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 787,
								"contract": "contracts/Staking.sol:Staking",
								"label": "token_address",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 852,
								"contract": "contracts/Staking.sol:Staking",
								"label": "stakeholders",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Stake)838_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stake)838_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)838_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)838_storage": {
								"encoding": "inplace",
								"label": "struct Staking.Stake",
								"members": [
									{
										"astId": 825,
										"contract": "contracts/Staking.sol:Staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 827,
										"contract": "contracts/Staking.sol:Staking",
										"label": "since",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 829,
										"contract": "contracts/Staking.sol:Staking",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 831,
										"contract": "contracts/Staking.sol:Staking",
										"label": "releaseTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 833,
										"contract": "contracts/Staking.sol:Staking",
										"label": "claimable",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 835,
										"contract": "contracts/Staking.sol:Staking",
										"label": "claimableAirdrop",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 837,
										"contract": "contracts/Staking.sol:Staking",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"stake(uint256,uint256)": {
								"notice": "_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID"
							},
							"withdrawStake()": {
								"notice": "withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							763
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 764,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								763
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 110,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 113,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 144,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 128,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 143,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							222
						]
					},
					"id": 223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 222,
							"linearizedBaseContracts": [
								222
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 222,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 222,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 222,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 222,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 222,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 222,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 212,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 221,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 223,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"IERC20": [
							222
						],
						"SafeERC20": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 223,
							"src": "125:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 742,
							"src": "149:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 227,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 446,
							"linearizedBaseContracts": [
								446
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 230,
									"libraryName": {
										"id": 228,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 741,
										"src": "675:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:3",
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "803:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "833:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 244,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "863:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 171,
																		"src": "863:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 247,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "888:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "892:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 242,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 240,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "813:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "813:86:3"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "732:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 231,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "732:6:3"
													},
													"referencedDeclaration": 222,
													"src": "732:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "754:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "774:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:3"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:3"
									},
									"scope": 446,
									"src": "701:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1040:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1070:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 269,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "1100:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 203,
																		"src": "1100:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 272,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "1129:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "1135:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "1139:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 267,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 265,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1050:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "947:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 254,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "947:6:3"
													},
													"referencedDeclaration": 222,
													"src": "947:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "969:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "991:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:3"
									},
									"scope": 446,
									"src": "912:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1519:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1768:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 299,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$446",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 297,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 300,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 301,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 285,
																					"src": "1815:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 283,
																					"src": "1784:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 181,
																				"src": "1784:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1939:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 314,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1969:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 191,
																		"src": "1969:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 317,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "1993:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "2002:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 310,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1919:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:3"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1443:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "1443:6:3"
													},
													"referencedDeclaration": 222,
													"src": "1443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:3"
									},
									"scope": 446,
									"src": "1413:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2138:194:3",
										"statements": [
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "2148:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 339,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$446",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 337,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 341,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2202:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 335,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2171:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$222",
																	"typeString": "contract IERC20"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "2171:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 343,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "2213:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 350,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 326,
																			"src": "2278:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$222",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 191,
																		"src": "2278:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 353,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "2302:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 354,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2311:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 348,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 346,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2228:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:3"
											}
										]
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2062:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2062:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2084:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2109:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:3"
									},
									"scope": 446,
									"src": "2022:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "2454:370:3",
										"statements": [
											{
												"id": 405,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:3",
												"statements": [
													{
														"assignments": [
															370
														],
														"declarations": [
															{
																"constant": false,
																"id": 370,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2488:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 375,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$446",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 373,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2511:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "2511:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "2572:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 382,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "2588:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 380,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 386,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:3"
													},
													{
														"assignments": [
															388
														],
														"declarations": [
															{
																"constant": false,
																"id": 388,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "2653:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 392,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2691:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 394,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "2730:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 397,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "2760:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$222",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 191,
																				"src": "2760:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 400,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "2784:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 401,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "2793:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 395,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 393,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "2710:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 404,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:3"
													}
												]
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2378:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 360,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "2378:6:3"
													},
													"referencedDeclaration": 222,
													"src": "2378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2425:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:3"
									},
									"scope": 446,
									"src": "2338:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3277:636:3",
										"statements": [
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3626:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [
														{
															"id": 423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3660:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$222",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 535,
														"src": "3652:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 427,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3735:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "3731:176:3",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "3758:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 434,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "3830:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 435,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 437,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 432,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 431,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3236:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$222",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 222,
														"src": "3236:6:3"
													},
													"referencedDeclaration": 222,
													"src": "3236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$222",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3250:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:3"
									},
									"scope": 446,
									"src": "3207:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 447,
							"src": "645:3270:3",
							"usedErrors": []
						}
					],
					"src": "100:3816:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							741
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 741,
							"linearizedBaseContracts": [
								741
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 457,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 456,
												"id": 462,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 741,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 475,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 473,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													484,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 485,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 741,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 508,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															535
														],
														"referencedDeclaration": 535,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 513,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 741,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 531,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 527,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 526,
												"id": 533,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 741,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 550,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 547,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															555,
															605
														],
														"referencedDeclaration": 605,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 553,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 741,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 572,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$741",
																				"typeString": "library Address"
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 570,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 582,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 581,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													588,
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 589,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 591,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 593,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 603,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 741,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 615,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 741,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 741,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 667,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															674,
															709
														],
														"referencedDeclaration": 709,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 666,
												"id": 672,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 741,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 687,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													694,
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 693,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 695,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"id": 699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 697,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 704,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 705,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 702,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 707,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 741,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 721,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 712,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 725,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 732,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 731,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 730,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 714,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 729,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 722,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 720,
															"id": 723,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 741,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 742,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 744,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 749,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 748,
												"id": 751,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 763,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 758,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 757,
												"id": 760,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 763,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 764,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							741
						],
						"Context": [
							763
						],
						"IERC20": [
							222
						],
						"Ownable": [
							104
						],
						"ReentrancyGuard": [
							144
						],
						"SafeERC20": [
							446
						],
						"Staking": [
							1417
						]
					},
					"id": 1418,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 447,
							"src": "64:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 145,
							"src": "130:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 105,
							"src": "193:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 769,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "267:15:6"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "267:15:6"
								},
								{
									"baseName": {
										"id": 771,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "284:7:6"
									},
									"id": 772,
									"nodeType": "InheritanceSpecifier",
									"src": "284:7:6"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417,
								104,
								763,
								144
							],
							"name": "Staking",
							"nameLocation": "256:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "298:159:6",
										"text": " @notice Constructor since this contract is not meant to be used without inheritance\n push once to stakeholders for it to work properly"
									},
									"id": 777,
									"mutability": "mutable",
									"name": "stakingPackage",
									"nameLocation": "500:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "463:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 776,
										"keyType": {
											"id": 774,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "471:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "463:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 775,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "482:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 779,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "536:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "521:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "521:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 781,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "575:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "560:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 780,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "560:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 783,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "607:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "592:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "592:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2cf1a5fb",
									"id": 785,
									"mutability": "mutable",
									"name": "airdropStatus",
									"nameLocation": "637:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "625:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 784,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "625:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8c8e8fee",
									"id": 787,
									"mutability": "mutable",
									"name": "token_address",
									"nameLocation": "672:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "657:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 786,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "657:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "719:274:6",
										"statements": [
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 792,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "791:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "812:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "791:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "791:23:6"
											},
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 796,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "824:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "838:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "824:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "824:16:6"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "token_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "851:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 801,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "867:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "851:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "851:21:6"
											},
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 804,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "883:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 806,
														"indexExpression": {
															"hexValue": "3930",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "898:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "883:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "909:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "883:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "883:27:6"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 810,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "920:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 812,
														"indexExpression": {
															"hexValue": "313830",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "935:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															"value": "180"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "920:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "947:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "920:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "920:28:6"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 816,
															"name": "stakingPackage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "958:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 818,
														"indexExpression": {
															"hexValue": "333635",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "973:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "958:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "985:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "958:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "958:28:6"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "712:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "704:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:15:6"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:0:6"
									},
									"scope": 1417,
									"src": "692:301:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.Stake",
									"id": 838,
									"members": [
										{
											"constant": false,
											"id": 825,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1257:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1249:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 824,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1249:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 827,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "1281:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1273:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 826,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1273:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 829,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1304:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1296:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 828,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1296:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 831,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "1331:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1323:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 830,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1323:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 833,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "1459:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1451:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 832,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1451:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 835,
											"mutability": "mutable",
											"name": "claimableAirdrop",
											"nameLocation": "1486:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1478:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 834,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1478:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "1520:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 838,
											"src": "1512:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1512:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1233:5:6",
									"nodeType": "StructDefinition",
									"scope": 1417,
									"src": "1226:316:6",
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.StakingSummary",
									"id": 846,
									"members": [
										{
											"constant": false,
											"id": 840,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1719:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "1711:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 839,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1711:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 842,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "1749:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "1741:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 841,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1741:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1772:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "1766:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
												"typeString": "struct Staking.Stake"
											},
											"typeName": {
												"id": 844,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 843,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 838,
													"src": "1766:5:6"
												},
												"referencedDeclaration": 838,
												"src": "1766:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
													"typeString": "struct Staking.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1686:14:6",
									"nodeType": "StructDefinition",
									"scope": 1417,
									"src": "1679:105:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "1790:111:6",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 852,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1941:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1417,
									"src": "1906:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
										"typeString": "mapping(address => struct Staking.Stake)"
									},
									"typeName": {
										"id": 851,
										"keyType": {
											"id": 848,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1914:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1906:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
											"typeString": "mapping(address => struct Staking.Stake)"
										},
										"valueType": {
											"id": 850,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 849,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 838,
												"src": "1925:5:6"
											},
											"referencedDeclaration": 838,
											"src": "1925:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
												"typeString": "struct Staking.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1960:124:6",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 863,
									"name": "Staked",
									"nameLocation": "2095:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2127:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2111:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2149:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2141:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2173:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2165:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2200:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2192:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:116:6"
									},
									"src": "2089:129:6"
								},
								{
									"anonymous": false,
									"id": 867,
									"name": "PenaltyChanged",
									"nameLocation": "2230:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2253:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2245:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:16:6"
									},
									"src": "2224:37:6"
								},
								{
									"anonymous": false,
									"id": 871,
									"name": "AirdropChanged",
									"nameLocation": "2272:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2295:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2287:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:16:6"
									},
									"src": "2266:37:6"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "2460:70:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 875,
																"name": "airdropStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "2478:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2478:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f70206e6f742073746172746564",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2501:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9",
																"typeString": "literal_string \"Airdrop not started\""
															},
															"value": "Airdrop not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7926a5ee8e254ef8e13d9506c19da7fc2dd6aec32216a6c9c2e2b31207c67ce9",
																"typeString": "literal_string \"Airdrop not started\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2470:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "2470:53:6"
											}
										]
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAirdropStatus",
									"nameLocation": "2424:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2443:2:6"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2460:0:6"
									},
									"scope": 1417,
									"src": "2415:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "2565:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 884,
														"name": "_checkAirdropStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2575:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2575:21:6"
											},
											{
												"id": 887,
												"nodeType": "PlaceholderStatement",
												"src": "2606:1:6"
											}
										]
									},
									"id": 889,
									"name": "airdropStatusTrue",
									"nameLocation": "2545:17:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2562:2:6"
									},
									"src": "2536:78:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "3005:1093:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 900,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "3206:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
																			"typeString": "mapping(address => struct Staking.Stake storage ref)"
																		}
																	},
																	"id": 903,
																	"indexExpression": {
																		"expression": {
																			"id": 901,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3219:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3219:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3206:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$838_storage",
																		"typeString": "struct Staking.Stake storage ref"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 825,
																"src": "3206:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3206:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722069732061205374616b6572",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3244:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8",
																"typeString": "literal_string \"User is a Staker\""
															},
															"value": "User is a Staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_002b09ba03e032e4244dee656b2dd548bb90af618b73d6ab2c368e48900fe3e8",
																"typeString": "literal_string \"User is a Staker\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3198:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "3198:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 911,
																	"name": "stakingPackage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "3281:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 913,
																"indexExpression": {
																	"id": 912,
																	"name": "stakePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "3296:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3281:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3312:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3281:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061636b616765206e6f7420466f756e64",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734",
																"typeString": "literal_string \"Package not Found\""
															},
															"value": "Package not Found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b966c5cdef0470d151bc3ff46f0ab5ffe6eef49a18cd09fd9e73be23a59ff734",
																"typeString": "literal_string \"Package not Found\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3273:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "3273:62:6"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3441:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "3433:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"expression": {
														"id": 921,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3453:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3453:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3433:35:6"
											},
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 924,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "3597:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 927,
														"indexExpression": {
															"expression": {
																"id": 925,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3610:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3610:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3597:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$838_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 929,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "3643:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 930,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "3663:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 931,
																	"name": "stakingPackage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "3686:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"id": 932,
																	"name": "stakePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "3701:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3686:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 934,
																			"name": "stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "3728:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 935,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "3742:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3728:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 937,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3727:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3766:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3781:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3796:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 928,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "3624:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$838_storage_ptr_$",
																"typeString": "type(struct Staking.Stake storage pointer)"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3624:183:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
															"typeString": "struct Staking.Stake memory"
														}
													},
													"src": "3597:210:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$838_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "3597:210:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 948,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "3865:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 947,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "3858:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3858:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 950,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3893:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3893:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 954,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3925:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1417",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1417",
																		"typeString": "contract Staking"
																	}
																],
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3917:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 952,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3917:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3917:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "3944:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$222",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 944,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3818:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3818:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:142:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "3818:142:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4034:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4034:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "4046:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 963,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "4054:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 964,
																		"name": "stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "4066:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 965,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "4080:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4066:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 967,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4065:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4027:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4027:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "EmitStatement",
												"src": "4022:69:6"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "2726:200:6",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"functionSelector": "7b0472f0",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 897,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 896,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "2992:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2992:12:6"
										}
									],
									"name": "stake",
									"nameLocation": "2940:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2954:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2946:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2946:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "2970:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2962:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:37:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3005:0:6"
									},
									"scope": 1417,
									"src": "2931:1167:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "4165:205:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "4257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4267:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "4257:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50656e616c7479206d617820333025",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4271:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a",
																"typeString": "literal_string \"Penalty max 30%\""
															},
															"value": "Penalty max 30%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5b4e61a28898b30f1a1f9e8beb207f204de893cd09640e59267f93465f1229a",
																"typeString": "literal_string \"Penalty max 30%\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "4249:40:6"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "4299:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "4320:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4299:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "4299:27:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 990,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "4356:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "4341:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4341:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "EmitStatement",
												"src": "4336:27:6"
											}
										]
									},
									"functionSelector": "8c63f97f",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 975,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4155:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4155:9:6"
										}
									],
									"name": "changePenaltyFee",
									"nameLocation": "4113:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4138:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4130:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:16:6"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4165:0:6"
									},
									"scope": 1417,
									"src": "4104:266:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "4486:121:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1001,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4557:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4557:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1003,
																				"name": "since",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "4575:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4557:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1005,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4556:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653234",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4584:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000000000"
																	},
																	"value": "1e24"
																},
																"src": "4556:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1008,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4555:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4592:8:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "4555:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1011,
												"nodeType": "Return",
												"src": "4548:52:6"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingDuration",
									"nameLocation": "4385:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "since",
												"nameLocation": "4419:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "4411:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4411:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4410:15:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "4473:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:9:6"
									},
									"scope": 1417,
									"src": "4376:231:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "4729:251:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1021,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "4847:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "4847:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1023,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "4883:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 829,
																		"src": "4883:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4847:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1027,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "4948:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																					"typeString": "struct Staking.Stake memory"
																				}
																			},
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 827,
																			"src": "4948:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1026,
																		"name": "_calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "4922:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4922:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4847:118:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1031,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4846:120:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4969:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "4846:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1034,
												"nodeType": "Return",
												"src": "4827:146:6"
											}
										]
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakeReward",
									"nameLocation": "4622:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "4657:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4644:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
													"typeString": "struct Staking.Stake"
												},
												"typeName": {
													"id": 1015,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1014,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 838,
														"src": "4644:5:6"
													},
													"referencedDeclaration": 838,
													"src": "4644:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
														"typeString": "struct Staking.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:25:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4716:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4715:9:6"
									},
									"scope": 1417,
									"src": "4613:367:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "5125:156:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "5156:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1050,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1048,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1038,
																						"src": "5167:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1049,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 779,
																						"src": "5176:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5167:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1051,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5166:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5198:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "5166:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1054,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5165:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1056,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "5217:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1059,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1057,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1040,
																						"src": "5228:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1058,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 779,
																						"src": "5237:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5228:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1060,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5227:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5259:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "5227:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1063,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5226:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5217:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1065,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5142:132:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1066,
												"nodeType": "Return",
												"src": "5135:139:6"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingWithPenalty",
									"nameLocation": "4995:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5032:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5024:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5048:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5040:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:32:6"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5103:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5112:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:18:6"
									},
									"scope": 1417,
									"src": "4986:295:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "5675:921:6",
										"statements": [
											{
												"assignments": [
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "5806:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "5793:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 1075,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1074,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 838,
																"src": "5793:5:6"
															},
															"referencedDeclaration": 838,
															"src": "5793:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"baseExpression": {
														"id": 1077,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "5819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 1080,
													"indexExpression": {
														"expression": {
															"id": 1078,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5832:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5832:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5819:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$838_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5793:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1083,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "5861:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																		"typeString": "struct Staking.Stake memory"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 825,
																"src": "5861:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5882:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5861:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206e6f7420666f756e64",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5885:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																"typeString": "literal_string \"Staking not found\""
															},
															"value": "Staking not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																"typeString": "literal_string \"Staking not found\""
															}
														],
														"id": 1082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5853:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5853:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "5853:52:6"
											},
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5924:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "5916:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5916:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"arguments": [
														{
															"id": 1093,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "5955:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 1092,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "5933:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$838_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Staking.Stake memory) view returns (uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5933:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5916:50:6"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5976:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1096,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "5983:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 1099,
														"indexExpression": {
															"expression": {
																"id": 1097,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5996:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5996:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5983:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$838_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "5976:31:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1102,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "6022:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 831,
														"src": "6022:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1104,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6047:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6047:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6022:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "6416:174:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1136,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "6477:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1135,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "6470:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6470:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1138,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6509:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6509:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1140,
																						"name": "user_stake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1076,
																						"src": "6538:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																							"typeString": "struct Staking.Stake memory"
																						}
																					},
																					"id": 1141,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 825,
																					"src": "6538:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1142,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1091,
																					"src": "6558:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6538:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1144,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6537:28:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1132,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "6430:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "6430:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6430:149:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "6430:149:6"
														}
													]
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "6018:572:6",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "6064:346:6",
													"statements": [
														{
															"assignments": [
																1108,
																1110
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1108,
																	"mutability": "mutable",
																	"name": "amount_reduced",
																	"nameLocation": "6104:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1131,
																	"src": "6096:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1107,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6096:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1110,
																	"mutability": "mutable",
																	"name": "reward_reduced",
																	"nameLocation": "6144:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1131,
																	"src": "6136:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1109,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6136:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1116,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1112,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1076,
																			"src": "6204:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "6204:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "6223:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1111,
																	"name": "_calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "6175:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6175:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6078:152:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1121,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "6292:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1120,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "6285:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6285:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1123,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6324:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6324:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1125,
																					"name": "amount_reduced",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "6353:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1126,
																					"name": "reward_reduced",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "6370:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6353:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1128,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6352:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1117,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "6245:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "6245:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6245:154:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "6245:154:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "5287:335:6",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the account\n Will also _calculateStakeReward and reset timer"
									},
									"functionSelector": "bed9d861",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 143,
												"src": "5662:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5662:12:6"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "5637:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5650:2:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5675:0:6"
									},
									"scope": 1417,
									"src": "5628:968:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "6668:865:6",
										"statements": [
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "6691:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6678:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 1157,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1156,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 838,
																"src": "6678:5:6"
															},
															"referencedDeclaration": 838,
															"src": "6678:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"baseExpression": {
														"id": 1159,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "6704:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 1162,
													"indexExpression": {
														"expression": {
															"id": 1160,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6717:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6717:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6704:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$838_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6678:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1165,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "6746:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																		"typeString": "struct Staking.Stake memory"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 825,
																"src": "6746:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6767:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6746:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206e6f7420666f756e64",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6770:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																"typeString": "literal_string \"Staking not found\""
															},
															"value": "Staking not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																"typeString": "literal_string \"Staking not found\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6738:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6738:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "6738:52:6"
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "6822:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6800:29:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
															"typeString": "struct Staking.StakingSummary"
														},
														"typeName": {
															"id": 1173,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1172,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 846,
																"src": "6800:14:6"
															},
															"referencedDeclaration": 846,
															"src": "6800:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$846_storage_ptr",
																"typeString": "struct Staking.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6847:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6850:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1178,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "6853:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 1175,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "6832:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$846_storage_ptr_$",
															"typeString": "type(struct Staking.StakingSummary storage pointer)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6832:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
														"typeString": "struct Staking.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6800:64:6"
											},
											{
												"assignments": [
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6883:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "6875:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6875:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"arguments": [
														{
															"id": 1184,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "6914:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 1183,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "6892:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$838_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Staking.Stake memory) view returns (uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6875:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1187,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "6940:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
																	"typeString": "struct Staking.StakingSummary memory"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 845,
															"src": "6940:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 831,
														"src": "6940:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1190,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6968:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6968:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6940:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "6936:214:6",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "6985:165:6",
													"statements": [
														{
															"expression": {
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1193,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "6999:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
																			"typeString": "struct Staking.StakingSummary memory"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "penalty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 842,
																	"src": "6999:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1199,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1196,
																									"name": "user_stake",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1158,
																									"src": "7035:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																										"typeString": "struct Staking.Stake memory"
																									}
																								},
																								"id": 1197,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 825,
																								"src": "7035:17:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1198,
																								"name": "stakingPenaltyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 779,
																								"src": "7055:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7035:38:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1200,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7034:40:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1201,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7077:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "7034:47:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1203,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7033:49:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1206,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1204,
																								"name": "reward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1182,
																								"src": "7103:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1205,
																								"name": "stakingPenaltyRate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 779,
																								"src": "7112:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7103:27:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1207,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7102:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1208,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7134:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "7102:36:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1210,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7101:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7033:106:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6999:140:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1213,
															"nodeType": "ExpressionStatement",
															"src": "6999:140:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1217,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "7178:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																		"typeString": "struct Staking.Stake memory"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "latestClaimDrop",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 837,
																"src": "7178:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1216,
															"name": "calculateWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "7164:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7164:41:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7208:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7164:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "7350:59:6",
													"statements": [
														{
															"expression": {
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1238,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "7364:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
																				"typeString": "struct Staking.StakingSummary memory"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 845,
																		"src": "7364:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 835,
																	"src": "7364:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7364:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "7364:34:6"
														}
													]
												},
												"id": 1247,
												"nodeType": "IfStatement",
												"src": "7160:249:6",
												"trueBody": {
													"id": 1237,
													"nodeType": "Block",
													"src": "7211:133:6",
													"statements": [
														{
															"assignments": [
																1223
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1223,
																	"mutability": "mutable",
																	"name": "airdrop",
																	"nameLocation": "7233:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1237,
																	"src": "7225:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1222,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7225:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1228,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1225,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "7261:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "7261:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1224,
																	"name": "_calculateAirdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "7243:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7243:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7225:54:6"
														},
														{
															"expression": {
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1229,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "7293:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
																				"typeString": "struct Staking.StakingSummary memory"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 845,
																		"src": "7293:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 835,
																	"src": "7293:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1234,
																	"name": "airdrop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "7326:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7293:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1236,
															"nodeType": "ExpressionStatement",
															"src": "7293:40:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1248,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "7419:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
																	"typeString": "struct Staking.StakingSummary memory"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 845,
															"src": "7419:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 833,
														"src": "7419:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "7445:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7419:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "7419:32:6"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1256,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "7461:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
																"typeString": "struct Staking.StakingSummary memory"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 840,
														"src": "7461:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1259,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "7484:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 825,
														"src": "7484:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7461:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "7461:40:6"
											},
											{
												"expression": {
													"id": 1263,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1174,
													"src": "7519:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
														"typeString": "struct Staking.StakingSummary memory"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1264,
												"nodeType": "Return",
												"src": "7512:14:6"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "6611:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6619:2:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "6645:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$846_memory_ptr",
													"typeString": "struct Staking.StakingSummary"
												},
												"typeName": {
													"id": 1153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1152,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 846,
														"src": "6645:14:6"
													},
													"referencedDeclaration": 846,
													"src": "6645:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$846_storage_ptr",
														"typeString": "struct Staking.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6644:23:6"
									},
									"scope": 1417,
									"src": "6602:931:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "7688:77:6",
										"statements": [
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1271,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "7698:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1272,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7713:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7713:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7698:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "7698:30:6"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "airdropStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "7738:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7754:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7738:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "7738:20:6"
											}
										]
									},
									"functionSelector": "d2a569c3",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7678:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7678:9:6"
										}
									],
									"name": "startAirdrop",
									"nameLocation": "7654:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7666:2:6"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7688:0:6"
									},
									"scope": 1417,
									"src": "7645:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "7839:125:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1289,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "7857:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323030",
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7867:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "7857:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41697264726f70206d617820323025",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7872:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287",
																"typeString": "literal_string \"Airdrop max 20%\""
															},
															"value": "Airdrop max 20%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca38a7cdd0d88458c918147b84adf10c279c728340c1d33bf50944e932496287",
																"typeString": "literal_string \"Airdrop max 20%\""
															}
														],
														"id": 1288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7849:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7849:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "7849:41:6"
											},
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1295,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "7900:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1296,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "7914:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7900:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "7900:20:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "7950:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "7935:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7935:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "EmitStatement",
												"src": "7930:27:6"
											}
										]
									},
									"functionSelector": "d5dbdf1b",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7829:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7829:9:6"
										}
									],
									"name": "changeAirdropPercentage",
									"nameLocation": "7780:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7812:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "7804:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7804:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7803:16:6"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7839:0:6"
									},
									"scope": 1417,
									"src": "7771:193:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "8026:39:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1309,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "8043:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "8043:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1308,
												"id": 1311,
												"nodeType": "Return",
												"src": "8036:22:6"
											}
										]
									},
									"functionSelector": "adb61832",
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blockTimestamp",
									"nameLocation": "7979:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7993:2:6"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "8017:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8017:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8016:9:6"
									},
									"scope": 1417,
									"src": "7970:95:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "8143:62:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1320,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8161:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8161:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1322,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "8179:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8161:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1324,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8160:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "37",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8192:6:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "8160:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1327,
												"nodeType": "Return",
												"src": "8153:45:6"
											}
										]
									},
									"functionSelector": "b5d9df83",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWeek",
									"nameLocation": "8080:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "8102:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8094:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8093:19:6"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "8134:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8133:9:6"
									},
									"scope": 1417,
									"src": "8071:134:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "8319:71:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1336,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "8338:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1337,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 781,
																				"src": "8352:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8338:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8337:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8367:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "8337:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1342,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8336:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8375:8:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "8336:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1345,
												"nodeType": "Return",
												"src": "8329:54:6"
											}
										]
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "8220:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "8246:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "8238:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8237:21:6"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "8306:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:9:6"
									},
									"scope": 1417,
									"src": "8211:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "8447:644:6",
										"statements": [
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8523:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "8509:24:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 1353,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1352,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 838,
																"src": "8509:5:6"
															},
															"referencedDeclaration": 838,
															"src": "8509:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1359,
												"initialValue": {
													"baseExpression": {
														"id": 1355,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "8536:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$838_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 1358,
													"indexExpression": {
														"expression": {
															"id": 1356,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8549:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8549:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8536:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$838_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8509:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1361,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "8579:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																		"typeString": "struct Staking.Stake storage pointer"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 825,
																"src": "8579:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8600:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8579:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206e6f7420666f756e64",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8603:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																"typeString": "literal_string \"Staking not found\""
															},
															"value": "Staking not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_326c1d96046868f1e6fa00b91bca4d19f429836dc06be2d1957c95089929330e",
																"typeString": "literal_string \"Staking not found\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8571:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "8571:52:6"
											},
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "latestClaim",
														"nameLocation": "8641:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1415,
														"src": "8633:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8633:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1371,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "8669:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																	"typeString": "struct Staking.Stake storage pointer"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "latestClaimDrop",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "8669:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1370,
														"name": "calculateWeek",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "8655:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8655:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8633:63:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1375,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "8711:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																"typeString": "struct Staking.Stake storage pointer"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 825,
														"src": "8711:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8731:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8711:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "8707:378:6",
												"trueBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "8734:351:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1380,
																			"name": "latestClaim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "8756:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8771:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8756:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436c61696d61626c65206f6e63652061207765656b",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8774:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																			"typeString": "literal_string \"Claimable once a week\""
																		},
																		"value": "Claimable once a week"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a545cf8bed6150fe43a7fcf5d302e1427d9de4b32611b13b65b5d5b4ba0c35e3",
																			"typeString": "literal_string \"Claimable once a week\""
																		}
																	],
																	"id": 1379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8748:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8748:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1385,
															"nodeType": "ExpressionStatement",
															"src": "8748:50:6"
														},
														{
															"expression": {
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1386,
																		"name": "user_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "8813:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																			"typeString": "struct Staking.Stake storage pointer"
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 835,
																	"src": "8813:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8843:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8813:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1391,
															"nodeType": "ExpressionStatement",
															"src": "8813:31:6"
														},
														{
															"expression": {
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1392,
																		"name": "user_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "8858:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																			"typeString": "struct Staking.Stake storage pointer"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "latestClaimDrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "8858:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1395,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8887:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8887:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8858:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "8858:44:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1403,
																				"name": "token_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "8964:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1402,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "8957:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$222_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8957:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"expression": {
																			"id": 1405,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8996:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8996:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1408,
																					"name": "user_stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1354,
																					"src": "9042:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$838_storage_ptr",
																						"typeString": "struct Staking.Stake storage pointer"
																					}
																				},
																				"id": 1409,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 825,
																				"src": "9042:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1407,
																			"name": "_calculateAirdrop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "9024:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9024:36:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$222",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1399,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "8917:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$446_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "8917:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$222_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8917:157:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "8917:157:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5b88349d",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1349,
												"name": "airdropStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 889,
												"src": "8429:17:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8429:17:6"
										}
									],
									"name": "claimAirdrop",
									"nameLocation": "8405:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8417:2:6"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8447:0:6"
									},
									"scope": 1417,
									"src": "8396:695:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1418,
							"src": "247:8846:6",
							"usedErrors": []
						}
					],
					"src": "39:9055:6"
				},
				"id": 6
			}
		}
	}
}