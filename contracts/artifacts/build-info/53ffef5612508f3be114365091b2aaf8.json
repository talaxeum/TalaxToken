{
	"id": "53ffef5612508f3be114365091b2aaf8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakable.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n/**\n * @notice Error handling message for Modifier\n */\nerror Function__notAuthorized();\nerror Function__notAVoter();\nerror Function__votingNotAvailable();\n\n/**\n * @notice Error handling message for Staking functions\n */\nerror Staking__cannotStakeNothing();\nerror Staking__userIsStaker();\nerror Staking__penaltyExceed3Percent();\nerror Staking__airdropExceed20Percent();\nerror Staking__noStakingFound();\n\n/**\n * @notice Error handling message for Airdrop functions\n */\nerror Airdrop__claimableOnceAWeek();\n\n/**\n * @notice Error handling message for Voting functions\n */\nerror Voting__votingIsRunning();\nerror Voting__alreadyVoted();\nerror Voting__notYetVoted();\nerror Voting__notEnoughVoters();\n\ncontract Stakable {\n    using SafeMath for uint256;\n    /**\n     * @notice Constructor since this contract is not meant to be used without inheritance\n     * push once to stakeholders for it to work properly\n     */\n\n    struct Voter {\n        bool votingRight;\n        mapping(uint256 => bool) voted;\n    }\n\n    uint256 public stakingPenaltyRate;\n    uint256 public airdropRate;\n    uint256 public airdropSince;\n\n    bool internal _votingStatus;\n    uint256 internal _votingId;\n    uint256 public totalVoters;\n    mapping(address => Voter) public voters;\n    mapping(uint256 => uint256) public votedUsers;\n\n    address public _talax;\n    address public _owner;\n\n    constructor() {\n        //Staking penalty and Airdrop in 0.1 times percentage\n        stakingPenaltyRate = 15;\n        airdropRate = 80;\n        _talax = msg.sender;\n        _owner = msg.sender;\n    }\n\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes,\n     * A Stake will contain the users address, the amount staked and a timestamp,\n     * Since which is when the stake was made\n     */\n    struct Stake {\n        uint256 amount;\n        uint256 since;\n        uint256 rewardAPY;\n        uint256 releaseTime;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n        uint256 claimableAirdrop;\n        uint256 latestClaimDrop;\n    }\n\n    /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */\n    struct StakingSummary {\n        uint256 total_amount;\n        uint256 penalty;\n        Stake stake;\n    }\n\n    /**\n     * @notice\n     * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => Stake) internal stakeholders;\n\n    /**\n     * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        uint256 timestamp,\n        uint256 releaseTime\n    );\n\n    event PenaltyChanged(uint256 amount);\n    event AirdropChanged(uint256 amount);\n\n    /* ------------------------------------------ Modifier ------------------------------------------ */\n    function isTalax() internal view {\n        // require(msg.sender == _talax, \"Not authorized\");\n        if (msg.sender != _talax) {\n            revert Function__notAuthorized();\n        }\n    }\n\n    modifier onlyTalax() {\n        isTalax();\n        _;\n    }\n\n    function isOwner() internal view {\n        // require(msg.sender == _owner, \"Not authorized\");\n        if (msg.sender != _owner) {\n            revert Function__notAuthorized();\n        }\n    }\n\n    modifier onlyOwner() {\n        isOwner();\n        _;\n    }\n\n    function _isVoter() internal view {\n        // require(voters[msg.sender].votingRight == true, \"You are not a voter\");\n        if (voters[msg.sender].votingRight == false) {\n            revert Function__notAVoter();\n        }\n    }\n\n    modifier isVoter() {\n        _isVoter();\n        _;\n    }\n\n    function _checkVotingStatus() internal view {\n        // require(_votingStatus, \"Voting is not available\");\n        if (!_votingStatus) {\n            revert Function__votingNotAvailable();\n        }\n    }\n\n    modifier votingStatusTrue() {\n        _checkVotingStatus();\n        _;\n    }\n\n    /* ---------------------------------------------- - --------------------------------------------- */\n\n    function changeTalaxAddress(address talax) external onlyOwner {\n        _talax = talax;\n    }\n\n    /**\n     * @notice\n     * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n     * StakeID\n     */\n    function stake(\n        address user,\n        uint256 amount,\n        uint256 stakePeriod,\n        uint256 rewardRate\n    ) external onlyTalax {\n        // Simple check so that user does not stake 0\n        // require(amount > 0, \"Cannot stake nothing\");\n        if (amount <= 0) {\n            revert Staking__cannotStakeNothing();\n        }\n        // require(stakeholders[user].amount == 0, \"User is a staker\");\n        if (stakeholders[user].amount != 0) {\n            revert Staking__userIsStaker();\n        }\n\n        totalVoters += 1;\n        voters[user].votingRight = true;\n\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n\n        stakeholders[user] = Stake(\n            amount,\n            timestamp,\n            rewardRate,\n            (stakePeriod + timestamp),\n            0,\n            0,\n            0\n        );\n        // Emit an event that the stake has occured\n        emit Staked(user, amount, timestamp, (stakePeriod + timestamp));\n    }\n\n    function changePenaltyFee(uint256 amount) external onlyOwner {\n        // require(amount <= 30, \"Penalty fee cannot exceed 3 percent.\");\n        if (amount > 30) {\n            revert Staking__penaltyExceed3Percent();\n        }\n        stakingPenaltyRate = amount;\n        emit PenaltyChanged(amount);\n    }\n\n    function _calculateStakingDuration(uint256 since)\n        internal\n        view\n        returns (uint256)\n    {\n        // times by 1e24 so theres no missing value\n        return\n            SafeMath.div(\n                (block.timestamp - since) * 1e24,\n                365 days,\n                \"Error cannot divide timestamp\"\n            );\n    }\n\n    function _calculateStakeReward(Stake memory user_stake)\n        internal\n        view\n        returns (uint256)\n    {\n        if (user_stake.amount == 0) {\n            return 0;\n        }\n        // divided by 1e26 because 1e2 for APY and 1e24 from calculate staking duration\n        return\n            (user_stake.amount *\n                user_stake.rewardAPY *\n                _calculateStakingDuration(user_stake.since)) / 1e26;\n    }\n\n    function _calculateStakingWithPenalty(uint256 amount, uint256 reward)\n        internal\n        view\n        returns (uint256, uint256)\n    {\n        if (amount == 0) {\n            return (0, 0);\n        }\n        return (\n            SafeMath.sub(\n                amount,\n                SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000)\n            ),\n            SafeMath.sub(\n                reward,\n                SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000)\n            )\n        );\n    }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the account\n     * Will also _calculateStakeReward and reset timer\n     */\n    function withdrawStake(address user)\n        external\n        onlyTalax\n        returns (uint256, uint256)\n    {\n        //can be simplified\n        // Grab user_index which is the index to use to grab the Stake[]\n        Stake memory user_stake = stakeholders[user];\n\n        delete stakeholders[user];\n\n        if (user_stake.releaseTime > block.timestamp) {\n            totalVoters -= 1;\n            delete voters[user].voted[_votingId];\n            return\n                _calculateStakingWithPenalty(\n                    user_stake.amount,\n                    _calculateStakeReward(user_stake)\n                );\n        }\n\n        totalVoters -= 1;\n        delete voters[user].voted[_votingId];\n        return (user_stake.amount, _calculateStakeReward(user_stake));\n    }\n\n    function hasStake() external view returns (StakingSummary memory) {\n        Stake memory user_stake = stakeholders[msg.sender];\n        // require(user_stake.amount > 0, \"No Stake Found\");\n        if (user_stake.amount <= 0) {\n            revert Staking__noStakingFound();\n        }\n        StakingSummary memory summary = StakingSummary(0, 0, user_stake);\n\n        uint256 reward = _calculateStakeReward(user_stake);\n\n        if (summary.stake.releaseTime > block.timestamp) {\n            summary.penalty =\n                SafeMath.div(\n                    SafeMath.mul(user_stake.amount, stakingPenaltyRate),\n                    1000\n                ) +\n                SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000);\n        }\n\n        if (airdropWeek() == 0) {\n            if (airdropWeek() < 52) {\n                uint256 airdrop = _calculateAirdrop(user_stake.amount);\n                summary.stake.claimableAirdrop = airdrop;\n            } else {\n                summary.stake.claimableAirdrop = 0;\n            }\n        } else {\n            summary.stake.claimableAirdrop = 0;\n        }\n\n        summary.stake.claimable = reward;\n        summary.total_amount = user_stake.amount;\n\n        return summary;\n    }\n\n    /* -------------------------------------- Airdrop functions ------------------------------------- */\n\n    function startAirdropSince() external onlyTalax {\n        airdropSince = block.timestamp;\n    }\n\n    function changeAirdropPercentage(uint256 amount) external onlyOwner {\n        if (amount > 200) {\n            revert Staking__airdropExceed20Percent();\n        }\n        airdropRate = amount;\n        emit AirdropChanged(amount);\n    }\n\n    function _calculateAirdrop(uint256 stakeAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return ((stakeAmount * airdropRate) / 1000) / 52 weeks;\n    }\n\n    function claimAirdrop(address user)\n        external\n        view\n        onlyTalax\n        returns (uint256)\n    {\n        //can be simplified if using address\n        Stake memory staker = stakeholders[user];\n\n        if (staker.amount > 0) {\n            if (airdropWeek() < 52) {\n                if (airdropWeek() != 0) {\n                    revert Airdrop__claimableOnceAWeek();\n                }\n\n                staker.claimableAirdrop = 0;\n                staker.latestClaimDrop = block.timestamp;\n\n                return _calculateAirdrop(staker.amount);\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    function airdropWeek() public view returns (uint256) {\n        if (airdropSince != 0) {\n            return (block.timestamp - airdropSince) / 7 days;\n        } else {\n            return 0;\n        }\n    }\n\n    /* -------------------------------- Voting Functions for DAO Pool ------------------------------- */\n\n    function getVoters(address user) external view returns (bool, bool) {\n        return (voters[user].votingRight, voters[user].voted[_votingId]);\n    }\n\n    //can be simplified since not connected directly\n    function startVoting() external onlyTalax {\n        // require(_votingStatus == false, \"Voting is already running\");\n        if (_votingStatus == true) {\n            revert Voting__votingIsRunning();\n        }\n\n        _votingStatus = true;\n        _votingId += 1;\n    }\n\n    function vote() public votingStatusTrue isVoter {\n        // require(\n        //     voters[msg.sender].voted[_votingId] == false,\n        //     \"You have voted before\"\n        // );\n        if (voters[msg.sender].voted[_votingId] == true) {\n            revert Voting__alreadyVoted();\n        }\n\n        voters[msg.sender].voted[_votingId] = true;\n        votedUsers[_votingId] += 1;\n    }\n\n    function retractVote() public votingStatusTrue isVoter {\n        // require(\n        //     voters[msg.sender].voted[_votingId] == true,\n        //     \"You have not voted yet\"\n        // );\n        if (voters[msg.sender].voted[_votingId] == false) {\n            revert Voting__notYetVoted();\n        }\n\n        voters[msg.sender].voted[_votingId] == false;\n        votedUsers[_votingId] -= 1;\n    }\n\n    function getVotingResult()\n        external\n        view\n        onlyTalax\n        votingStatusTrue\n        returns (bool)\n    {\n        // require(totalVoters > 1, \"Not enough voters\");\n        if (totalVoters <= 1) {\n            revert Voting__notEnoughVoters();\n        }\n        uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10);\n\n        if (votedUsers[_votingId] > half_voters) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function stopVoting() external onlyTalax votingStatusTrue {\n        _votingStatus = false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DIV DUP4 SMOD PUSH25 0xF7E44E9648E7A1E743F996041EE587DAA54484479E0358DB13 0x2F PUSH17 0x64736F6C634300080B0033000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DIV DUP4 SMOD PUSH25 0xF7E44E9648E7A1E743F996041EE587DAA54484479E0358DB13 0x2F PUSH17 0x64736F6C634300080B0033000000000000 ",
							"sourceMap": "467:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd04830778f7e44e9648e7a1e743f996041ee587daa54484479e0358db132f7064736f6c634300080b0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stakable.sol": {
				"Stakable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Airdrop__claimableOnceAWeek",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__notAVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__notAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Function__votingNotAvailable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__airdropExceed20Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__cannotStakeNothing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__noStakingFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__penaltyExceed3Percent",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__userIsStaker",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__alreadyVoted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__notEnoughVoters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__notYetVoted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Voting__votingIsRunning",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AirdropChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PenaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_talax",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropSince",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropWeek",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changeAirdropPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "changePenaltyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "talax",
									"type": "address"
								}
							],
							"name": "changeTalaxAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "claimAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getVoters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVotingResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penalty",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "rewardAPY",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "releaseTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimableAirdrop",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "latestClaimDrop",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakable.Stake",
											"name": "stake",
											"type": "tuple"
										}
									],
									"internalType": "struct Stakable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retractVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakePeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirdropSince",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopVoting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVoters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "votedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "votingRight",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakable.sol\":817:13305  contract Stakable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakable.sol\":1484:1684  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakable.sol\":1591:1593  15 */\n  0x0f\n    /* \"contracts/Stakable.sol\":1570:1588  stakingPenaltyRate */\n  0x00\n    /* \"contracts/Stakable.sol\":1570:1593  stakingPenaltyRate = 15 */\n  sstore\n    /* \"contracts/Stakable.sol\":1617:1619  80 */\n  0x50\n    /* \"contracts/Stakable.sol\":1603:1614  airdropRate */\n  0x01\n    /* \"contracts/Stakable.sol\":1603:1619  airdropRate = 80 */\n  sstore\n    /* \"contracts/Stakable.sol\":1629:1635  _talax */\n  0x08\n    /* \"contracts/Stakable.sol\":1629:1648  _talax = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/Stakable.sol\":1638:1648  msg.sender */\n  caller\n    /* \"contracts/Stakable.sol\":1629:1648  _talax = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Stakable.sol\":1658:1664  _owner */\n  0x09\n    /* \"contracts/Stakable.sol\":1658:1677  _owner = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Stakable.sol\":817:13305  contract Stakable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakable.sol\":817:13305  contract Stakable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8891cf0d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc23a5cea\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc23a5cea\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcb79c2e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcbb3e152\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd5dbdf1b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf93d4f8a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfab2f86b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x8891cf0d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8c63f97f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa143a5f2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb87da76d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x5f348b4e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x5f348b4e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f5300ff\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x632a9a52\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x65f8c6c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x671d2b75\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x71e3db87\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x070c8b74\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10486b6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1d77b00b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ec6b60a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2d15cc04\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakable.sol\":12308:12707  function retractVote() public votingStatusTrue isVoter {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Stakable.sol\":8558:9790  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n        /* \"#utility.yul\":168:172   */\n      0x00\n        /* \"#utility.yul\":210:213   */\n      0x0120\n        /* \"#utility.yul\":199:208   */\n      dup3\n        /* \"#utility.yul\":195:214   */\n      add\n        /* \"#utility.yul\":187:214   */\n      swap1\n      pop\n        /* \"#utility.yul\":247:253   */\n      dup3\n        /* \"#utility.yul\":241:254   */\n      mload\n        /* \"#utility.yul\":230:239   */\n      dup3\n        /* \"#utility.yul\":223:255   */\n      mstore\n        /* \"#utility.yul\":311:315   */\n      0x20\n        /* \"#utility.yul\":303:309   */\n      dup4\n        /* \"#utility.yul\":299:316   */\n      add\n        /* \"#utility.yul\":293:317   */\n      mload\n        /* \"#utility.yul\":286:290   */\n      0x20\n        /* \"#utility.yul\":275:284   */\n      dup4\n        /* \"#utility.yul\":271:291   */\n      add\n        /* \"#utility.yul\":264:318   */\n      mstore\n        /* \"#utility.yul\":365:369   */\n      0x40\n        /* \"#utility.yul\":357:363   */\n      dup4\n        /* \"#utility.yul\":353:370   */\n      add\n        /* \"#utility.yul\":347:371   */\n      mload\n        /* \"#utility.yul\":415:427   */\n      dup1\n        /* \"#utility.yul\":409:428   */\n      mload\n        /* \"#utility.yul\":402:406   */\n      0x40\n        /* \"#utility.yul\":391:400   */\n      dup5\n        /* \"#utility.yul\":387:407   */\n      add\n        /* \"#utility.yul\":380:429   */\n      mstore\n        /* \"#utility.yul\":489:493   */\n      0x20\n        /* \"#utility.yul\":475:487   */\n      dup2\n        /* \"#utility.yul\":471:494   */\n      add\n        /* \"#utility.yul\":465:495   */\n      mload\n        /* \"#utility.yul\":460:462   */\n      0x60\n        /* \"#utility.yul\":449:458   */\n      dup5\n        /* \"#utility.yul\":445:463   */\n      add\n        /* \"#utility.yul\":438:496   */\n      mstore\n        /* \"#utility.yul\":557:561   */\n      0x40\n        /* \"#utility.yul\":543:555   */\n      dup2\n        /* \"#utility.yul\":539:562   */\n      add\n        /* \"#utility.yul\":533:563   */\n      mload\n        /* \"#utility.yul\":527:530   */\n      0x80\n        /* \"#utility.yul\":516:525   */\n      dup5\n        /* \"#utility.yul\":512:531   */\n      add\n        /* \"#utility.yul\":505:564   */\n      mstore\n        /* \"#utility.yul\":625:627   */\n      0x60\n        /* \"#utility.yul\":611:623   */\n      dup2\n        /* \"#utility.yul\":607:628   */\n      add\n        /* \"#utility.yul\":601:629   */\n      mload\n        /* \"#utility.yul\":595:598   */\n      0xa0\n        /* \"#utility.yul\":584:593   */\n      dup5\n        /* \"#utility.yul\":580:599   */\n      add\n        /* \"#utility.yul\":573:630   */\n      mstore\n        /* \"#utility.yul\":691:694   */\n      0x80\n        /* \"#utility.yul\":677:689   */\n      dup2\n        /* \"#utility.yul\":673:695   */\n      add\n        /* \"#utility.yul\":667:696   */\n      mload\n        /* \"#utility.yul\":661:664   */\n      0xc0\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:665   */\n      add\n        /* \"#utility.yul\":639:697   */\n      mstore\n        /* \"#utility.yul\":758:761   */\n      0xa0\n        /* \"#utility.yul\":744:756   */\n      dup2\n        /* \"#utility.yul\":740:762   */\n      add\n        /* \"#utility.yul\":734:763   */\n      mload\n        /* \"#utility.yul\":728:731   */\n      0xe0\n        /* \"#utility.yul\":717:726   */\n      dup5\n        /* \"#utility.yul\":713:732   */\n      add\n        /* \"#utility.yul\":706:764   */\n      mstore\n        /* \"#utility.yul\":825:828   */\n      0xc0\n        /* \"#utility.yul\":811:823   */\n      dup2\n        /* \"#utility.yul\":807:829   */\n      add\n        /* \"#utility.yul\":801:830   */\n      mload\n        /* \"#utility.yul\":795:798   */\n      0x0100\n        /* \"#utility.yul\":784:793   */\n      dup5\n        /* \"#utility.yul\":780:799   */\n      add\n        /* \"#utility.yul\":773:831   */\n      mstore\n      pop\n        /* \"#utility.yul\":14:837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"contracts/Stakable.sol\":8558:9790  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stakable.sol\":4327:4420  function changeTalaxAddress(address talax) external onlyOwner {... */\n    tag_5:\n      tag_29\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/Stakable.sol\":11636:11906  function startVoting() external onlyTalax {... */\n    tag_6:\n      tag_29\n      tag_40\n      jump\t// in\n        /* \"contracts/Stakable.sol\":11428:11577  function getVoters(address user) external view returns (bool, bool) {... */\n    tag_7:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":11514:11526  voters[user] */\n      and\n        /* \"contracts/Stakable.sol\":11484:11488  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":11514:11526  voters[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":11514:11520  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":11514:11526  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":11514:11538  voters[user].votingRight */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":11559:11568  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":11540:11569  voters[user].voted[_votingId] */\n      dup6\n      mstore\n        /* \"contracts/Stakable.sol\":11514:11538  voters[user].votingRight */\n      0x01\n        /* \"contracts/Stakable.sol\":11540:11558  voters[user].voted */\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":11540:11569  voters[user].voted[_votingId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":11514:11538  voters[user].votingRight */\n      0xff\n      swap2\n      dup3\n      and\n      swap3\n        /* \"contracts/Stakable.sol\":11540:11569  voters[user].voted[_votingId] */\n      swap2\n      and\n      swap1\n        /* \"contracts/Stakable.sol\":11428:11577  function getVoters(address user) external view returns (bool, bool) {... */\n      jump\n    tag_41:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1398:1412   */\n      swap3\n      iszero\n        /* \"#utility.yul\":1391:1413   */\n      iszero\n        /* \"#utility.yul\":1373:1414   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1457:1471   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1450:1472   */\n      iszero\n        /* \"#utility.yul\":1445:1447   */\n      0x20\n        /* \"#utility.yul\":1430:1448   */\n      dup4\n      add\n        /* \"#utility.yul\":1423:1473   */\n      mstore\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"contracts/Stakable.sol\":11428:11577  function getVoters(address user) external view returns (bool, bool) {... */\n      tag_33\n        /* \"#utility.yul\":1211:1479   */\n      jump\n        /* \"contracts/Stakable.sol\":1429:1450  address public _talax */\n    tag_8:\n      sload(0x08)\n      tag_46\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1648:1680   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1630:1681   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1603:1621   */\n      add\n        /* \"contracts/Stakable.sol\":1429:1450  address public _talax */\n      tag_33\n        /* \"#utility.yul\":1484:1687   */\n      jump\n        /* \"contracts/Stakable.sol\":1300:1326  uint256 public totalVoters */\n    tag_9:\n      tag_50\n      sload(0x05)\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/Stakable.sol\":1300:1326  uint256 public totalVoters */\n      tag_33\n        /* \"#utility.yul\":1692:1869   */\n      jump\n        /* \"contracts/Stakable.sol\":11912:12302  function vote() public votingStatusTrue isVoter {... */\n    tag_10:\n      tag_29\n      tag_55\n      jump\t// in\n        /* \"contracts/Stakable.sol\":10428:11106  function claimAirdrop(address user)... */\n    tag_11:\n      tag_50\n      tag_57\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/Stakable.sol\":12713:13201  function getVotingResult()... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n        /* \"#utility.yul\":2039:2053   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2032:2054   */\n      iszero\n        /* \"#utility.yul\":2014:2055   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2002:2004   */\n      0x20\n        /* \"#utility.yul\":1987:2005   */\n      add\n        /* \"contracts/Stakable.sol\":12713:13201  function getVotingResult()... */\n      tag_33\n        /* \"#utility.yul\":1874:2061   */\n      jump\n        /* \"contracts/Stakable.sol\":9902:9997  function startAirdropSince() external onlyTalax {... */\n    tag_13:\n      tag_29\n      tag_65\n      jump\t// in\n        /* \"contracts/Stakable.sol\":1169:1195  uint256 public airdropRate */\n    tag_14:\n      tag_50\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":5798:6104  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_15:\n      tag_29\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/Stakable.sol\":1377:1422  mapping(uint256 => uint256) public votedUsers */\n    tag_16:\n      tag_50\n      tag_74\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_74:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":1332:1371  mapping(address => Voter) public voters */\n    tag_17:\n      tag_60\n      tag_78\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_78:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":1456:1477  address public _owner */\n    tag_18:\n      sload(0x09)\n      tag_46\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":1201:1228  uint256 public airdropSince */\n    tag_19:\n      tag_50\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":7775:8552  function withdrawStake(address user)... */\n    tag_20:\n      tag_87\n      tag_88\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2425:2450   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2481:2483   */\n      0x20\n        /* \"#utility.yul\":2466:2484   */\n      dup4\n      add\n        /* \"#utility.yul\":2459:2493   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2398:2416   */\n      add\n        /* \"contracts/Stakable.sol\":7775:8552  function withdrawStake(address user)... */\n      tag_33\n        /* \"#utility.yul\":2251:2499   */\n      jump\n        /* \"contracts/Stakable.sol\":1130:1163  uint256 public stakingPenaltyRate */\n    tag_21:\n      tag_50\n      sload(0x00)\n      dup2\n      jump\n        /* \"contracts/Stakable.sol\":11112:11316  function airdropWeek() public view returns (uint256) {... */\n    tag_22:\n      tag_50\n      tag_96\n      jump\t// in\n        /* \"contracts/Stakable.sol\":10003:10237  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_23:\n      tag_29\n      tag_99\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/Stakable.sol\":4631:5792  function stake(... */\n    tag_24:\n      tag_29\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"contracts/Stakable.sol\":13207:13303  function stopVoting() external onlyTalax votingStatusTrue {... */\n    tag_25:\n      tag_29\n      tag_106\n      jump\t// in\n        /* \"contracts/Stakable.sol\":12308:12707  function retractVote() public votingStatusTrue isVoter {... */\n    tag_30:\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      tag_108\n        /* \"contracts/Stakable.sol\":4177:4195  _checkVotingStatus */\n      tag_109\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Stakable.sol\":3895:3905  _isVoter() */\n      tag_111\n        /* \"contracts/Stakable.sol\":3895:3903  _isVoter */\n      tag_112\n        /* \"contracts/Stakable.sol\":3895:3905  _isVoter() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Stakable.sol\":12518:12528  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12511:12529  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":12511:12517  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":12511:12529  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":12536:12545  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":12511:12546  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":12511:12535  voters[msg.sender].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":12511:12546  voters[msg.sender].voted[_votingId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":12507:12610  if (voters[msg.sender].voted[_votingId] == false) {... */\n      tag_114\n      jumpi\n        /* \"contracts/Stakable.sol\":12578:12599  Voting__notYetVoted() */\n      mload(0x40)\n      shl(0xe9, 0x45ba11)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":12507:12610  if (voters[msg.sender].voted[_votingId] == false) {... */\n    tag_114:\n        /* \"contracts/Stakable.sol\":12645:12654  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":12620:12638  voters[msg.sender] */\n      0x00\n        /* \"contracts/Stakable.sol\":12620:12655  voters[msg.sender].voted[_votingId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":12674:12684  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":12620:12638  voters[msg.sender] */\n      0x20\n        /* \"contracts/Stakable.sol\":12674:12695  votedUsers[_votingId] */\n      mstore\n        /* \"contracts/Stakable.sol\":12620:12638  voters[msg.sender] */\n      0x40\n        /* \"contracts/Stakable.sol\":12674:12695  votedUsers[_votingId] */\n      dup2\n      keccak256\n        /* \"contracts/Stakable.sol\":12674:12700  votedUsers[_votingId] -= 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":12620:12644  voters[msg.sender].voted */\n      0x01\n      swap3\n        /* \"contracts/Stakable.sol\":12620:12638  voters[msg.sender] */\n      swap1\n        /* \"contracts/Stakable.sol\":12674:12700  votedUsers[_votingId] -= 1 */\n      tag_115\n      swap1\n        /* \"contracts/Stakable.sol\":12620:12644  voters[msg.sender].voted */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":12674:12700  votedUsers[_votingId] -= 1 */\n      tag_116\n      jump\t// in\n    tag_115:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":12308:12707  function retractVote() public votingStatusTrue isVoter {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":8558:9790  function hasStake() external view returns (StakingSummary memory) {... */\n    tag_32:\n        /* \"contracts/Stakable.sol\":8601:8622  StakingSummary memory */\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/Stakable.sol\":8673:8683  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":8634:8657  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable.sol\":8660:8684  stakeholders[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8660:8672  stakeholders */\n      0x0a\n        /* \"contracts/Stakable.sol\":8660:8684  stakeholders[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":8634:8684  Stake memory user_stake = stakeholders[msg.sender] */\n      dup3\n      mload\n      0xe0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":8755:8840  if (user_stake.amount <= 0) {... */\n      tag_120\n      jumpi\n        /* \"contracts/Stakable.sol\":8804:8829  Staking__noStakingFound() */\n      mload(0x40)\n      shl(0xe0, 0xb018f087)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":8755:8840  if (user_stake.amount <= 0) {... */\n    tag_120:\n        /* \"contracts/Stakable.sol\":8881:8913  StakingSummary(0, 0, user_stake) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/Stakable.sol\":8849:8878  StakingSummary memory summary */\n      0x00\n        /* \"contracts/Stakable.sol\":8881:8913  StakingSummary(0, 0, user_stake) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n        /* \"contracts/Stakable.sol\":8941:8974  _calculateStakeReward(user_stake) */\n      tag_121\n        /* \"contracts/Stakable.sol\":8902:8912  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":8941:8962  _calculateStakeReward */\n      tag_122\n        /* \"contracts/Stakable.sol\":8941:8974  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Stakable.sol\":8924:8974  uint256 reward = _calculateStakeReward(user_stake) */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":9017:9032  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":8989:8996  summary */\n      dup3\n        /* \"contracts/Stakable.sol\":8989:9002  summary.stake */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8989:9014  summary.stake.releaseTime */\n      0x60\n      add\n      mload\n        /* \"contracts/Stakable.sol\":8989:9032  summary.stake.releaseTime > block.timestamp */\n      gt\n        /* \"contracts/Stakable.sol\":8985:9301  if (summary.stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/Stakable.sol\":9230:9290  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_124\n        /* \"contracts/Stakable.sol\":9243:9283  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_125\n        /* \"contracts/Stakable.sol\":9256:9262  reward */\n      dup3\n        /* \"contracts/Stakable.sol\":9264:9282  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":9243:9255  SafeMath.mul */\n      tag_126\n        /* \"contracts/Stakable.sol\":9243:9283  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Stakable.sol\":9285:9289  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":9230:9242  SafeMath.div */\n      tag_127\n        /* \"contracts/Stakable.sol\":9230:9290  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Stakable.sol\":9082:9211  SafeMath.div(... */\n      tag_128\n        /* \"contracts/Stakable.sol\":9116:9167  SafeMath.mul(user_stake.amount, stakingPenaltyRate) */\n      tag_125\n        /* \"contracts/Stakable.sol\":9129:9139  user_stake */\n      dup6\n        /* \"contracts/Stakable.sol\":9129:9146  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9148:9166  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":9116:9128  SafeMath.mul */\n      tag_126\n        /* \"contracts/Stakable.sol\":9116:9167  SafeMath.mul(user_stake.amount, stakingPenaltyRate) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":9082:9211  SafeMath.div(... */\n    tag_128:\n        /* \"contracts/Stakable.sol\":9082:9290  SafeMath.div(... */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/Stakable.sol\":9048:9063  summary.penalty */\n      0x20\n      dup4\n      add\n        /* \"contracts/Stakable.sol\":9048:9290  summary.penalty =... */\n      mstore\n        /* \"contracts/Stakable.sol\":8985:9301  if (summary.stake.releaseTime > block.timestamp) {... */\n    tag_123:\n        /* \"contracts/Stakable.sol\":9315:9328  airdropWeek() */\n      tag_132\n        /* \"contracts/Stakable.sol\":9315:9326  airdropWeek */\n      tag_96\n        /* \"contracts/Stakable.sol\":9315:9328  airdropWeek() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Stakable.sol\":9311:9666  if (airdropWeek() == 0) {... */\n      tag_133\n      jumpi\n        /* \"contracts/Stakable.sol\":9369:9371  52 */\n      0x34\n        /* \"contracts/Stakable.sol\":9353:9366  airdropWeek() */\n      tag_134\n        /* \"contracts/Stakable.sol\":9353:9364  airdropWeek */\n      tag_96\n        /* \"contracts/Stakable.sol\":9353:9366  airdropWeek() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/Stakable.sol\":9353:9371  airdropWeek() < 52 */\n      lt\n        /* \"contracts/Stakable.sol\":9349:9591  if (airdropWeek() < 52) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"contracts/Stakable.sol\":9391:9406  uint256 airdrop */\n      0x00\n        /* \"contracts/Stakable.sol\":9409:9445  _calculateAirdrop(user_stake.amount) */\n      tag_136\n        /* \"contracts/Stakable.sol\":9427:9437  user_stake */\n      dup5\n        /* \"contracts/Stakable.sol\":9427:9444  user_stake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9409:9426  _calculateAirdrop */\n      tag_137\n        /* \"contracts/Stakable.sol\":9409:9445  _calculateAirdrop(user_stake.amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/Stakable.sol\":9463:9476  summary.stake */\n      0x40\n      dup5\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9463:9493  summary.stake.claimableAirdrop */\n      0xa0\n      add\n        /* \"contracts/Stakable.sol\":9463:9503  summary.stake.claimableAirdrop = airdrop */\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":9311:9666  if (airdropWeek() == 0) {... */\n      jump(tag_139)\n        /* \"contracts/Stakable.sol\":9349:9591  if (airdropWeek() < 52) {... */\n    tag_135:\n        /* \"contracts/Stakable.sol\":9542:9555  summary.stake */\n      0x40\n      dup3\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9575:9576  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9542:9572  summary.stake.claimableAirdrop */\n      0xa0\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":9542:9576  summary.stake.claimableAirdrop = 0 */\n      mstore\n        /* \"contracts/Stakable.sol\":9311:9666  if (airdropWeek() == 0) {... */\n      jump(tag_139)\n    tag_133:\n        /* \"contracts/Stakable.sol\":9621:9634  summary.stake */\n      0x40\n      dup3\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9654:9655  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":9621:9651  summary.stake.claimableAirdrop */\n      0xa0\n      swap1\n      swap2\n      add\n        /* \"contracts/Stakable.sol\":9621:9655  summary.stake.claimableAirdrop = 0 */\n      mstore\n        /* \"contracts/Stakable.sol\":9311:9666  if (airdropWeek() == 0) {... */\n    tag_139:\n        /* \"contracts/Stakable.sol\":9676:9689  summary.stake */\n      0x40\n      dup3\n      add\n      mload\n        /* \"contracts/Stakable.sol\":9676:9699  summary.stake.claimable */\n      0x80\n      add\n        /* \"contracts/Stakable.sol\":9676:9708  summary.stake.claimable = reward */\n      mstore\n        /* \"contracts/Stakable.sol\":9741:9758  user_stake.amount */\n      swap1\n      mload\n        /* \"contracts/Stakable.sol\":9718:9758  summary.total_amount = user_stake.amount */\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":9676:9683  summary */\n      swap2\n        /* \"contracts/Stakable.sol\":8558:9790  function hasStake() external view returns (StakingSummary memory) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":4327:4420  function changeTalaxAddress(address talax) external onlyOwner {... */\n    tag_38:\n        /* \"contracts/Stakable.sol\":3596:3605  isOwner() */\n      tag_141\n        /* \"contracts/Stakable.sol\":3596:3603  isOwner */\n      tag_142\n        /* \"contracts/Stakable.sol\":3596:3605  isOwner() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/Stakable.sol\":4399:4405  _talax */\n      0x08\n        /* \"contracts/Stakable.sol\":4399:4413  _talax = talax */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":4327:4420  function changeTalaxAddress(address talax) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11636:11906  function startVoting() external onlyTalax {... */\n    tag_40:\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_145\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/Stakable.sol\":11765:11778  _votingStatus */\n      and(0xff, sload(0x03))\n        /* \"contracts/Stakable.sol\":11765:11786  _votingStatus == true */\n      iszero\n      iszero\n        /* \"contracts/Stakable.sol\":11765:11778  _votingStatus */\n      0x01\n        /* \"contracts/Stakable.sol\":11765:11786  _votingStatus == true */\n      eq\n        /* \"contracts/Stakable.sol\":11761:11845  if (_votingStatus == true) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/Stakable.sol\":11809:11834  Voting__votingIsRunning() */\n      mload(0x40)\n      shl(0xe1, 0x36d26697)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":11761:11845  if (_votingStatus == true) {... */\n    tag_148:\n        /* \"contracts/Stakable.sol\":11855:11868  _votingStatus */\n      0x03\n        /* \"contracts/Stakable.sol\":11855:11875  _votingStatus = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Stakable.sol\":11871:11875  true */\n      0x01\n        /* \"contracts/Stakable.sol\":11855:11875  _votingStatus = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Stakable.sol\":11885:11894  _votingId */\n      0x04\n        /* \"contracts/Stakable.sol\":11885:11899  _votingId += 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":11855:11868  _votingStatus */\n      0x00\n      swap1\n        /* \"contracts/Stakable.sol\":11885:11899  _votingId += 1 */\n      tag_115\n      swap1\n        /* \"contracts/Stakable.sol\":11871:11875  true */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":11885:11899  _votingId += 1 */\n      tag_131\n      jump\t// in\n        /* \"contracts/Stakable.sol\":11912:12302  function vote() public votingStatusTrue isVoter {... */\n    tag_55:\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      tag_152\n        /* \"contracts/Stakable.sol\":4177:4195  _checkVotingStatus */\n      tag_109\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Stakable.sol\":3895:3905  _isVoter() */\n      tag_154\n        /* \"contracts/Stakable.sol\":3895:3903  _isVoter */\n      tag_112\n        /* \"contracts/Stakable.sol\":3895:3905  _isVoter() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Stakable.sol\":12115:12125  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12108:12126  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":12108:12114  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":12108:12126  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":12133:12142  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":12108:12143  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":12108:12132  voters[msg.sender].voted */\n      0x01\n      swap1\n      dup2\n      add\n        /* \"contracts/Stakable.sol\":12108:12143  voters[msg.sender].voted[_votingId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":12108:12151  voters[msg.sender].voted[_votingId] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Stakable.sol\":12104:12207  if (voters[msg.sender].voted[_votingId] == true) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/Stakable.sol\":12174:12196  Voting__alreadyVoted() */\n      mload(0x40)\n      shl(0xe4, 0x0740e33b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":12104:12207  if (voters[msg.sender].voted[_votingId] == true) {... */\n    tag_156:\n        /* \"contracts/Stakable.sol\":12224:12234  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":12217:12235  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":12217:12223  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":12217:12235  voters[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":12242:12251  _votingId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":12217:12252  voters[msg.sender].voted[_votingId] */\n      dup6\n      mstore\n        /* \"contracts/Stakable.sol\":12255:12259  true */\n      0x01\n        /* \"contracts/Stakable.sol\":12217:12241  voters[msg.sender].voted */\n      swap2\n      dup3\n      add\n        /* \"contracts/Stakable.sol\":12217:12252  voters[msg.sender].voted[_votingId] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/Stakable.sol\":12217:12259  voters[msg.sender].voted[_votingId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":12280:12289  _votingId */\n      sload\n        /* \"contracts/Stakable.sol\":12269:12290  votedUsers[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":12269:12279  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":12269:12290  votedUsers[_votingId] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/Stakable.sol\":12269:12295  votedUsers[_votingId] += 1 */\n      dup1\n      sload\n        /* \"contracts/Stakable.sol\":12255:12259  true */\n      swap2\n      swap3\n        /* \"contracts/Stakable.sol\":12269:12290  votedUsers[_votingId] */\n      swap1\n      swap2\n        /* \"contracts/Stakable.sol\":12269:12295  votedUsers[_votingId] += 1 */\n      tag_115\n      swap1\n        /* \"contracts/Stakable.sol\":12255:12259  true */\n      dup5\n      swap1\n        /* \"contracts/Stakable.sol\":12269:12295  votedUsers[_votingId] += 1 */\n      tag_131\n      jump\t// in\n        /* \"contracts/Stakable.sol\":10428:11106  function claimAirdrop(address user)... */\n    tag_58:\n        /* \"contracts/Stakable.sol\":10529:10536  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_159\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":10619:10637  stakeholders[user] */\n      dup3\n      and\n        /* \"contracts/Stakable.sol\":10597:10616  Stake memory staker */\n      0x00\n        /* \"contracts/Stakable.sol\":10619:10637  stakeholders[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":10619:10631  stakeholders */\n      0x0a\n        /* \"contracts/Stakable.sol\":10619:10637  stakeholders[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":10597:10637  Stake memory staker = stakeholders[user] */\n      dup3\n      mload\n      0xe0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup1\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":10652:10669  staker.amount > 0 */\n      iszero\n        /* \"contracts/Stakable.sol\":10648:11100  if (staker.amount > 0) {... */\n      tag_163\n      jumpi\n        /* \"contracts/Stakable.sol\":10705:10707  52 */\n      0x34\n        /* \"contracts/Stakable.sol\":10689:10702  airdropWeek() */\n      tag_162\n        /* \"contracts/Stakable.sol\":10689:10700  airdropWeek */\n      tag_96\n        /* \"contracts/Stakable.sol\":10689:10702  airdropWeek() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Stakable.sol\":10689:10707  airdropWeek() < 52 */\n      lt\n        /* \"contracts/Stakable.sol\":10685:11051  if (airdropWeek() < 52) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/Stakable.sol\":10731:10744  airdropWeek() */\n      tag_164\n        /* \"contracts/Stakable.sol\":10731:10742  airdropWeek */\n      tag_96\n        /* \"contracts/Stakable.sol\":10731:10744  airdropWeek() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Stakable.sol\":10731:10749  airdropWeek() != 0 */\n      iszero\n        /* \"contracts/Stakable.sol\":10727:10828  if (airdropWeek() != 0) {... */\n      tag_165\n      jumpi\n        /* \"contracts/Stakable.sol\":10780:10809  Airdrop__claimableOnceAWeek() */\n      mload(0x40)\n      shl(0xe2, 0x376115b3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":10727:10828  if (airdropWeek() != 0) {... */\n    tag_165:\n        /* \"contracts/Stakable.sol\":10872:10873  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":10846:10869  staker.claimableAirdrop */\n      0xa0\n      dup3\n      add\n        /* \"contracts/Stakable.sol\":10846:10873  staker.claimableAirdrop = 0 */\n      mstore\n        /* \"contracts/Stakable.sol\":10916:10931  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":10891:10913  staker.latestClaimDrop */\n      0xc0\n      dup3\n      add\n        /* \"contracts/Stakable.sol\":10891:10931  staker.latestClaimDrop = block.timestamp */\n      mstore\n        /* \"contracts/Stakable.sol\":10975:10988  staker.amount */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":10957:10989  _calculateAirdrop(staker.amount) */\n      tag_166\n      swap1\n        /* \"contracts/Stakable.sol\":10957:10974  _calculateAirdrop */\n      tag_137\n        /* \"contracts/Stakable.sol\":10957:10989  _calculateAirdrop(staker.amount) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Stakable.sol\":10950:10989  return _calculateAirdrop(staker.amount) */\n      swap4\n        /* \"contracts/Stakable.sol\":10428:11106  function claimAirdrop(address user)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10685:11051  if (airdropWeek() < 52) {... */\n    tag_163:\n      pop\n        /* \"contracts/Stakable.sol\":11035:11036  0 */\n      0x00\n      swap3\n        /* \"contracts/Stakable.sol\":10428:11106  function claimAirdrop(address user)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3353:3354  _ */\n    tag_160:\n        /* \"contracts/Stakable.sol\":10428:11106  function claimAirdrop(address user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":12713:13201  function getVotingResult()... */\n    tag_61:\n        /* \"contracts/Stakable.sol\":12830:12834  bool */\n      0x00\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_170\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      tag_172\n        /* \"contracts/Stakable.sol\":4177:4195  _checkVotingStatus */\n      tag_109\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/Stakable.sol\":12927:12928  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":12912:12923  totalVoters */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":12912:12928  totalVoters <= 1 */\n      gt\n        /* \"contracts/Stakable.sol\":12908:12987  if (totalVoters <= 1) {... */\n      tag_174\n      jumpi\n        /* \"contracts/Stakable.sol\":12951:12976  Voting__notEnoughVoters() */\n      mload(0x40)\n      shl(0xe1, 0x17cb436f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":12908:12987  if (totalVoters <= 1) {... */\n    tag_174:\n        /* \"contracts/Stakable.sol\":12996:13015  uint256 half_voters */\n      0x00\n        /* \"contracts/Stakable.sol\":13018:13064  SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      tag_175\n        /* \"contracts/Stakable.sol\":13031:13059  SafeMath.mul(totalVoters, 5) */\n      tag_176\n        /* \"contracts/Stakable.sol\":13044:13055  totalVoters */\n      sload(0x05)\n        /* \"contracts/Stakable.sol\":13057:13058  5 */\n      0x05\n        /* \"contracts/Stakable.sol\":13031:13043  SafeMath.mul */\n      tag_126\n        /* \"contracts/Stakable.sol\":13031:13059  SafeMath.mul(totalVoters, 5) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/Stakable.sol\":13061:13063  10 */\n      0x0a\n        /* \"contracts/Stakable.sol\":13018:13030  SafeMath.div */\n      tag_127\n        /* \"contracts/Stakable.sol\":13018:13064  SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Stakable.sol\":13090:13099  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":13079:13100  votedUsers[_votingId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":13079:13089  votedUsers */\n      0x07\n        /* \"contracts/Stakable.sol\":13079:13100  votedUsers[_votingId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Stakable.sol\":12996:13064  uint256 half_voters = SafeMath.div(SafeMath.mul(totalVoters, 5), 10) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":13079:13114  votedUsers[_votingId] > half_voters */\n      dup2\n      lt\n        /* \"contracts/Stakable.sol\":13075:13195  if (votedUsers[_votingId] > half_voters) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/Stakable.sol\":13137:13141  true */\n      0x01\n        /* \"contracts/Stakable.sol\":13130:13141  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":12713:13201  function getVotingResult()... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":13075:13195  if (votedUsers[_votingId] > half_voters) {... */\n    tag_177:\n        /* \"contracts/Stakable.sol\":13179:13184  false */\n      0x00\n        /* \"contracts/Stakable.sol\":13172:13184  return false */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":12713:13201  function getVotingResult()... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":9902:9997  function startAirdropSince() external onlyTalax {... */\n    tag_65:\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_180\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Stakable.sol\":9975:9990  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":9960:9972  airdropSince */\n      0x02\n        /* \"contracts/Stakable.sol\":9960:9990  airdropSince = block.timestamp */\n      sstore\n        /* \"contracts/Stakable.sol\":9902:9997  function startAirdropSince() external onlyTalax {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":5798:6104  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n    tag_72:\n        /* \"contracts/Stakable.sol\":3596:3605  isOwner() */\n      tag_183\n        /* \"contracts/Stakable.sol\":3596:3603  isOwner */\n      tag_142\n        /* \"contracts/Stakable.sol\":3596:3605  isOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Stakable.sol\":5956:5958  30 */\n      0x1e\n        /* \"contracts/Stakable.sol\":5947:5953  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":5947:5958  amount > 30 */\n      gt\n        /* \"contracts/Stakable.sol\":5943:6024  if (amount > 30) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/Stakable.sol\":5981:6013  Staking__penaltyExceed3Percent() */\n      mload(0x40)\n      shl(0xe0, 0xf1a470d7)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":5943:6024  if (amount > 30) {... */\n    tag_185:\n        /* \"contracts/Stakable.sol\":6033:6051  stakingPenaltyRate */\n      0x00\n        /* \"contracts/Stakable.sol\":6033:6060  stakingPenaltyRate = amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":6075:6097  PenaltyChanged(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":6075:6097  PenaltyChanged(amount) */\n      0xcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9\n      swap1\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/Stakable.sol\":6075:6097  PenaltyChanged(amount) */\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Stakable.sol\":5798:6104  function changePenaltyFee(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":7775:8552  function withdrawStake(address user)... */\n    tag_89:\n        /* \"contracts/Stakable.sol\":7864:7871  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":7873:7880  uint256 */\n      dup1\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_188\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":8023:8041  stakeholders[user] */\n      dup4\n      and\n        /* \"contracts/Stakable.sol\":7997:8020  Stake memory user_stake */\n      0x00\n        /* \"contracts/Stakable.sol\":8023:8041  stakeholders[user] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8023:8035  stakeholders */\n      0x0a\n        /* \"contracts/Stakable.sol\":8023:8041  stakeholders[user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Stakable.sol\":7997:8041  Stake memory user_stake = stakeholders[user] */\n      dup2\n      mload\n      0xe0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      dup7\n      add\n      mstore\n      0x02\n      dup4\n      add\n      dup1\n      sload\n      swap5\n      dup4\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup4\n      add\n      dup1\n      sload\n      0x60\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n      0x04\n      dup6\n      add\n      dup1\n      sload\n      0x80\n      dup7\n      add\n      mstore\n      0x05\n      dup7\n      add\n      dup1\n      sload\n      0xa0\n      dup8\n      add\n      mstore\n      0x06\n      dup8\n      add\n      dup1\n      sload\n      0xc0\n      dup9\n      add\n      mstore\n        /* \"contracts/Stakable.sol\":8059:8077  stakeholders[user] */\n      swap12\n      dup12\n      mstore\n      swap9\n      swap1\n      swap8\n      mstore\n        /* \"contracts/Stakable.sol\":8052:8077  delete stakeholders[user] */\n      swap4\n      dup9\n      swap1\n      sstore\n      swap1\n      dup8\n      swap1\n      sstore\n      swap3\n      dup7\n      swap1\n      sstore\n      swap2\n      dup6\n      swap1\n      sstore\n      swap2\n      dup5\n      swap1\n      sstore\n      swap2\n      dup4\n      swap1\n      sstore\n      swap2\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Stakable.sol\":8092:8114  user_stake.releaseTime */\n      mload\n        /* \"contracts/Stakable.sol\":8117:8132  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/Stakable.sol\":8088:8402  if (user_stake.releaseTime > block.timestamp) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/Stakable.sol\":8163:8164  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":8148:8159  totalVoters */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":8148:8164  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_191:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":8185:8197  voters[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8185:8191  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":8185:8197  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":8204:8213  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":8185:8214  voters[user].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":8185:8203  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":8185:8214  voters[user].voted[_votingId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":8178:8214  delete voters[user].voted[_votingId] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":8301:8318  user_stake.amount */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":8251:8391  _calculateStakingWithPenalty(... */\n      tag_192\n      swap1\n        /* \"contracts/Stakable.sol\":8340:8373  _calculateStakeReward(user_stake) */\n      tag_193\n        /* \"contracts/Stakable.sol\":8301:8311  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":8340:8361  _calculateStakeReward */\n      tag_122\n        /* \"contracts/Stakable.sol\":8340:8373  _calculateStakeReward(user_stake) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Stakable.sol\":8251:8279  _calculateStakingWithPenalty */\n      tag_194\n        /* \"contracts/Stakable.sol\":8251:8391  _calculateStakingWithPenalty(... */\n      jump\t// in\n    tag_192:\n        /* \"contracts/Stakable.sol\":8228:8391  return... */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/Stakable.sol\":7775:8552  function withdrawStake(address user)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Stakable.sol\":8088:8402  if (user_stake.releaseTime > block.timestamp) {... */\n    tag_190:\n        /* \"contracts/Stakable.sol\":8427:8428  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":8412:8423  totalVoters */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":8412:8428  totalVoters -= 1 */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_195:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":8445:8457  voters[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":8445:8451  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":8445:8457  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Stakable.sol\":8464:8473  _votingId */\n      sload(0x04)\n        /* \"contracts/Stakable.sol\":8445:8474  voters[user].voted[_votingId] */\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":8445:8463  voters[user].voted */\n      0x01\n      add\n        /* \"contracts/Stakable.sol\":8445:8474  voters[user].voted[_votingId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":8438:8474  delete voters[user].voted[_votingId] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":8492:8509  user_stake.amount */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":8511:8544  _calculateStakeReward(user_stake) */\n      tag_192\n        /* \"contracts/Stakable.sol\":8492:8502  user_stake */\n      dup3\n        /* \"contracts/Stakable.sol\":8511:8532  _calculateStakeReward */\n      tag_122\n        /* \"contracts/Stakable.sol\":8511:8544  _calculateStakeReward(user_stake) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":11112:11316  function airdropWeek() public view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/Stakable.sol\":11156:11163  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":11179:11191  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":11195:11196  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":11179:11196  airdropSince != 0 */\n      eq\n        /* \"contracts/Stakable.sol\":11175:11310  if (airdropSince != 0) {... */\n      tag_198\n      jumpi\n        /* \"contracts/Stakable.sol\":11254:11260  7 days */\n      0x093a80\n        /* \"contracts/Stakable.sol\":11238:11250  airdropSince */\n      sload(0x02)\n        /* \"contracts/Stakable.sol\":11220:11235  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":11220:11250  block.timestamp - airdropSince */\n      tag_199\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_199:\n        /* \"contracts/Stakable.sol\":11219:11260  (block.timestamp - airdropSince) / 7 days */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/Stakable.sol\":11212:11260  return (block.timestamp - airdropSince) / 7 days */\n      swap1\n      pop\n        /* \"contracts/Stakable.sol\":11112:11316  function airdropWeek() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stakable.sol\":11175:11310  if (airdropSince != 0) {... */\n    tag_198:\n      pop\n        /* \"contracts/Stakable.sol\":11298:11299  0 */\n      0x00\n      swap1\n        /* \"contracts/Stakable.sol\":11112:11316  function airdropWeek() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":10003:10237  function changeAirdropPercentage(uint256 amount) external onlyOwner {... */\n    tag_100:\n        /* \"contracts/Stakable.sol\":3596:3605  isOwner() */\n      tag_204\n        /* \"contracts/Stakable.sol\":3596:3603  isOwner */\n      tag_142\n        /* \"contracts/Stakable.sol\":3596:3605  isOwner() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/Stakable.sol\":10094:10097  200 */\n      0xc8\n        /* \"contracts/Stakable.sol\":10085:10091  amount */\n      dup2\n        /* \"contracts/Stakable.sol\":10085:10097  amount > 200 */\n      gt\n        /* \"contracts/Stakable.sol\":10081:10164  if (amount > 200) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/Stakable.sol\":10120:10153  Staking__airdropExceed20Percent() */\n      mload(0x40)\n      shl(0xe4, 0x0a552cf1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":10081:10164  if (amount > 200) {... */\n    tag_206:\n        /* \"contracts/Stakable.sol\":10173:10184  airdropRate */\n      0x01\n        /* \"contracts/Stakable.sol\":10173:10193  airdropRate = amount */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":10208:10230  AirdropChanged(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":10208:10230  AirdropChanged(amount) */\n      0xcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e\n      swap1\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"contracts/Stakable.sol\":10208:10230  AirdropChanged(amount) */\n      tag_186\n        /* \"#utility.yul\":1692:1869   */\n      jump\n        /* \"contracts/Stakable.sol\":4631:5792  function stake(... */\n    tag_104:\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_209\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/Stakable.sol\":4908:4909  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":4898:4904  amount */\n      dup4\n        /* \"contracts/Stakable.sol\":4898:4909  amount <= 0 */\n      gt\n        /* \"contracts/Stakable.sol\":4894:4972  if (amount <= 0) {... */\n      tag_211\n      jumpi\n        /* \"contracts/Stakable.sol\":4932:4961  Staking__cannotStakeNothing() */\n      mload(0x40)\n      shl(0xe1, 0x445a206b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":4894:4972  if (amount <= 0) {... */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":5057:5075  stakeholders[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":5057:5069  stakeholders */\n      0x0a\n        /* \"contracts/Stakable.sol\":5057:5075  stakeholders[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":5057:5082  stakeholders[user].amount */\n      sload\n        /* \"contracts/Stakable.sol\":5057:5087  stakeholders[user].amount != 0 */\n      iszero\n        /* \"contracts/Stakable.sol\":5053:5144  if (stakeholders[user].amount != 0) {... */\n      tag_212\n      jumpi\n        /* \"contracts/Stakable.sol\":5110:5133  Staking__userIsStaker() */\n      mload(0x40)\n      shl(0xe0, 0x04462d27)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":5053:5144  if (stakeholders[user].amount != 0) {... */\n    tag_212:\n        /* \"contracts/Stakable.sol\":5169:5170  1 */\n      0x01\n        /* \"contracts/Stakable.sol\":5154:5165  totalVoters */\n      0x05\n      0x00\n        /* \"contracts/Stakable.sol\":5154:5170  totalVoters += 1 */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_213:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":5180:5192  voters[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":5180:5186  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":5180:5192  voters[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":5180:5211  voters[user].votingRight = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Stakable.sol\":5207:5211  true */\n      0x01\n        /* \"contracts/Stakable.sol\":5180:5211  voters[user].votingRight = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":5494:5660  Stake(... */\n      dup2\n      mload\n      0xe0\n      dup2\n      add\n      dup4\n      mstore\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":5329:5344  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":5494:5660  Stake(... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Stakable.sol\":5329:5344  block.timestamp */\n      swap1\n        /* \"contracts/Stakable.sol\":5494:5660  Stake(... */\n      0x60\n      dup2\n      add\n        /* \"contracts/Stakable.sol\":5581:5604  stakePeriod + timestamp */\n      tag_214\n        /* \"contracts/Stakable.sol\":5329:5344  block.timestamp */\n      dup4\n        /* \"contracts/Stakable.sol\":5581:5592  stakePeriod */\n      dup7\n        /* \"contracts/Stakable.sol\":5581:5604  stakePeriod + timestamp */\n      tag_131\n      jump\t// in\n    tag_214:\n        /* \"contracts/Stakable.sol\":5494:5660  Stake(... */\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":5619:5620  0 */\n      0x00\n        /* \"contracts/Stakable.sol\":5494:5660  Stake(... */\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0x40\n      dup1\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      0x60\n      swap4\n      dup5\n      add\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Stakable.sol\":5473:5491  stakeholders[user] */\n      dup11\n      and\n      dup1\n      dup5\n      mstore\n        /* \"contracts/Stakable.sol\":5473:5485  stakeholders */\n      0x0a\n        /* \"contracts/Stakable.sol\":5473:5491  stakeholders[user] */\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":5473:5660  stakeholders[user] = Stake(... */\n      dup6\n      mload\n      dup2\n      sstore\n      swap2\n      dup6\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      dup5\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      swap2\n      dup4\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup4\n      add\n      sstore\n      0xa0\n      dup4\n      add\n      mload\n      0x05\n      dup4\n      add\n      sstore\n      0xc0\n      swap1\n      swap3\n      add\n      mload\n      0x06\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/Stakable.sol\":5727:5785  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n        /* \"contracts/Stakable.sol\":5740:5746  amount */\n      dup6\n        /* \"contracts/Stakable.sol\":5748:5757  timestamp */\n      dup4\n        /* \"contracts/Stakable.sol\":5760:5783  stakePeriod + timestamp */\n      tag_215\n        /* \"contracts/Stakable.sol\":5748:5757  timestamp */\n      dup2\n        /* \"contracts/Stakable.sol\":5760:5771  stakePeriod */\n      dup9\n        /* \"contracts/Stakable.sol\":5760:5783  stakePeriod + timestamp */\n      tag_131\n      jump\t// in\n    tag_215:\n        /* \"contracts/Stakable.sol\":5727:5785  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3851:3876   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3907:3909   */\n      0x20\n        /* \"#utility.yul\":3892:3910   */\n      dup5\n      add\n        /* \"#utility.yul\":3885:3919   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3935:3953   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3928:3962   */\n      mstore\n        /* \"#utility.yul\":3839:3841   */\n      0x60\n        /* \"#utility.yul\":3824:3842   */\n      add\n        /* \"contracts/Stakable.sol\":5727:5785  Staked(user, amount, timestamp, (stakePeriod + timestamp)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Stakable.sol\":4774:5792  {... */\n      pop\n        /* \"contracts/Stakable.sol\":4631:5792  function stake(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":13207:13303  function stopVoting() external onlyTalax votingStatusTrue {... */\n    tag_106:\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      tag_219\n        /* \"contracts/Stakable.sol\":3334:3341  isTalax */\n      tag_146\n        /* \"contracts/Stakable.sol\":3334:3343  isTalax() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      tag_221\n        /* \"contracts/Stakable.sol\":4177:4195  _checkVotingStatus */\n      tag_109\n        /* \"contracts/Stakable.sol\":4177:4197  _checkVotingStatus() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/Stakable.sol\":13275:13288  _votingStatus */\n      0x03\n        /* \"contracts/Stakable.sol\":13275:13296  _votingStatus = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Stakable.sol\":13207:13303  function stopVoting() external onlyTalax votingStatusTrue {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3929:4133  function _checkVotingStatus() internal view {... */\n    tag_109:\n        /* \"contracts/Stakable.sol\":4050:4063  _votingStatus */\n      and(0xff, sload(0x03))\n        /* \"contracts/Stakable.sol\":4045:4127  if (!_votingStatus) {... */\n      tag_224\n      jumpi\n        /* \"contracts/Stakable.sol\":4086:4116  Function__votingNotAvailable() */\n      mload(0x40)\n      shl(0xe2, 0x28746245)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":4045:4127  if (!_votingStatus) {... */\n    tag_224:\n        /* \"contracts/Stakable.sol\":3929:4133  function _checkVotingStatus() internal view {... */\n      jump\t// out\n        /* \"contracts/Stakable.sol\":3629:3860  function _isVoter() internal view {... */\n    tag_112:\n        /* \"contracts/Stakable.sol\":3767:3777  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":3760:3778  voters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Stakable.sol\":3760:3766  voters */\n      0x06\n        /* \"contracts/Stakable.sol\":3760:3778  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Stakable.sol\":3760:3790  voters[msg.sender].votingRight */\n      sload\n      0xff\n      and\n        /* \"contracts/Stakable.sol\":3756:3854  if (voters[msg.sender].votingRight == false) {... */\n      tag_224\n      jumpi\n        /* \"contracts/Stakable.sol\":3822:3843  Function__notAVoter() */\n      mload(0x40)\n      shl(0xe2, 0x07959f75)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":6465:6902  function _calculateStakeReward(Stake memory user_stake)... */\n    tag_122:\n        /* \"contracts/Stakable.sol\":6595:6612  user_stake.amount */\n      dup1\n      mload\n        /* \"contracts/Stakable.sol\":6568:6575  uint256 */\n      0x00\n      swap1\n        /* \"contracts/Stakable.sol\":6591:6652  if (user_stake.amount == 0) {... */\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/Stakable.sol\":6640:6641  0 */\n      0x00\n      swap2\n        /* \"contracts/Stakable.sol\":6465:6902  function _calculateStakeReward(Stake memory user_stake)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6591:6652  if (user_stake.amount == 0) {... */\n    tag_228:\n        /* \"contracts/Stakable.sol\":6891:6895  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/Stakable.sol\":6844:6887  _calculateStakingDuration(user_stake.since) */\n      tag_229\n        /* \"contracts/Stakable.sol\":6870:6880  user_stake */\n      dup4\n        /* \"contracts/Stakable.sol\":6870:6886  user_stake.since */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6844:6869  _calculateStakingDuration */\n      tag_230\n        /* \"contracts/Stakable.sol\":6844:6887  _calculateStakingDuration(user_stake.since) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/Stakable.sol\":6805:6825  user_stake.rewardAPY */\n      0x40\n      dup5\n      add\n      mload\n        /* \"contracts/Stakable.sol\":6769:6786  user_stake.amount */\n      dup5\n      mload\n        /* \"contracts/Stakable.sol\":6769:6825  user_stake.amount *... */\n      tag_231\n      swap2\n        /* \"contracts/Stakable.sol\":6805:6825  user_stake.rewardAPY */\n      swap1\n        /* \"contracts/Stakable.sol\":6769:6825  user_stake.amount *... */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/Stakable.sol\":6769:6887  user_stake.amount *... */\n      tag_233\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_233:\n        /* \"contracts/Stakable.sol\":6768:6895  (user_stake.amount *... */\n      tag_234\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_234:\n        /* \"contracts/Stakable.sol\":6749:6895  return... */\n      swap3\n        /* \"contracts/Stakable.sol\":6465:6902  function _calculateStakeReward(Stake memory user_stake)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_232\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_201\n      jump\t// in\n        /* \"contracts/Stakable.sol\":10243:10422  function _calculateAirdrop(uint256 stakeAmount)... */\n    tag_137:\n        /* \"contracts/Stakable.sol\":10338:10345  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":10407:10415  52 weeks */\n      0x01dfe200\n        /* \"contracts/Stakable.sol\":10399:10403  1000 */\n      0x03e8\n        /* \"contracts/Stakable.sol\":10384:10395  airdropRate */\n      sload(0x01)\n        /* \"contracts/Stakable.sol\":10370:10381  stakeAmount */\n      dup5\n        /* \"contracts/Stakable.sol\":10370:10395  stakeAmount * airdropRate */\n      tag_240\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_240:\n        /* \"contracts/Stakable.sol\":10369:10403  (stakeAmount * airdropRate) / 1000 */\n      tag_233\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n        /* \"contracts/Stakable.sol\":3367:3559  function isOwner() internal view {... */\n    tag_142:\n        /* \"contracts/Stakable.sol\":3488:3494  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"contracts/Stakable.sol\":3474:3484  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":3474:3494  msg.sender != _owner */\n      eq\n        /* \"contracts/Stakable.sol\":3470:3553  if (msg.sender != _owner) {... */\n      tag_224\n      jumpi\n        /* \"contracts/Stakable.sol\":3517:3542  Function__notAuthorized() */\n      mload(0x40)\n      shl(0xe1, 0x15a678a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":3105:3297  function isTalax() internal view {... */\n    tag_146:\n        /* \"contracts/Stakable.sol\":3226:3232  _talax */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"contracts/Stakable.sol\":3212:3222  msg.sender */\n      caller\n        /* \"contracts/Stakable.sol\":3212:3232  msg.sender != _talax */\n      eq\n        /* \"contracts/Stakable.sol\":3208:3291  if (msg.sender != _talax) {... */\n      tag_224\n      jumpi\n        /* \"contracts/Stakable.sol\":3255:3280  Function__notAuthorized() */\n      mload(0x40)\n      shl(0xe1, 0x15a678a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Stakable.sol\":6908:7429  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_194:\n        /* \"contracts/Stakable.sol\":7025:7032  uint256 */\n      0x00\n      dup1\n        /* \"contracts/Stakable.sol\":7061:7072  amount == 0 */\n      dup4\n        /* \"contracts/Stakable.sol\":7057:7112  if (amount == 0) {... */\n      tag_248\n      jumpi\n      pop\n        /* \"contracts/Stakable.sol\":7096:7097  0 */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"contracts/Stakable.sol\":7088:7101  return (0, 0) */\n      jump(tag_247)\n        /* \"contracts/Stakable.sol\":7057:7112  if (amount == 0) {... */\n    tag_248:\n        /* \"contracts/Stakable.sol\":7142:7270  SafeMath.sub(... */\n      tag_249\n        /* \"contracts/Stakable.sol\":7172:7178  amount */\n      dup5\n        /* \"contracts/Stakable.sol\":7196:7256  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n      tag_250\n        /* \"contracts/Stakable.sol\":7209:7249  SafeMath.mul(amount, stakingPenaltyRate) */\n      tag_125\n        /* \"contracts/Stakable.sol\":7222:7228  amount */\n      dup8\n        /* \"contracts/Stakable.sol\":7230:7248  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":7209:7221  SafeMath.mul */\n      tag_126\n        /* \"contracts/Stakable.sol\":7209:7249  SafeMath.mul(amount, stakingPenaltyRate) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":7196:7256  SafeMath.div(SafeMath.mul(amount, stakingPenaltyRate), 1000) */\n    tag_250:\n        /* \"contracts/Stakable.sol\":7142:7154  SafeMath.sub */\n      tag_252\n        /* \"contracts/Stakable.sol\":7142:7270  SafeMath.sub(... */\n      jump\t// in\n    tag_249:\n        /* \"contracts/Stakable.sol\":7284:7412  SafeMath.sub(... */\n      tag_253\n        /* \"contracts/Stakable.sol\":7314:7320  reward */\n      dup5\n        /* \"contracts/Stakable.sol\":7338:7398  SafeMath.div(SafeMath.mul(reward, stakingPenaltyRate), 1000) */\n      tag_250\n        /* \"contracts/Stakable.sol\":7351:7391  SafeMath.mul(reward, stakingPenaltyRate) */\n      tag_125\n        /* \"contracts/Stakable.sol\":7364:7370  reward */\n      dup8\n        /* \"contracts/Stakable.sol\":7372:7390  stakingPenaltyRate */\n      sload(0x00)\n        /* \"contracts/Stakable.sol\":7351:7363  SafeMath.mul */\n      tag_126\n        /* \"contracts/Stakable.sol\":7351:7391  SafeMath.mul(reward, stakingPenaltyRate) */\n      jump\t// in\n        /* \"contracts/Stakable.sol\":7284:7412  SafeMath.sub(... */\n    tag_253:\n        /* \"contracts/Stakable.sol\":7121:7422  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Stakable.sol\":6908:7429  function _calculateStakingWithPenalty(uint256 amount, uint256 reward)... */\n    tag_247:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakable.sol\":6110:6459  function _calculateStakingDuration(uint256 since)... */\n    tag_230:\n        /* \"contracts/Stakable.sol\":6207:6214  uint256 */\n      0x00\n        /* \"contracts/Stakable.sol\":6301:6452  SafeMath.div(... */\n      tag_234\n        /* \"contracts/Stakable.sol\":6332:6355  block.timestamp - since */\n      tag_258\n        /* \"contracts/Stakable.sol\":6350:6355  since */\n      dup4\n        /* \"contracts/Stakable.sol\":6332:6347  block.timestamp */\n      timestamp\n        /* \"contracts/Stakable.sol\":6332:6355  block.timestamp - since */\n      tag_116\n      jump\t// in\n    tag_258:\n        /* \"contracts/Stakable.sol\":6331:6363  (block.timestamp - since) * 1e24 */\n      tag_259\n      swap1\n        /* \"contracts/Stakable.sol\":6359:6363  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/Stakable.sol\":6331:6363  (block.timestamp - since) * 1e24 */\n      tag_232\n      jump\t// in\n    tag_259:\n        /* \"contracts/Stakable.sol\":6381:6389  365 days */\n      0x01e13380\n        /* \"contracts/Stakable.sol\":6301:6452  SafeMath.div(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      0x4572726f722063616e6e6f74206469766964652074696d657374616d70000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakable.sol\":6301:6313  SafeMath.div */\n      tag_260\n        /* \"contracts/Stakable.sol\":6301:6452  SafeMath.div(... */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5776:5783  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5834:5846  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5827:5832  b > 0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5819:5847  require(b > 0, errorMessage) */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5872:5873  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5869  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5868:5873  a / b */\n      dup2\n      tag_268\n      jumpi\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n      div\n      swap5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5890  function div(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_118:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      tag_270\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_270:\n      swap1\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":842:1015   */\n    tag_272:\n        /* \"#utility.yul\":910:930   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":959:990   */\n      dup2\n      and\n        /* \"#utility.yul\":949:991   */\n      dup2\n      eq\n        /* \"#utility.yul\":939:1009   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1005:1006   */\n      0x00\n        /* \"#utility.yul\":1002:1003   */\n      dup1\n        /* \"#utility.yul\":995:1007   */\n      revert\n        /* \"#utility.yul\":1020:1206   */\n    tag_37:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1120:1129   */\n      dup3\n        /* \"#utility.yul\":1111:1118   */\n      dup5\n        /* \"#utility.yul\":1107:1130   */\n      sub\n        /* \"#utility.yul\":1103:1135   */\n      slt\n        /* \"#utility.yul\":1100:1152   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1148:1149   */\n      0x00\n        /* \"#utility.yul\":1145:1146   */\n      dup1\n        /* \"#utility.yul\":1138:1150   */\n      revert\n        /* \"#utility.yul\":1100:1152   */\n    tag_279:\n        /* \"#utility.yul\":1171:1200   */\n      tag_166\n        /* \"#utility.yul\":1190:1199   */\n      dup3\n        /* \"#utility.yul\":1171:1200   */\n      tag_272\n      jump\t// in\n        /* \"#utility.yul\":2066:2246   */\n    tag_71:\n        /* \"#utility.yul\":2125:2131   */\n      0x00\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2166:2175   */\n      dup3\n        /* \"#utility.yul\":2157:2164   */\n      dup5\n        /* \"#utility.yul\":2153:2176   */\n      sub\n        /* \"#utility.yul\":2149:2181   */\n      slt\n        /* \"#utility.yul\":2146:2198   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2194:2195   */\n      0x00\n        /* \"#utility.yul\":2191:2192   */\n      dup1\n        /* \"#utility.yul\":2184:2196   */\n      revert\n        /* \"#utility.yul\":2146:2198   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":2217:2240   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2066:2246   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2504:2895   */\n    tag_103:\n        /* \"#utility.yul\":2590:2596   */\n      0x00\n        /* \"#utility.yul\":2598:2604   */\n      dup1\n        /* \"#utility.yul\":2606:2612   */\n      0x00\n        /* \"#utility.yul\":2614:2620   */\n      dup1\n        /* \"#utility.yul\":2667:2670   */\n      0x80\n        /* \"#utility.yul\":2655:2664   */\n      dup6\n        /* \"#utility.yul\":2646:2653   */\n      dup8\n        /* \"#utility.yul\":2642:2665   */\n      sub\n        /* \"#utility.yul\":2638:2671   */\n      slt\n        /* \"#utility.yul\":2635:2688   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2684:2685   */\n      0x00\n        /* \"#utility.yul\":2681:2682   */\n      dup1\n        /* \"#utility.yul\":2674:2686   */\n      revert\n        /* \"#utility.yul\":2635:2688   */\n    tag_289:\n        /* \"#utility.yul\":2707:2736   */\n      tag_290\n        /* \"#utility.yul\":2726:2735   */\n      dup6\n        /* \"#utility.yul\":2707:2736   */\n      tag_272\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2697:2736   */\n      swap7\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"#utility.yul\":2768:2786   */\n      dup7\n      add\n        /* \"#utility.yul\":2755:2787   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":2834:2836   */\n      0x40\n        /* \"#utility.yul\":2819:2837   */\n      dup7\n      add\n        /* \"#utility.yul\":2806:2838   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":2885:2887   */\n      0x60\n        /* \"#utility.yul\":2870:2888   */\n      add\n        /* \"#utility.yul\":2857:2889   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2504:2895   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3027   */\n    tag_273:\n        /* \"#utility.yul\":2961:2971   */\n      0x4e487b71\n        /* \"#utility.yul\":2956:2959   */\n      0xe0\n        /* \"#utility.yul\":2952:2972   */\n      shl\n        /* \"#utility.yul\":2949:2950   */\n      0x00\n        /* \"#utility.yul\":2942:2973   */\n      mstore\n        /* \"#utility.yul\":2992:2996   */\n      0x11\n        /* \"#utility.yul\":2989:2990   */\n      0x04\n        /* \"#utility.yul\":2982:2997   */\n      mstore\n        /* \"#utility.yul\":3016:3020   */\n      0x24\n        /* \"#utility.yul\":3013:3014   */\n      0x00\n        /* \"#utility.yul\":3006:3021   */\n      revert\n        /* \"#utility.yul\":3032:3157   */\n    tag_116:\n        /* \"#utility.yul\":3072:3076   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup3\n        /* \"#utility.yul\":3097:3098   */\n      dup3\n        /* \"#utility.yul\":3094:3102   */\n      lt\n        /* \"#utility.yul\":3091:3125   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3105:3123   */\n      tag_294\n      tag_273\n      jump\t// in\n    tag_294:\n      pop\n        /* \"#utility.yul\":3142:3151   */\n      sub\n      swap1\n        /* \"#utility.yul\":3032:3157   */\n      jump\t// out\n        /* \"#utility.yul\":3162:3290   */\n    tag_131:\n        /* \"#utility.yul\":3202:3205   */\n      0x00\n        /* \"#utility.yul\":3233:3234   */\n      dup3\n        /* \"#utility.yul\":3229:3235   */\n      not\n        /* \"#utility.yul\":3226:3227   */\n      dup3\n        /* \"#utility.yul\":3223:3236   */\n      gt\n        /* \"#utility.yul\":3220:3259   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3239:3257   */\n      tag_297\n      tag_273\n      jump\t// in\n    tag_297:\n      pop\n        /* \"#utility.yul\":3275:3284   */\n      add\n      swap1\n        /* \"#utility.yul\":3162:3290   */\n      jump\t// out\n        /* \"#utility.yul\":3295:3422   */\n    tag_269:\n        /* \"#utility.yul\":3356:3366   */\n      0x4e487b71\n        /* \"#utility.yul\":3351:3354   */\n      0xe0\n        /* \"#utility.yul\":3347:3367   */\n      shl\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3368   */\n      mstore\n        /* \"#utility.yul\":3387:3391   */\n      0x12\n        /* \"#utility.yul\":3384:3385   */\n      0x04\n        /* \"#utility.yul\":3377:3392   */\n      mstore\n        /* \"#utility.yul\":3411:3415   */\n      0x24\n        /* \"#utility.yul\":3408:3409   */\n      0x00\n        /* \"#utility.yul\":3401:3416   */\n      revert\n        /* \"#utility.yul\":3427:3644   */\n    tag_201:\n        /* \"#utility.yul\":3467:3468   */\n      0x00\n        /* \"#utility.yul\":3493:3494   */\n      dup3\n        /* \"#utility.yul\":3483:3615   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3537:3547   */\n      0x4e487b71\n        /* \"#utility.yul\":3532:3535   */\n      0xe0\n        /* \"#utility.yul\":3528:3548   */\n      shl\n        /* \"#utility.yul\":3525:3526   */\n      0x00\n        /* \"#utility.yul\":3518:3549   */\n      mstore\n        /* \"#utility.yul\":3572:3576   */\n      0x12\n        /* \"#utility.yul\":3569:3570   */\n      0x04\n        /* \"#utility.yul\":3562:3577   */\n      mstore\n        /* \"#utility.yul\":3600:3604   */\n      0x24\n        /* \"#utility.yul\":3597:3598   */\n      0x00\n        /* \"#utility.yul\":3590:3605   */\n      revert\n        /* \"#utility.yul\":3483:3615   */\n    tag_300:\n      pop\n        /* \"#utility.yul\":3629:3638   */\n      div\n      swap1\n        /* \"#utility.yul\":3427:3644   */\n      jump\t// out\n        /* \"#utility.yul\":3973:4141   */\n    tag_232:\n        /* \"#utility.yul\":4013:4020   */\n      0x00\n        /* \"#utility.yul\":4079:4080   */\n      dup2\n        /* \"#utility.yul\":4075:4076   */\n      0x00\n        /* \"#utility.yul\":4071:4077   */\n      not\n        /* \"#utility.yul\":4067:4081   */\n      div\n        /* \"#utility.yul\":4064:4065   */\n      dup4\n        /* \"#utility.yul\":4061:4082   */\n      gt\n        /* \"#utility.yul\":4056:4057   */\n      dup3\n        /* \"#utility.yul\":4049:4058   */\n      iszero\n        /* \"#utility.yul\":4042:4059   */\n      iszero\n        /* \"#utility.yul\":4038:4083   */\n      and\n        /* \"#utility.yul\":4035:4106   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4086:4104   */\n      tag_304\n      tag_273\n      jump\t// in\n    tag_304:\n      pop\n        /* \"#utility.yul\":4126:4135   */\n      mul\n      swap1\n        /* \"#utility.yul\":3973:4141   */\n      jump\t// out\n        /* \"#utility.yul\":4146:4743   */\n    tag_266:\n        /* \"#utility.yul\":4258:4262   */\n      0x00\n        /* \"#utility.yul\":4287:4289   */\n      0x20\n        /* \"#utility.yul\":4316:4318   */\n      dup1\n        /* \"#utility.yul\":4305:4314   */\n      dup4\n        /* \"#utility.yul\":4298:4319   */\n      mstore\n        /* \"#utility.yul\":4348:4354   */\n      dup4\n        /* \"#utility.yul\":4342:4355   */\n      mload\n        /* \"#utility.yul\":4391:4397   */\n      dup1\n        /* \"#utility.yul\":4386:4388   */\n      dup3\n        /* \"#utility.yul\":4375:4384   */\n      dup6\n        /* \"#utility.yul\":4371:4389   */\n      add\n        /* \"#utility.yul\":4364:4398   */\n      mstore\n        /* \"#utility.yul\":4416:4417   */\n      0x00\n        /* \"#utility.yul\":4426:4566   */\n    tag_306:\n        /* \"#utility.yul\":4440:4446   */\n      dup2\n        /* \"#utility.yul\":4437:4438   */\n      dup2\n        /* \"#utility.yul\":4434:4447   */\n      lt\n        /* \"#utility.yul\":4426:4566   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4535:4549   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":4531:4554   */\n      dup4\n      add\n        /* \"#utility.yul\":4525:4555   */\n      mload\n        /* \"#utility.yul\":4501:4518   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":4520:4522   */\n      0x40\n        /* \"#utility.yul\":4497:4523   */\n      add\n        /* \"#utility.yul\":4490:4556   */\n      mstore\n        /* \"#utility.yul\":4455:4465   */\n      dup3\n      add\n        /* \"#utility.yul\":4426:4566   */\n      jump(tag_306)\n    tag_308:\n        /* \"#utility.yul\":4584:4590   */\n      dup2\n        /* \"#utility.yul\":4581:4582   */\n      dup2\n        /* \"#utility.yul\":4578:4591   */\n      gt\n        /* \"#utility.yul\":4575:4666   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4654:4655   */\n      0x00\n        /* \"#utility.yul\":4649:4651   */\n      0x40\n        /* \"#utility.yul\":4640:4646   */\n      dup4\n        /* \"#utility.yul\":4629:4638   */\n      dup8\n        /* \"#utility.yul\":4625:4647   */\n      add\n        /* \"#utility.yul\":4621:4652   */\n      add\n        /* \"#utility.yul\":4614:4656   */\n      mstore\n        /* \"#utility.yul\":4575:4666   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":4727:4729   */\n      0x1f\n        /* \"#utility.yul\":4706:4721   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4702:4731   */\n      and\n        /* \"#utility.yul\":4687:4732   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4734:4736   */\n      0x40\n        /* \"#utility.yul\":4683:4737   */\n      add\n      swap4\n        /* \"#utility.yul\":4146:4743   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eea3f2e2f5b52f767ff396649f2176d184464c07ff6e7297ed1fa0f41935f8a364736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF PUSH1 0x0 SSTORE PUSH1 0x50 PUSH1 0x1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x103F DUP1 PUSH2 0x4D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x60A JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x288 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x15A PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x15A PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x3BB PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0xC25 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x45BA11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x424 SWAP1 DUP5 SWAP1 PUSH2 0xF2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x433 PUSH2 0xE36 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB018F087 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH2 0x4D5 DUP4 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x521 JUMPI PUSH2 0x4FE PUSH2 0x4F6 DUP3 PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x511 PUSH2 0x4F6 DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x51B SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST PUSH2 0x529 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x56D JUMPI PUSH1 0x34 PUSH2 0x537 PUSH2 0x9CB JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 PUSH2 0x54C DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 ADD MSTORE POP PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x80 ADD MSTORE SWAP1 MLOAD DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x595 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5BF PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36D26697 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x424 SWAP1 DUP5 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x612 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x61A PUSH2 0xC25 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH4 0x740E33B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x424 SWAP1 DUP5 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE ISZERO PUSH2 0x774 JUMPI PUSH1 0x34 PUSH2 0x729 PUSH2 0x9CB JUMP JUMPDEST LT ISZERO PUSH2 0x774 JUMPI PUSH2 0x737 PUSH2 0x9CB JUMP JUMPDEST ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH4 0x376115B3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP1 MLOAD PUSH2 0x76D SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78C PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x794 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD GT PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x17CB436F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH2 0x7C9 PUSH1 0x5 SLOAD PUSH1 0x5 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0xA PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x804 PUSH2 0xD0F JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x812 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF1A470D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x87B PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MSTORE SWAP12 DUP12 MSTORE SWAP9 SWAP1 SWAP8 MSTORE SWAP4 DUP9 SWAP1 SSTORE SWAP1 DUP8 SWAP1 SSTORE SWAP3 DUP7 SWAP1 SSTORE SWAP2 DUP6 SWAP1 SSTORE SWAP2 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE MLOAD TIMESTAMP LT ISZERO PUSH2 0x978 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0x96E SWAP1 PUSH2 0x969 DUP4 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x98B SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0x96E DUP3 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 EQ PUSH2 0x9F8 JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA06 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA552CF1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0x865 JUMP JUMPDEST PUSH2 0xA65 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x445A206B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4462D27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0xB23 DUP4 DUP7 PUSH2 0xF45 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP5 MSTORE PUSH1 0xA DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xBBF DUP2 DUP9 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBEC PUSH2 0xD0F JUMP JUMPDEST PUSH2 0xBF4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x28746245 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7959F75 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xC66 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xC7F DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 DUP5 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 DUP5 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0xD4D JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0xD65 DUP5 PUSH2 0xD60 PUSH2 0x4F6 DUP8 PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xD78 DUP5 PUSH2 0xD60 PUSH2 0x4F6 DUP8 PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA4 PUSH2 0xD93 DUP4 TIMESTAMP PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xDA7 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0xF95 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 DUP5 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE14 SWAP2 SWAP1 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xF5D JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8F PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76D DUP3 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFE DUP6 PUSH2 0xE94 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF40 JUMPI PUSH2 0xF40 PUSH2 0xF18 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF58 PUSH2 0xF18 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFAF JUMPI PUSH2 0xFAF PUSH2 0xF18 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xFC5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE LOG3 CALLCODE 0xE2 CREATE2 0xB5 0x2F PUSH23 0x7FF396649F2176D184464C07FF6E7297ED1FA0F41935F8 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "817:12488:1:-:0;;;1484:200;;;;;;;;;-1:-1:-1;1591:2:1;1570:18;:23;1617:2;1603:11;:16;1629:6;:19;;-1:-1:-1;;;;;;1629:19:1;;;1638:10;1629:19;;;;;;1658:6;:19;;;;;;;;;;817:12488;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateAirdrop_1002": {
									"entryPoint": 3266,
									"id": 1002,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakeReward_695": {
									"entryPoint": 3157,
									"id": 695,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingDuration_664": {
									"entryPoint": 3460,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateStakingWithPenalty_744": {
									"entryPoint": 3386,
									"id": 744,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_checkVotingStatus_523": {
									"entryPoint": 3072,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isVoter_505": {
									"entryPoint": 3109,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_owner_379": {
									"entryPoint": null,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_talax_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropRate_358": {
									"entryPoint": null,
									"id": 358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropSince_360": {
									"entryPoint": null,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropWeek_1086": {
									"entryPoint": 2507,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeAirdropPercentage_984": {
									"entryPoint": 2558,
									"id": 984,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePenaltyFee_643": {
									"entryPoint": 2058,
									"id": 643,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTalaxAddress_542": {
									"entryPoint": 1421,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimAirdrop_1064": {
									"entryPoint": 1704,
									"id": 1064,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_220": {
									"entryPoint": 3254,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_285": {
									"entryPoint": 3571,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getVoters_1108": {
									"entryPoint": null,
									"id": 1108,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getVotingResult_1248": {
									"entryPoint": 1922,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasStake_949": {
									"entryPoint": 1067,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isOwner_482": {
									"entryPoint": 3300,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isTalax_462": {
									"entryPoint": 3343,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 3242,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@retractVote_1206": {
									"entryPoint": 947,
									"id": 1206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_619": {
									"entryPoint": 2653,
									"id": 619,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@stakingPenaltyRate_356": {
									"entryPoint": null,
									"id": 356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirdropSince_960": {
									"entryPoint": 2044,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVoting_1130": {
									"entryPoint": 1463,
									"id": 1130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopVoting_1260": {
									"entryPoint": 3044,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 3559,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalVoters_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_1168": {
									"entryPoint": 1546,
									"id": 1168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votedUsers_375": {
									"entryPoint": null,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voters_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_815": {
									"entryPoint": 2160,
									"id": 815,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 3732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$424_memory_ptr__to_t_struct$_StakingSummary_$424_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4745:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:660:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "187:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:3:2",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "195:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "187:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "230:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "241:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "223:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "275:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "286:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "271:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "271:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "303:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "311:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "299:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "299:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "293:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "293:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "264:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "264:54:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:44:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "357:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "365:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "353:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "353:17:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "347:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:24:2"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "331:12:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "391:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "402:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "387:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "415:12:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "409:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "409:19:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "380:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "449:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "460:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "445:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "445:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "475:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "489:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "471:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "471:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "465:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "465:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "438:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "516:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "527:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "512:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "543:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "539:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "539:23:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "533:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "533:30:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "505:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "505:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "584:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "595:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "611:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "625:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "607:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "607:21:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "601:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "601:28:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "573:57:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "677:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "691:3:2",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "667:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "667:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "639:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "717:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "728:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "744:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "758:3:2",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "740:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "740:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "734:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "706:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "795:3:2",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:19:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memberValue0",
																						"nodeType": "YulIdentifier",
																						"src": "811:12:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "825:3:2",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "807:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "807:22:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "801:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "801:29:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:58:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$424_memory_ptr__to_t_struct$_StakingSummary_$424_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "146:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "157:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "168:4:2",
														"type": ""
													}
												],
												"src": "14:823:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "891:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "901:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "923:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "910:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "901:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "993:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1002:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1005:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "995:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "995:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "995:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "952:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "963:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "978:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "983:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "974:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "974:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "987:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "970:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "970:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "959:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "959:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:50:2"
															},
															"nodeType": "YulIf",
															"src": "939:70:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "870:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "881:5:2",
														"type": ""
													}
												],
												"src": "842:173:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1136:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1138:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1138:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1138:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1111:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1120:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1107:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1107:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1103:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:32:2"
															},
															"nodeType": "YulIf",
															"src": "1100:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1161:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1171:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1171:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:2",
														"type": ""
													}
												],
												"src": "1020:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:151:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1338:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1405:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1398:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1391:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1391:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1373:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1373:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1434:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1445:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "1464:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1457:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1457:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1450:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1423:50:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1289:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1300:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1308:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1319:4:2",
														"type": ""
													}
												],
												"src": "1211:268:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1585:102:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1595:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1618:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1595:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1637:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1668:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1673:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1664:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1664:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1677:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1660:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1660:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1648:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1630:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1630:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1630:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1554:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1565:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1576:4:2",
														"type": ""
													}
												],
												"src": "1484:203:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1793:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1803:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1803:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1838:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1762:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1773:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1784:4:2",
														"type": ""
													}
												],
												"src": "1692:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1969:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1979:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1991:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1987:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1979:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2021:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2046:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2039:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2039:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2032:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2014:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1949:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1960:4:2",
														"type": ""
													}
												],
												"src": "1874:187:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2136:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2182:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2191:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2194:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2184:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2184:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2184:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2166:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2153:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2178:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:32:2"
															},
															"nodeType": "YulIf",
															"src": "2146:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2230:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2217:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2102:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2113:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2125:6:2",
														"type": ""
													}
												],
												"src": "2066:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:119:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2390:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2402:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2390:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2432:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2470:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2481:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2466:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2486:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2459:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2459:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2341:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2352:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2360:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2371:4:2",
														"type": ""
													}
												],
												"src": "2251:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2625:270:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2672:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2674:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2674:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2674:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2646:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2655:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2638:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:33:2"
															},
															"nodeType": "YulIf",
															"src": "2635:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2697:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2726:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2707:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2745:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2755:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2796:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2823:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2834:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2819:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2806:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2847:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2874:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2885:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2870:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2870:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2857:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:32:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2847:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2567:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2578:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2590:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2598:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2606:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2614:6:2",
														"type": ""
													}
												],
												"src": "2504:391:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2932:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2949:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2956:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2961:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2942:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2989:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3013:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3016:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3006:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2900:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3081:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3103:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3105:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3105:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3105:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3097:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3100:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3094:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:8:2"
															},
															"nodeType": "YulIf",
															"src": "3091:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3134:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3146:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3149:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3142:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3134:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3063:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3066:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3072:4:2",
														"type": ""
													}
												],
												"src": "3032:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3237:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3239:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3239:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3239:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3226:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3233:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3229:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3223:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:13:2"
															},
															"nodeType": "YulIf",
															"src": "3220:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3268:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3279:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3282:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3275:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3268:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3193:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3196:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3202:3:2",
														"type": ""
													}
												],
												"src": "3162:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3351:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3356:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3384:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3408:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3295:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:171:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3504:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3525:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3532:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3537:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3528:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3528:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3518:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3518:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3518:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3569:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3572:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3562:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3562:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3562:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3597:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3600:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3590:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3590:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3590:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3493:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:9:2"
															},
															"nodeType": "YulIf",
															"src": "3483:132:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3624:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3633:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3636:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3624:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3458:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3461:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3467:1:2",
														"type": ""
													}
												],
												"src": "3427:217:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3806:162:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3816:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3828:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3839:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3824:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3816:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3858:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3869:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3851:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3851:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3907:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3885:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3939:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3950:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3935:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3935:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3955:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3928:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3928:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3759:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3770:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3778:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3786:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3797:4:2",
														"type": ""
													}
												],
												"src": "3649:319:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4025:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4084:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4086:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4086:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4086:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4056:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4049:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4049:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4042:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4042:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4064:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4075:1:2",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4071:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4071:6:2"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4079:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4067:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4067:14:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4061:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4061:21:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4038:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:45:2"
															},
															"nodeType": "YulIf",
															"src": "4035:71:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4115:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4130:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4133:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4115:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4004:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4007:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4013:7:2",
														"type": ""
													}
												],
												"src": "3973:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4267:476:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4277:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4287:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4281:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4305:9:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4316:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4298:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4328:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4348:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4342:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4332:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4375:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4386:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4371:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4371:18:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4391:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4364:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4364:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4407:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4416:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4411:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4476:90:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "4505:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4516:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4501:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4501:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4520:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4497:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4497:26:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "4539:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4547:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4535:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4535:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4551:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4531:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4531:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4525:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4525:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4490:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4490:66:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4490:66:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4437:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4440:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4434:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4448:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4450:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4459:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4462:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4455:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4455:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4450:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4430:3:2",
																"statements": []
															},
															"src": "4426:140:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4600:66:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "4629:9:2"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "4640:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4625:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4625:22:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4649:2:2",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4621:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4621:31:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4654:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4614:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4614:42:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4614:42:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4584:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4578:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:13:2"
															},
															"nodeType": "YulIf",
															"src": "4575:91:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4675:62:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4710:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4718:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4706:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4706:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4727:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4723:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4723:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4702:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4702:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4687:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4734:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:54:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4675:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4236:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4247:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4258:4:2",
														"type": ""
													}
												],
												"src": "4146:597:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_struct$_StakingSummary_$424_memory_ptr__to_t_struct$_StakingSummary_$424_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        mstore(add(headStart, 0x40), mload(memberValue0))\n        mstore(add(headStart, 96), mload(add(memberValue0, 0x20)))\n        mstore(add(headStart, 128), mload(add(memberValue0, 0x40)))\n        mstore(add(headStart, 160), mload(add(memberValue0, 96)))\n        mstore(add(headStart, 192), mload(add(memberValue0, 128)))\n        mstore(add(headStart, 224), mload(add(memberValue0, 160)))\n        mstore(add(headStart, 256), mload(add(memberValue0, 192)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c80638891cf0d116100c3578063c23a5cea1161007c578063c23a5cea1461034c578063cb79c2e114610374578063cbb3e1521461037d578063d5dbdf1b14610385578063f93d4f8a14610398578063fab2f86b146103ab57600080fd5b80638891cf0d146102d15780638c63f97f146102da578063a143a5f2146102ed578063a3ec138d1461030d578063b2bdfa7b14610330578063b87da76d1461034357600080fd5b80635f348b4e116101155780635f348b4e146102545780635f5300ff1461027f578063632a9a521461029657806365f8c6c51461029e578063671d2b75146102b157806371e3db87146102c957600080fd5b8063070c8b741461015257806310486b6a1461015c5780631d77b00b146101dc5780631ec6b60a146101ef5780632d15cc04146101f7575b600080fd5b61015a6103b3565b005b61016461042b565b6040516101d3919060006101208201905082518252602083015160208301526040830151805160408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e084015260c08101516101008401525092915050565b60405180910390f35b61015a6101ea366004610eab565b61058d565b61015a6105b7565b61023d610205366004610eab565b6001600160a01b031660009081526006602090815260408083208054600454855260019091019092529091205460ff91821692911690565b6040805192151583529015156020830152016101d3565b600854610267906001600160a01b031681565b6040516001600160a01b0390911681526020016101d3565b61028860055481565b6040519081526020016101d3565b61015a61060a565b6102886102ac366004610eab565b6106a8565b6102b9610782565b60405190151581526020016101d3565b61015a6107fc565b61028860015481565b61015a6102e8366004610ec6565b61080a565b6102886102fb366004610ec6565b60076020526000908152604090205481565b6102b961031b366004610eab565b60066020526000908152604090205460ff1681565b600954610267906001600160a01b031681565b61028860025481565b61035f61035a366004610eab565b610870565b604080519283526020830191909152016101d3565b61028860005481565b6102886109cb565b61015a610393366004610ec6565b6109fe565b61015a6103a6366004610edf565b610a5d565b61015a610be4565b6103bb610c00565b6103c3610c25565b336000908152600660209081526040808320600454845260010190915290205460ff16610402576040516245ba1160e91b815260040160405180910390fd5b6004546000908152600760205260408120805460019290610424908490610f2e565b9091555050565b610433610e36565b336000908152600a6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c08301526104af5760405163b018f08760e01b815260040160405180910390fd5b60408051606081018252600080825260208201819052918101839052906104d583610c55565b9050428260400151606001511115610521576104fe6104f682600054610caa565b6103e8610cb6565b6105116104f68560000151600054610caa565b61051b9190610f45565b60208301525b6105296109cb565b61056d5760346105376109cb565b101561055b57600061054c8460000151610cc2565b604084015160a001525061057b565b6040820151600060a09091015261057b565b6040820151600060a0909101525b60408201516080015290518152919050565b610595610ce4565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6105bf610d0f565b60035460ff161515600114156105e8576040516336d2669760e11b815260040160405180910390fd5b6003805460ff1916600190811790915560048054600090610424908490610f45565b610612610c00565b61061a610c25565b336000908152600660209081526040808320600454845260019081019092529091205460ff161515141561066157604051630740e33b60e41b815260040160405180910390fd5b33600090815260066020908152604080832060048054855260019182018452828520805460ff19168317905554845260079092528220805491929091610424908490610f45565b60006106b2610d0f565b6001600160a01b0382166000908152600a6020908152604091829020825160e08101845281548082526001830154938201939093526002820154938101939093526003810154606084015260048101546080840152600581015460a08401526006015460c0830152156107745760346107296109cb565b1015610774576107376109cb565b156107555760405163376115b360e21b815260040160405180910390fd5b600060a08201524260c0820152805161076d90610cc2565b9392505050565b50600092915050565b919050565b600061078c610d0f565b610794610c00565b6001600554116107b7576040516317cb436f60e11b815260040160405180910390fd5b60006107d06107c96005546005610caa565b600a610cb6565b6004546000908152600760205260409020549091508110156107f457600191505090565b600091505090565b610804610d0f565b42600255565b610812610ce4565b601e8111156108345760405163f1a470d760e01b815260040160405180910390fd5b60008190556040518181527fcfa4f4cf1cd64d13a167a8e75605e0c0c9d6700e903d17c5dc11f593254a04a9906020015b60405180910390a150565b60008061087b610d0f565b6001600160a01b0383166000818152600a60208181526040808420815160e08101835281548152600182018054828601526002830180549483019490945260038301805460608401908152600485018054608086015260058601805460a087015260068701805460c08801529b8b52989097529388905590879055928690559185905591849055918390559190925551421015610978576001600560008282546109259190610f2e565b90915550506001600160a01b038416600090815260066020908152604080832060045484526001019091529020805460ff19169055805161096e9061096983610c55565b610d3a565b9250925050915091565b60016005600082825461098b9190610f2e565b90915550506001600160a01b038416600090815260066020908152604080832060045484526001019091529020805460ff19169055805161096e82610c55565b60006002546000146109f85762093a80600254426109e99190610f2e565b6109f39190610f73565b905090565b50600090565b610a06610ce4565b60c8811115610a2857604051630a552cf160e41b815260040160405180910390fd5b60018190556040518181527fcc672f1026b958c0cfbfdd89ebe8ddcbc127f16ec24da6c2c7a4de26a8b1857e90602001610865565b610a65610d0f565b60008311610a865760405163445a206b60e11b815260040160405180910390fd5b6001600160a01b0384166000908152600a602052604090205415610abd576040516304462d2760e01b815260040160405180910390fd5b600160056000828254610ad09190610f45565b90915550506001600160a01b038416600090815260066020908152604091829020805460ff19166001179055815160e081018352858152429181018290529182018390529060608101610b238386610f45565b815260006020808301829052604080840183905260609384018390526001600160a01b038a16808452600a8352928190208551815591850151600183015584015160028201559183015160038301556080830151600483015560a0830151600583015560c0909201516006909101557fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed8583610bbf8188610f45565b6040805193845260208401929092529082015260600160405180910390a25050505050565b610bec610d0f565b610bf4610c00565b6003805460ff19169055565b60035460ff16610c2357604051632874624560e21b815260040160405180910390fd5b565b3360009081526006602052604090205460ff16610c23576040516307959f7560e21b815260040160405180910390fd5b8051600090610c6657506000919050565b6a52b7d2dcc80cd2e4000000610c7f8360200151610d84565b60408401518451610c909190610f95565b610c9a9190610f95565b610ca49190610f73565b92915050565b600061076d8284610f95565b600061076d8284610f73565b60006301dfe2006103e860015484610cda9190610f95565b610c9a9190610f73565b6009546001600160a01b03163314610c23576040516315a678a960e11b815260040160405180910390fd5b6008546001600160a01b03163314610c23576040516315a678a960e11b815260040160405180910390fd5b60008083610d4d57506000905080610d7d565b610d6584610d606104f687600054610caa565b610de7565b610d7884610d606104f687600054610caa565b915091505b9250929050565b6000610ca4610d938342610f2e565b610da79069d3c21bcecceda1000000610f95565b6301e133806040518060400160405280601d81526020017f4572726f722063616e6e6f74206469766964652074696d657374616d70000000815250610df3565b600061076d8284610f2e565b60008183610e1d5760405162461bcd60e51b8152600401610e149190610fb4565b60405180910390fd5b50828481610e2d57610e2d610f5d565b04949350505050565b60405180606001604052806000815260200160008152602001610e8f6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b80356001600160a01b038116811461077d57600080fd5b600060208284031215610ebd57600080fd5b61076d82610e94565b600060208284031215610ed857600080fd5b5035919050565b60008060008060808587031215610ef557600080fd5b610efe85610e94565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f4057610f40610f18565b500390565b60008219821115610f5857610f58610f18565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610f9057634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610faf57610faf610f18565b500290565b600060208083528351808285015260005b81811015610fe157858101830151858201604001528201610fc5565b81811115610ff3576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220eea3f2e2f5b52f767ff396649f2176d184464c07ff6e7297ed1fa0f41935f8a364736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8891CF0D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC23A5CEA GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xCB79C2E1 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xCBB3E152 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xD5DBDF1B EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xF93D4F8A EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xFAB2F86B EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8891CF0D EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x8C63F97F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xA143A5F2 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xB87DA76D EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F348B4E GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x5F348B4E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5F5300FF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x632A9A52 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x65F8C6C5 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x671D2B75 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x71E3DB87 EQ PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70C8B74 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x10486B6A EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x1D77B00B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2D15CC04 EQ PUSH2 0x1F7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x3B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP3 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x60A JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x288 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x267 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x35F PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x15A PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x15A PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x3BB PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0xC25 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x45BA11 PUSH1 0xE9 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x424 SWAP1 DUP5 SWAP1 PUSH2 0xF2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x433 PUSH2 0xE36 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB018F087 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH2 0x4D5 DUP4 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x521 JUMPI PUSH2 0x4FE PUSH2 0x4F6 DUP3 PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x511 PUSH2 0x4F6 DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x51B SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST PUSH2 0x529 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x56D JUMPI PUSH1 0x34 PUSH2 0x537 PUSH2 0x9CB JUMP JUMPDEST LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 PUSH2 0x54C DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 ADD MSTORE POP PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x80 ADD MSTORE SWAP1 MLOAD DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x595 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5BF PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36D26697 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x424 SWAP1 DUP5 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x612 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x61A PUSH2 0xC25 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH4 0x740E33B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x424 SWAP1 DUP5 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xE0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE ISZERO PUSH2 0x774 JUMPI PUSH1 0x34 PUSH2 0x729 PUSH2 0x9CB JUMP JUMPDEST LT ISZERO PUSH2 0x774 JUMPI PUSH2 0x737 PUSH2 0x9CB JUMP JUMPDEST ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH4 0x376115B3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE DUP1 MLOAD PUSH2 0x76D SWAP1 PUSH2 0xCC2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78C PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x794 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD GT PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x17CB436F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D0 PUSH2 0x7C9 PUSH1 0x5 SLOAD PUSH1 0x5 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0xA PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x804 PUSH2 0xD0F JUMP JUMPDEST TIMESTAMP PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x812 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF1A470D7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x87B PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 DUP7 ADD MSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 DUP6 ADD DUP1 SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP8 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MSTORE SWAP12 DUP12 MSTORE SWAP9 SWAP1 SWAP8 MSTORE SWAP4 DUP9 SWAP1 SSTORE SWAP1 DUP8 SWAP1 SSTORE SWAP3 DUP7 SWAP1 SSTORE SWAP2 DUP6 SWAP1 SSTORE SWAP2 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE MLOAD TIMESTAMP LT ISZERO PUSH2 0x978 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0x96E SWAP1 PUSH2 0x969 DUP4 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x98B SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SLOAD DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH2 0x96E DUP3 PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x0 EQ PUSH2 0x9F8 JUMPI PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xA06 PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA552CF1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xCC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E SWAP1 PUSH1 0x20 ADD PUSH2 0x865 JUMP JUMPDEST PUSH2 0xA65 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x445A206B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4462D27 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP6 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0xB23 DUP4 DUP7 PUSH2 0xF45 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP1 DUP5 MSTORE PUSH1 0xA DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED DUP6 DUP4 PUSH2 0xBBF DUP2 DUP9 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBEC PUSH2 0xD0F JUMP JUMPDEST PUSH2 0xBF4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x28746245 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7959F75 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xC66 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xC7F DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 DUP5 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 DUP5 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1DFE200 PUSH2 0x3E8 PUSH1 0x1 SLOAD DUP5 PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x15A678A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0xD4D JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0xD65 DUP5 PUSH2 0xD60 PUSH2 0x4F6 DUP8 PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xD78 DUP5 PUSH2 0xD60 PUSH2 0x4F6 DUP8 PUSH1 0x0 SLOAD PUSH2 0xCAA JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA4 PUSH2 0xD93 DUP4 TIMESTAMP PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xDA7 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0xF95 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4572726F722063616E6E6F74206469766964652074696D657374616D70000000 DUP2 MSTORE POP PUSH2 0xDF3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 DUP5 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE14 SWAP2 SWAP1 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 DUP2 PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xF5D JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8F PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76D DUP3 PUSH2 0xE94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFE DUP6 PUSH2 0xE94 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF40 JUMPI PUSH2 0xF40 PUSH2 0xF18 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF58 PUSH2 0xF18 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFAF JUMPI PUSH2 0xFAF PUSH2 0xF18 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xFC5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE LOG3 CALLCODE 0xE2 CREATE2 0xB5 0x2F PUSH23 0x7FF396649F2176D184464C07FF6E7297ED1FA0F41935F8 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "817:12488:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12308:399;;;:::i;:::-;;8558:1232;;;:::i;:::-;;;;;;168:4:2;210:3;199:9;195:19;187:27;;247:6;241:13;230:9;223:32;311:4;303:6;299:17;293:24;286:4;275:9;271:20;264:54;365:4;357:6;353:17;347:24;415:12;409:19;402:4;391:9;387:20;380:49;489:4;475:12;471:23;465:30;460:2;449:9;445:18;438:58;557:4;543:12;539:23;533:30;527:3;516:9;512:19;505:59;625:2;611:12;607:21;601:28;595:3;584:9;580:19;573:57;691:3;677:12;673:22;667:29;661:3;650:9;646:19;639:58;758:3;744:12;740:22;734:29;728:3;717:9;713:19;706:58;825:3;811:12;807:22;801:29;795:3;784:9;780:19;773:58;;14:823;;;;;8558:1232:1;;;;;;;;4327:93;;;;;;:::i;:::-;;:::i;11636:270::-;;;:::i;11428:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;11514:12:1;11484:4;11514:12;;;:6;:12;;;;;;;;:24;;11559:9;;11540:29;;11514:24;11540:18;;;:29;;;;;;;11514:24;;;;;11540:29;;;11428:149;;;;;1398:14:2;;1391:22;1373:41;;1457:14;;1450:22;1445:2;1430:18;;1423:50;1346:18;11428:149:1;1211:268:2;1429:21:1;;;;;-1:-1:-1;;;;;1429:21:1;;;;;;-1:-1:-1;;;;;1648:32:2;;;1630:51;;1618:2;1603:18;1429:21:1;1484:203:2;1300:26:1;;;;;;;;;1838:25:2;;;1826:2;1811:18;1300:26:1;1692:177:2;11912:390:1;;;:::i;10428:678::-;;;;;;:::i;:::-;;:::i;12713:488::-;;;:::i;:::-;;;2039:14:2;;2032:22;2014:41;;2002:2;1987:18;12713:488:1;1874:187:2;9902:95:1;;;:::i;1169:26::-;;;;;;5798:306;;;;;;:::i;:::-;;:::i;1377:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1332:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1456:21;;;;;-1:-1:-1;;;;;1456:21:1;;;1201:27;;;;;;7775:777;;;;;;:::i;:::-;;:::i;:::-;;;;2425:25:2;;;2481:2;2466:18;;2459:34;;;;2398:18;7775:777:1;2251:248:2;1130:33:1;;;;;;11112:204;;;:::i;10003:234::-;;;;;;:::i;:::-;;:::i;4631:1161::-;;;;;;:::i;:::-;;:::i;13207:96::-;;;:::i;12308:399::-;4177:20;:18;:20::i;:::-;3895:10:::1;:8;:10::i;:::-;12518::::2;12511:18;::::0;;;:6:::2;:18;::::0;;;;;;;12536:9:::2;::::0;12511:35;;:24:::2;;:35:::0;;;;;;::::2;;12507:103;;12578:21;;-1:-1:-1::0;;;12578:21:1::2;;;;;;;;;;;12507:103;12645:9;::::0;12620:18:::2;:35:::0;;;12674:10:::2;12620:18;12674:21:::0;12620:18;12674:21;;:26;;12620:24:::2;::::0;:18;12674:26:::2;::::0;12620:24;;12674:26:::2;:::i;:::-;::::0;;;-1:-1:-1;;12308:399:1:o;8558:1232::-;8601:21;;:::i;:::-;8673:10;8634:23;8660:24;;;:12;:24;;;;;;;;;8634:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8755:85;;8804:25;;-1:-1:-1;;;8804:25:1;;;;;;;;;;;8755:85;8881:32;;;;;;;;8849:29;8881:32;;;;;;;;;;;;;;;;8941:33;8902:10;8941:21;:33::i;:::-;8924:50;;9017:15;8989:7;:13;;;:25;;;:43;8985:316;;;9230:60;9243:40;9256:6;9264:18;;9243:12;:40::i;:::-;9285:4;9230:12;:60::i;:::-;9082:129;9116:51;9129:10;:17;;;9148:18;;9116:12;:51::i;9082:129::-;:208;;;;:::i;:::-;9048:15;;;:242;8985:316;9315:13;:11;:13::i;:::-;9311:355;;9369:2;9353:13;:11;:13::i;:::-;:18;9349:242;;;9391:15;9409:36;9427:10;:17;;;9409;:36::i;:::-;9463:13;;;;:30;;:40;-1:-1:-1;9311:355:1;;9349:242;9542:13;;;;9575:1;9542:30;;;;:34;9311:355;;;9621:13;;;;9654:1;9621:30;;;;:34;9311:355;9676:13;;;;:23;;:32;9741:17;;9718:40;;9676:7;8558:1232;-1:-1:-1;8558:1232:1:o;4327:93::-;3596:9;:7;:9::i;:::-;4399:6:::1;:14:::0;;-1:-1:-1;;;;;;4399:14:1::1;-1:-1:-1::0;;;;;4399:14:1;;;::::1;::::0;;;::::1;::::0;;4327:93::o;11636:270::-;3334:9;:7;:9::i;:::-;11765:13:::1;::::0;::::1;;:21;;:13:::0;:21:::1;11761:84;;;11809:25;;-1:-1:-1::0;;;11809:25:1::1;;;;;;;;;;;11761:84;11855:13;:20:::0;;-1:-1:-1;;11855:20:1::1;11871:4;11855:20:::0;;::::1;::::0;;;11885:9:::1;:14:::0;;11855:13:::1;::::0;11885:14:::1;::::0;11871:4;;11885:14:::1;:::i;11912:390::-:0;4177:20;:18;:20::i;:::-;3895:10:::1;:8;:10::i;:::-;12115::::2;12108:18;::::0;;;:6:::2;:18;::::0;;;;;;;12133:9:::2;::::0;12108:35;;:24:::2;::::0;;::::2;:35:::0;;;;;;;::::2;;:43;;;12104:103;;;12174:22;;-1:-1:-1::0;;;12174:22:1::2;;;;;;;;;;;12104:103;12224:10;12217:18;::::0;;;:6:::2;:18;::::0;;;;;;;12242:9:::2;::::0;;12217:35;;12255:4:::2;12217:24:::0;;::::2;:35:::0;;;;;:42;;-1:-1:-1;;12217:42:1::2;::::0;::::2;::::0;;12280:9;12269:21;;:10:::2;:21:::0;;;;;:26;;12255:4;;12269:21;;:26:::2;::::0;12255:4;;12269:26:::2;:::i;10428:678::-:0;10529:7;3334:9;:7;:9::i;:::-;-1:-1:-1;;;;;10619:18:1;::::1;10597:19;10619:18:::0;;;:12:::1;:18;::::0;;;;;;;;10597:40;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;;::::0;;;;;10652:17;10648:452:::1;;10705:2;10689:13;:11;:13::i;:::-;:18;10685:366;;;10731:13;:11;:13::i;:::-;:18:::0;10727:101:::1;;10780:29;;-1:-1:-1::0;;;10780:29:1::1;;;;;;;;;;;10727:101;10872:1;10846:23;::::0;::::1;:27:::0;10916:15:::1;10891:22;::::0;::::1;:40:::0;10975:13;;10957:32:::1;::::0;:17:::1;:32::i;:::-;10950:39:::0;10428:678;-1:-1:-1;;;10428:678:1:o;10685:366::-:1;-1:-1:-1::0;11035:1:1::1;::::0;10428:678;-1:-1:-1;;10428:678:1:o;3353:1::-:1;10428:678:::0;;;:::o;12713:488::-;12830:4;3334:9;:7;:9::i;:::-;4177:20:::1;:18;:20::i;:::-;12927:1:::2;12912:11;;:16;12908:79;;12951:25;;-1:-1:-1::0;;;12951:25:1::2;;;;;;;;;;;12908:79;12996:19;13018:46;13031:28;13044:11;;13057:1;13031:12;:28::i;:::-;13061:2;13018:12;:46::i;:::-;13090:9;::::0;13079:21:::2;::::0;;;:10:::2;:21;::::0;;;;;12996:68;;-1:-1:-1;13079:35:1;-1:-1:-1;13075:120:1::2;;;13137:4;13130:11;;;12713:488:::0;:::o;13075:120::-:2;13179:5;13172:12;;;12713:488:::0;:::o;9902:95::-;3334:9;:7;:9::i;:::-;9975:15:::1;9960:12;:30:::0;9902:95::o;5798:306::-;3596:9;:7;:9::i;:::-;5956:2:::1;5947:6;:11;5943:81;;;5981:32;;-1:-1:-1::0;;;5981:32:1::1;;;;;;;;;;;5943:81;6033:18;:27:::0;;;6075:22:::1;::::0;1838:25:2;;;6075:22:1::1;::::0;1826:2:2;1811:18;6075:22:1::1;;;;;;;;5798:306:::0;:::o;7775:777::-;7864:7;7873;3334:9;:7;:9::i;:::-;-1:-1:-1;;;;;8023:18:1;::::1;7997:23;8023:18:::0;;;:12:::1;:18;::::0;;;;;;;7997:44;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;8059:18;;;;;;;8052:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;8092:22;8117:15:::1;-1:-1:-1::0;8088:314:1::1;;;8163:1;8148:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8185:12:1;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;8204:9:::1;::::0;8185:29;;:18:::1;;:29:::0;;;;;8178:36;;-1:-1:-1;;8178:36:1::1;::::0;;8301:17;;8251:140:::1;::::0;8340:33:::1;8301:10:::0;8340:21:::1;:33::i;:::-;8251:28;:140::i;:::-;8228:163;;;;;7775:777:::0;;;:::o;8088:314::-:1;8427:1;8412:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8445:12:1;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;8464:9:::1;::::0;8445:29;;:18:::1;;:29:::0;;;;;8438:36;;-1:-1:-1;;8438:36:1::1;::::0;;8492:17;;8511:33:::1;8492:10:::0;8511:21:::1;:33::i;11112:204::-:0;11156:7;11179:12;;11195:1;11179:17;11175:135;;11254:6;11238:12;;11220:15;:30;;;;:::i;:::-;11219:41;;;;:::i;:::-;11212:48;;11112:204;:::o;11175:135::-;-1:-1:-1;11298:1:1;;11112:204::o;10003:234::-;3596:9;:7;:9::i;:::-;10094:3:::1;10085:6;:12;10081:83;;;10120:33;;-1:-1:-1::0;;;10120:33:1::1;;;;;;;;;;;10081:83;10173:11;:20:::0;;;10208:22:::1;::::0;1838:25:2;;;10208:22:1::1;::::0;1826:2:2;1811:18;10208:22:1::1;1692:177:2::0;4631:1161:1;3334:9;:7;:9::i;:::-;4908:1:::1;4898:6;:11;4894:78;;4932:29;;-1:-1:-1::0;;;4932:29:1::1;;;;;;;;;;;4894:78;-1:-1:-1::0;;;;;5057:18:1;::::1;;::::0;;;:12:::1;:18;::::0;;;;:25;:30;5053:91:::1;;5110:23;;-1:-1:-1::0;;;5110:23:1::1;;;;;;;;;;;5053:91;5169:1;5154:11;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;5180:12:1;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;;:31;;-1:-1:-1;;5180:31:1::1;5207:4;5180:31;::::0;;5494:166;;::::1;::::0;::::1;::::0;;;;;5329:15:::1;5494:166:::0;;::::1;::::0;;;;;;;;;5329:15;5494:166;;;5581:23:::1;5329:15:::0;5581:11;:23:::1;:::i;:::-;5494:166:::0;;5619:1:::1;5494:166;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5473:18:1;::::1;::::0;;;:12:::1;:18:::0;;;;;;:187;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5727:58:::1;5740:6:::0;5748:9;5760:23:::1;5748:9:::0;5760:11;:23:::1;:::i;:::-;5727:58;::::0;;3851:25:2;;;3907:2;3892:18;;3885:34;;;;3935:18;;;3928:34;3839:2;3824:18;5727:58:1::1;;;;;;;4774:1018;4631:1161:::0;;;;:::o;13207:96::-;3334:9;:7;:9::i;:::-;4177:20:::1;:18;:20::i;:::-;13275:13:::2;:21:::0;;-1:-1:-1;;13275:21:1::2;::::0;;13207:96::o;3929:204::-;4050:13;;;;4045:82;;4086:30;;-1:-1:-1;;;4086:30:1;;;;;;;;;;;4045:82;3929:204::o;3629:231::-;3767:10;3760:18;;;;:6;:18;;;;;:30;;;3756:98;;3822:21;;-1:-1:-1;;;3822:21:1;;;;;;;;;;;6465:437;6595:17;;6568:7;;6591:61;;-1:-1:-1;6640:1:1;;6465:437;-1:-1:-1;6465:437:1:o;6591:61::-;6891:4;6844:43;6870:10;:16;;;6844:25;:43::i;:::-;6805:20;;;;6769:17;;:56;;6805:20;6769:56;:::i;:::-;:118;;;;:::i;:::-;6768:127;;;;:::i;:::-;6749:146;6465:437;-1:-1:-1;;6465:437:1:o;3451:96:0:-;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;10243:179:1:-;10338:7;10407:8;10399:4;10384:11;;10370;:25;;;;:::i;:::-;10369:34;;;;:::i;3367:192::-;3488:6;;-1:-1:-1;;;;;3488:6:1;3474:10;:20;3470:83;;3517:25;;-1:-1:-1;;;3517:25:1;;;;;;;;;;;3105:192;3226:6;;-1:-1:-1;;;;;3226:6:1;3212:10;:20;3208:83;;3255:25;;-1:-1:-1;;;3255:25:1;;;;;;;;;;;6908:521;7025:7;;7061:11;7057:55;;-1:-1:-1;7096:1:1;;-1:-1:-1;7096:1:1;7088:13;;7057:55;7142:128;7172:6;7196:60;7209:40;7222:6;7230:18;;7209:12;:40::i;7196:60::-;7142:12;:128::i;:::-;7284;7314:6;7338:60;7351:40;7364:6;7372:18;;7351:12;:40::i;7284:128::-;7121:301;;;;6908:521;;;;;;:::o;6110:349::-;6207:7;6301:151;6332:23;6350:5;6332:15;:23;:::i;:::-;6331:32;;6359:4;6331:32;:::i;:::-;6381:8;6301:151;;;;;;;;;;;;;;;;;:12;:151::i;3108:96:0:-;3166:7;3192:5;3196:1;3192;:5;:::i;5660:230::-;5776:7;5834:12;5827:5;5819:28;;;;-1:-1:-1;;;5819:28:0;;;;;;;;:::i;:::-;;;;;;;;;;5872:1;5868;:5;;;;;:::i;:::-;;;5660:230;-1:-1:-1;;;;5660:230:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;842:173:2:-;910:20;;-1:-1:-1;;;;;959:31:2;;949:42;;939:70;;1005:1;1002;995:12;1020:186;1079:6;1132:2;1120:9;1111:7;1107:23;1103:32;1100:52;;;1148:1;1145;1138:12;1100:52;1171:29;1190:9;1171:29;:::i;2066:180::-;2125:6;2178:2;2166:9;2157:7;2153:23;2149:32;2146:52;;;2194:1;2191;2184:12;2146:52;-1:-1:-1;2217:23:2;;2066:180;-1:-1:-1;2066:180:2:o;2504:391::-;2590:6;2598;2606;2614;2667:3;2655:9;2646:7;2642:23;2638:33;2635:53;;;2684:1;2681;2674:12;2635:53;2707:29;2726:9;2707:29;:::i;:::-;2697:39;2783:2;2768:18;;2755:32;;-1:-1:-1;2834:2:2;2819:18;;2806:32;;2885:2;2870:18;2857:32;;-1:-1:-1;2504:391:2;-1:-1:-1;;;2504:391:2:o;2900:127::-;2961:10;2956:3;2952:20;2949:1;2942:31;2992:4;2989:1;2982:15;3016:4;3013:1;3006:15;3032:125;3072:4;3100:1;3097;3094:8;3091:34;;;3105:18;;:::i;:::-;-1:-1:-1;3142:9:2;;3032:125::o;3162:128::-;3202:3;3233:1;3229:6;3226:1;3223:13;3220:39;;;3239:18;;:::i;:::-;-1:-1:-1;3275:9:2;;3162:128::o;3295:127::-;3356:10;3351:3;3347:20;3344:1;3337:31;3387:4;3384:1;3377:15;3411:4;3408:1;3401:15;3427:217;3467:1;3493;3483:132;;3537:10;3532:3;3528:20;3525:1;3518:31;3572:4;3569:1;3562:15;3600:4;3597:1;3590:15;3483:132;-1:-1:-1;3629:9:2;;3427:217::o;3973:168::-;4013:7;4079:1;4075;4071:6;4067:14;4064:1;4061:21;4056:1;4049:9;4042:17;4038:45;4035:71;;;4086:18;;:::i;:::-;-1:-1:-1;4126:9:2;;3973:168::o;4146:597::-;4258:4;4287:2;4316;4305:9;4298:21;4348:6;4342:13;4391:6;4386:2;4375:9;4371:18;4364:34;4416:1;4426:140;4440:6;4437:1;4434:13;4426:140;;;4535:14;;;4531:23;;4525:30;4501:17;;;4520:2;4497:26;4490:66;4455:10;;4426:140;;;4584:6;4581:1;4578:13;4575:91;;;4654:1;4649:2;4640:6;4629:9;4625:22;4621:31;4614:42;4575:91;-1:-1:-1;4727:2:2;4706:15;-1:-1:-1;;4702:29:2;4687:45;;;;4734:2;4683:54;;4146:597;-1:-1:-1;;;4146:597:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "831800",
								"executionCost": "93553",
								"totalCost": "925353"
							},
							"external": {
								"_owner()": "2448",
								"_talax()": "2360",
								"airdropRate()": "2318",
								"airdropSince()": "2428",
								"airdropWeek()": "4635",
								"changeAirdropPercentage(uint256)": "25679",
								"changePenaltyFee(uint256)": "25625",
								"changeTalaxAddress(address)": "26803",
								"claimAirdrop(address)": "infinite",
								"getVoters(address)": "6990",
								"getVotingResult()": "infinite",
								"hasStake()": "infinite",
								"retractVote()": "infinite",
								"stake(address,uint256,uint256,uint256)": "infinite",
								"stakingPenaltyRate()": "2339",
								"startAirdropSince()": "24546",
								"startVoting()": "53064",
								"stopVoting()": "infinite",
								"totalVoters()": "2340",
								"vote()": "infinite",
								"votedUsers(uint256)": "2505",
								"voters(address)": "2620",
								"withdrawStake(address)": "infinite"
							},
							"internal": {
								"_calculateAirdrop(uint256)": "infinite",
								"_calculateStakeReward(struct Stakable.Stake memory)": "infinite",
								"_calculateStakingDuration(uint256)": "infinite",
								"_calculateStakingWithPenalty(uint256,uint256)": "infinite",
								"_checkVotingStatus()": "infinite",
								"_isVoter()": "infinite",
								"isOwner()": "infinite",
								"isTalax()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 13305,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1484,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1591,
									"end": 1593,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 1570,
									"end": 1588,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1570,
									"end": 1593,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1617,
									"end": 1619,
									"name": "PUSH",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1603,
									"end": 1614,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1603,
									"end": 1619,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1635,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1648,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1648,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1664,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1677,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 13305,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eea3f2e2f5b52f767ff396649f2176d184464c07ff6e7297ed1fa0f41935f8a364736f6c634300080b0033",
									".code": [
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "8891CF0D"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "C23A5CEA"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "C23A5CEA"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "CB79C2E1"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "CBB3E152"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "D5DBDF1B"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "F93D4F8A"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "FAB2F86B"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "8891CF0D"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "8C63F97F"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "A143A5F2"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "A3EC138D"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "B2BDFA7B"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "B87DA76D"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "5F348B4E"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "5F348B4E"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "5F5300FF"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "632A9A52"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "65F8C6C5"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "671D2B75"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "71E3DB87"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "70C8B74"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "10486B6A"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "1D77B00B"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "1EC6B60A"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "2D15CC04"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 817,
											"end": 13305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 168,
											"end": 172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 213,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 199,
											"end": 208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 195,
											"end": 214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 187,
											"end": 214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 247,
											"end": 253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 241,
											"end": 254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 230,
											"end": 239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 223,
											"end": 255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 311,
											"end": 315,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 299,
											"end": 316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 293,
											"end": 317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 290,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 275,
											"end": 284,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 271,
											"end": 291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 264,
											"end": 318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 353,
											"end": 370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 347,
											"end": 371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 415,
											"end": 427,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 409,
											"end": 428,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 400,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 387,
											"end": 407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 380,
											"end": 429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 487,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 471,
											"end": 494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 449,
											"end": 458,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 438,
											"end": 496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 557,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 533,
											"end": 563,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 527,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 516,
											"end": 525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 512,
											"end": 531,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 505,
											"end": 564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 625,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 611,
											"end": 623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 607,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 601,
											"end": 629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 595,
											"end": 598,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 580,
											"end": 599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 573,
											"end": 630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 677,
											"end": 689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 661,
											"end": 664,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 646,
											"end": 665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 639,
											"end": 697,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 758,
											"end": 761,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 744,
											"end": 756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 740,
											"end": 762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 734,
											"end": 763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 728,
											"end": 731,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 713,
											"end": 732,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 706,
											"end": 764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 825,
											"end": 828,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 811,
											"end": 823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 795,
											"end": 798,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 780,
											"end": 799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 773,
											"end": 831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 773,
											"end": 831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 837,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14,
											"end": 837,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 837,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11484,
											"end": 11488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11559,
											"end": 11568,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11540,
											"end": 11558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1412,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1412,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1471,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11428,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1211,
											"end": 1479,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1681,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1484,
											"end": 1687,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1692,
											"end": 1869,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1874,
											"end": 2061,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1422,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1371,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2251,
											"end": 2499,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3895,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12518,
											"end": 12528,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12535,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12511,
											"end": 12535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12511,
											"end": 12546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12507,
											"end": 12610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12507,
											"end": 12610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45BA11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12599,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12507,
											"end": 12610,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12507,
											"end": 12610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12645,
											"end": 12654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12645,
											"end": 12654,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12620,
											"end": 12655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12684,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12674,
											"end": 12695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12674,
											"end": 12695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12695,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12620,
											"end": 12644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12644,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12700,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12308,
											"end": 12707,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8601,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 8601,
											"end": 8622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8601,
											"end": 8622,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8601,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8673,
											"end": 8683,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8672,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B018F087"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8804,
											"end": 8829,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8755,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8902,
											"end": 8912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8941,
											"end": 8974,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8941,
											"end": 8974,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8941,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9017,
											"end": 9032,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 8996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9032,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 9301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8985,
											"end": 9301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 9243,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9256,
											"end": 9262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 9243,
											"end": 9283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9243,
											"end": 9283,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9243,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9285,
											"end": 9289,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 9230,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 9230,
											"end": 9290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9230,
											"end": 9290,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 9230,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 9116,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9129,
											"end": 9139,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 9116,
											"end": 9167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9082,
											"end": 9211,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 9082,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9082,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9048,
											"end": 9063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 9301,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8985,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9315,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9315,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9369,
											"end": 9371,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9353,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9371,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9349,
											"end": 9591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9409,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9427,
											"end": 9437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9409,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 9409,
											"end": 9445,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9409,
											"end": 9445,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9409,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9463,
											"end": 9476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9493,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9463,
											"end": 9493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9591,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9349,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9542,
											"end": 9555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9555,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9572,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9542,
											"end": 9572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9651,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9621,
											"end": 9651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 9311,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9699,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9676,
											"end": 9699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9741,
											"end": 9758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9741,
											"end": 9758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9676,
											"end": 9683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8558,
											"end": 9790,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4405,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4413,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4420,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11778,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11765,
											"end": 11778,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11778,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 11765,
											"end": 11778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11786,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11786,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11778,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11765,
											"end": 11786,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 11761,
											"end": 11845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36D26697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11834,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11845,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 11761,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11875,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11894,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11855,
											"end": 11868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 11885,
											"end": 11899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11912,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3895,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3895,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12115,
											"end": 12125,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12133,
											"end": 12142,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12132,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12108,
											"end": 12132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12108,
											"end": 12143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12151,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12207,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12104,
											"end": 12207,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "740E33B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12207,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12104,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12224,
											"end": 12234,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12223,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12235,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12217,
											"end": 12241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12289,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12279,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12295,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12269,
											"end": 12295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 12269,
											"end": 12295,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10529,
											"end": 10536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10631,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10637,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10648,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10648,
											"end": 11100,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10707,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10689,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 10707,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 11051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10685,
											"end": 11051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10731,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10731,
											"end": 10744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10731,
											"end": 10744,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10731,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10727,
											"end": 10828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "376115B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10828,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10727,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10846,
											"end": 10869,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10846,
											"end": 10869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 10873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10931,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10913,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10891,
											"end": 10913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 10931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 10988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 10988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10957,
											"end": 10989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10957,
											"end": 10989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 10989,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10957,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 10989,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10685,
											"end": 11051,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10685,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11035,
											"end": 11036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 11036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 11106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12830,
											"end": 12834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12912,
											"end": 12923,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 12912,
											"end": 12923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12928,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12908,
											"end": 12987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17CB436F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12908,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 13015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13018,
											"end": 13064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13031,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13044,
											"end": 13055,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13044,
											"end": 13055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13057,
											"end": 13058,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13031,
											"end": 13043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 13031,
											"end": 13059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13031,
											"end": 13059,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13031,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13063,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 13018,
											"end": 13030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 13018,
											"end": 13064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13018,
											"end": 13064,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 13018,
											"end": 13064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13090,
											"end": 13099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13090,
											"end": 13099,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 13064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 13064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13079,
											"end": 13114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 13075,
											"end": 13195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13075,
											"end": 13195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13130,
											"end": 13141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13130,
											"end": 13141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13075,
											"end": 13195,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13075,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13172,
											"end": 13184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 13201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9990,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9960,
											"end": 9990,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9902,
											"end": 9997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 5947,
											"end": 5953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5943,
											"end": 6024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1A470D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6013,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6024,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5943,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6060,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "PUSH",
											"source": 1,
											"value": "CFA4F4CF1CD64D13A167A8E75605E0C0C9D6700E903D17C5DC11F593254A04A9"
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6097,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 6104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7873,
											"end": 7880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8035,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8041,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8077,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8132,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8088,
											"end": 8402,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8088,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8164,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8148,
											"end": 8159,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8148,
											"end": 8159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8164,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8178,
											"end": 8214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8214,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8251,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8301,
											"end": 8311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8340,
											"end": 8373,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8340,
											"end": 8373,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8340,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8251,
											"end": 8391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8251,
											"end": 8391,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8251,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 8552,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8088,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8088,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8412,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8412,
											"end": 8423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8457,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8473,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8464,
											"end": 8473,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8474,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8474,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8438,
											"end": 8474,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8474,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8492,
											"end": 8509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8492,
											"end": 8509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8511,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8492,
											"end": 8502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8511,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 8511,
											"end": 8544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11191,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11179,
											"end": 11191,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11195,
											"end": 11196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11196,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11175,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 11175,
											"end": 11310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11254,
											"end": 11260,
											"name": "PUSH",
											"source": 1,
											"value": "93A80"
										},
										{
											"begin": 11238,
											"end": 11250,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11238,
											"end": 11250,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11235,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 11220,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 11219,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11175,
											"end": 11310,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 11175,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10003,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 10085,
											"end": 10091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10164,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10081,
											"end": 10164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A552CF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10164,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10081,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 10184,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10230,
											"name": "PUSH",
											"source": 1,
											"value": "CC672F1026B958C0CFBFDD89EBE8DDCBC127F16EC24DA6C2C7A4DE26A8B1857E"
										},
										{
											"begin": 10208,
											"end": 10230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1692,
											"end": 1869,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4909,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4894,
											"end": 4972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "445A206B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4961,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4972,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4894,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5069,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5075,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5053,
											"end": 5144,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4462D27"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5144,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5053,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5154,
											"end": 5165,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5154,
											"end": 5165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5170,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5211,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5344,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5329,
											"end": 5344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5581,
											"end": 5604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5604,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5581,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5485,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5491,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5660,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 5740,
											"end": 5746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5748,
											"end": 5757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5771,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5760,
											"end": 5783,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5783,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5760,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3919,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3962,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3839,
											"end": 3841,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5785,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 5792,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13288,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13207,
											"end": 13303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3929,
											"end": 4133,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3929,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4050,
											"end": 4063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4050,
											"end": 4063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4045,
											"end": 4127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28746245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4127,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4045,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 4133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3629,
											"end": 3860,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3629,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3790,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3760,
											"end": 3790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3756,
											"end": 3854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7959F75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6902,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6465,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6591,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 6844,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6870,
											"end": 6880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6844,
											"end": 6887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6844,
											"end": 6887,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6844,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6768,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6465,
											"end": 6902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10243,
											"end": 10422,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10243,
											"end": 10422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10415,
											"name": "PUSH",
											"source": 1,
											"value": "1DFE200"
										},
										{
											"begin": 10399,
											"end": 10403,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 10384,
											"end": 10395,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10384,
											"end": 10395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10370,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10369,
											"end": 10403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10369,
											"end": 10403,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3367,
											"end": 3559,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3367,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3470,
											"end": 3553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15A678A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3297,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3105,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3208,
											"end": 3291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15A678A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 7057,
											"end": 7112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7088,
											"end": 7101,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7112,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 7057,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7209,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7209,
											"end": 7249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7196,
											"end": 7256,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7196,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7142,
											"end": 7270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7270,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7142,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7351,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7364,
											"end": 7370,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7390,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7351,
											"end": 7391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7284,
											"end": 7412,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7284,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 7429,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6110,
											"end": 6459,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6110,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6350,
											"end": 6355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6347,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6389,
											"name": "PUSH",
											"source": 1,
											"value": "1E13380"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "PUSH",
											"source": 1,
											"value": "4572726F722063616E6E6F74206469766964652074696D657374616D70000000"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6301,
											"end": 6452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "118"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "270"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "270"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 842,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 910,
											"end": 930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 910,
											"end": 930,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 959,
											"end": 990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 949,
											"end": 991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 949,
											"end": 991,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 939,
											"end": 1009,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1007,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1206,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1020,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1103,
											"end": 1135,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 1100,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1190,
											"end": 1199,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 1171,
											"end": 1200,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2246,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2066,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2164,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2181,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2146,
											"end": 2198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2196,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2146,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2240,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2246,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2246,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2504,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2504,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2655,
											"end": 2664,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2653,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2665,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2671,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2688,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2635,
											"end": 2688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2688,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2635,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2707,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2736,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2836,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2838,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2838,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2895,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2895,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2900,
											"end": 3027,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2900,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2971,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2956,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2952,
											"end": 2972,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 2996,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2989,
											"end": 2990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 2997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3013,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3021,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3157,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3032,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3072,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3094,
											"end": 3102,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3091,
											"end": 3125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3157,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3162,
											"end": 3290,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3162,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3236,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3259,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3220,
											"end": 3259,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3290,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3295,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3295,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3356,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 3351,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3347,
											"end": 3367,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3391,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3644,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3427,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3483,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3483,
											"end": 3615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3537,
											"end": 3547,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 3532,
											"end": 3535,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3569,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3604,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3597,
											"end": 3598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3605,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3483,
											"end": 3615,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3483,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3644,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3973,
											"end": 4141,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3973,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4081,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4082,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4058,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4042,
											"end": 4059,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4038,
											"end": 4083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4126,
											"end": 4135,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4126,
											"end": 4135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 4141,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4146,
											"end": 4743,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4146,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4305,
											"end": 4314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4348,
											"end": 4354,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4342,
											"end": 4355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4384,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4440,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4549,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4531,
											"end": 4554,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4531,
											"end": 4554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4525,
											"end": 4555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4518,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4490,
											"end": 4556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 4426,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4591,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4575,
											"end": 4666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4575,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4575,
											"end": 4666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4629,
											"end": 4638,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4625,
											"end": 4647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4621,
											"end": 4652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4614,
											"end": 4656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4575,
											"end": 4666,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4575,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4729,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4706,
											"end": 4721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4702,
											"end": 4731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4687,
											"end": 4732,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4687,
											"end": 4732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4687,
											"end": 4732,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4687,
											"end": 4732,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4734,
											"end": 4736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4737,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4743,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"_talax()": "5f348b4e",
							"airdropRate()": "8891cf0d",
							"airdropSince()": "b87da76d",
							"airdropWeek()": "cbb3e152",
							"changeAirdropPercentage(uint256)": "d5dbdf1b",
							"changePenaltyFee(uint256)": "8c63f97f",
							"changeTalaxAddress(address)": "1d77b00b",
							"claimAirdrop(address)": "65f8c6c5",
							"getVoters(address)": "2d15cc04",
							"getVotingResult()": "671d2b75",
							"hasStake()": "10486b6a",
							"retractVote()": "070c8b74",
							"stake(address,uint256,uint256,uint256)": "f93d4f8a",
							"stakingPenaltyRate()": "cb79c2e1",
							"startAirdropSince()": "71e3db87",
							"startVoting()": "1ec6b60a",
							"stopVoting()": "fab2f86b",
							"totalVoters()": "5f5300ff",
							"vote()": "632a9a52",
							"votedUsers(uint256)": "a143a5f2",
							"voters(address)": "a3ec138d",
							"withdrawStake(address)": "c23a5cea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Airdrop__claimableOnceAWeek\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__notAVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__notAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Function__votingNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__airdropExceed20Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__cannotStakeNothing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__noStakingFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__penaltyExceed3Percent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__userIsStaker\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__alreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__notEnoughVoters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__notYetVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Voting__votingIsRunning\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PenaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_talax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropSince\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"changePenaltyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"talax\",\"type\":\"address\"}],\"name\":\"changeTalaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVoters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimableAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestClaimDrop\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakable.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Stakable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retractVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirdropSince\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"votingRight\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"Airdrop__claimableOnceAWeek()\":[{\"notice\":\"Error handling message for Airdrop functions\"}],\"Function__notAuthorized()\":[{\"notice\":\"Error handling message for Modifier\"}],\"Staking__cannotStakeNothing()\":[{\"notice\":\"Error handling message for Staking functions\"}],\"Voting__votingIsRunning()\":[{\"notice\":\"Error handling message for Voting functions\"}]},\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"stake(address,uint256,uint256,uint256)\":{\"notice\":\"_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID\"},\"withdrawStake(address)\":{\"notice\":\"withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/Stakable.sol\":{\"keccak256\":\"0xffda35ecad967c584eb63181385f68173dc3544326a3de376d342e671667d2c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5d6b8120ccff5cccd5689fd323fb4ef90524a774a4c3b7ed8051d44097640b74\",\"dweb:/ipfs/QmeQoJSvbbDbzswyeM7EQrZ9YQrAbVKpw31R2zyx6mmWUZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 356,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakingPenaltyRate",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 358,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 360,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "airdropSince",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 362,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingStatus",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 364,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_votingId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 366,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "totalVoters",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 371,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "voters",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Voter)354_storage)"
							},
							{
								"astId": 375,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "votedUsers",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 377,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_talax",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 379,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "_owner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 430,
								"contract": "contracts/Stakable.sol:Stakable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(Stake)416_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Stake)416_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)416_storage"
							},
							"t_mapping(t_address,t_struct(Voter)354_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Stakable.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)354_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)416_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Stake",
								"members": [
									{
										"astId": 403,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 405,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "since",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 407,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "rewardAPY",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 409,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "releaseTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 411,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimable",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 413,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "claimableAirdrop",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 415,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "latestClaimDrop",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(Voter)354_storage": {
								"encoding": "inplace",
								"label": "struct Stakable.Voter",
								"members": [
									{
										"astId": 349,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "votingRight",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 353,
										"contract": "contracts/Stakable.sol:Stakable",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_bool)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Airdrop__claimableOnceAWeek()": [
								{
									"notice": "Error handling message for Airdrop functions"
								}
							],
							"Function__notAuthorized()": [
								{
									"notice": "Error handling message for Modifier"
								}
							],
							"Staking__cannotStakeNothing()": [
								{
									"notice": "Error handling message for Staking functions"
								}
							],
							"Voting__votingIsRunning()": [
								{
									"notice": "Error handling message for Voting functions"
								}
							]
						},
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"stake(address,uint256,uint256,uint256)": {
								"notice": "_Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container StakeID"
							},
							"withdrawStake(address)": {
								"notice": "withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake Notice index of the stake is the users stake counter, starting at 0 for the first stake Will return the amount to MINT onto the account Will also _calculateStakeReward and reset timer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "475:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "702:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "712:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "736:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "775:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "767:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "778:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "823:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "809:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "653:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:0"
									},
									"scope": 311,
									"src": "626:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1064:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1102:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1106:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1098:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1109:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1140:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:0"
									},
									"scope": 311,
									"src": "988:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1401:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1665:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1677:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1707:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1742:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1738:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1754:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1785:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:0"
									},
									"scope": 311,
									"src": "1325:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2043:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2077:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2089:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2120:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:0"
									},
									"scope": 311,
									"src": "1967:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2392:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2426:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2438:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2483:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2487:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2469:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:0"
									},
									"scope": 311,
									"src": "2316:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2808:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2818:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2765:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:0"
									},
									"scope": 311,
									"src": "2741:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3175:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3185:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:0"
									},
									"scope": 311,
									"src": "3108:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3518:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3528:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3475:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:0"
									},
									"scope": 311,
									"src": "3451:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3903:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3913:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3849:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3860:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3894:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:0"
									},
									"scope": 311,
									"src": "3836:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4452:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4462:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:0"
									},
									"scope": 311,
									"src": "4385:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5070:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5120:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5147:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5005:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:0"
									},
									"scope": 311,
									"src": "4945:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5785:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5834:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5861:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5701:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5720:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5776:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:0"
									},
									"scope": 311,
									"src": "5660:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6661:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6703:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6710:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6737:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6558:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:0"
									},
									"scope": 311,
									"src": "6536:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "467:6301:0",
							"usedErrors": []
						}
					],
					"src": "92:6677:0"
				},
				"id": 0
			},
			"contracts/Stakable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakable.sol",
					"exportedSymbols": {
						"Airdrop__claimableOnceAWeek": [
							335
						],
						"Function__notAVoter": [
							319
						],
						"Function__notAuthorized": [
							317
						],
						"Function__votingNotAvailable": [
							321
						],
						"SafeMath": [
							311
						],
						"Stakable": [
							1261
						],
						"Staking__airdropExceed20Percent": [
							330
						],
						"Staking__cannotStakeNothing": [
							324
						],
						"Staking__noStakingFound": [
							332
						],
						"Staking__penaltyExceed3Percent": [
							328
						],
						"Staking__userIsStaker": [
							326
						],
						"Voting__alreadyVoted": [
							340
						],
						"Voting__notEnoughVoters": [
							344
						],
						"Voting__notYetVoted": [
							342
						],
						"Voting__votingIsRunning": [
							338
						]
					},
					"id": 1262,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 312,
							"src": "64:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "123:54:1",
								"text": " @notice Error handling message for Modifier"
							},
							"id": 317,
							"name": "Function__notAuthorized",
							"nameLocation": "184:23:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 316,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "207:2:1"
							},
							"src": "178:32:1"
						},
						{
							"id": 319,
							"name": "Function__notAVoter",
							"nameLocation": "217:19:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 318,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "236:2:1"
							},
							"src": "211:28:1"
						},
						{
							"id": 321,
							"name": "Function__votingNotAvailable",
							"nameLocation": "246:28:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 320,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "274:2:1"
							},
							"src": "240:37:1"
						},
						{
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "279:63:1",
								"text": " @notice Error handling message for Staking functions"
							},
							"id": 324,
							"name": "Staking__cannotStakeNothing",
							"nameLocation": "349:27:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 323,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "376:2:1"
							},
							"src": "343:36:1"
						},
						{
							"id": 326,
							"name": "Staking__userIsStaker",
							"nameLocation": "386:21:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 325,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "407:2:1"
							},
							"src": "380:30:1"
						},
						{
							"id": 328,
							"name": "Staking__penaltyExceed3Percent",
							"nameLocation": "417:30:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 327,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "447:2:1"
							},
							"src": "411:39:1"
						},
						{
							"id": 330,
							"name": "Staking__airdropExceed20Percent",
							"nameLocation": "457:31:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 329,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "488:2:1"
							},
							"src": "451:40:1"
						},
						{
							"id": 332,
							"name": "Staking__noStakingFound",
							"nameLocation": "498:23:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 331,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "521:2:1"
							},
							"src": "492:32:1"
						},
						{
							"documentation": {
								"id": 333,
								"nodeType": "StructuredDocumentation",
								"src": "526:63:1",
								"text": " @notice Error handling message for Airdrop functions"
							},
							"id": 335,
							"name": "Airdrop__claimableOnceAWeek",
							"nameLocation": "596:27:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 334,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "623:2:1"
							},
							"src": "590:36:1"
						},
						{
							"documentation": {
								"id": 336,
								"nodeType": "StructuredDocumentation",
								"src": "628:62:1",
								"text": " @notice Error handling message for Voting functions"
							},
							"id": 338,
							"name": "Voting__votingIsRunning",
							"nameLocation": "697:23:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 337,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "720:2:1"
							},
							"src": "691:32:1"
						},
						{
							"id": 340,
							"name": "Voting__alreadyVoted",
							"nameLocation": "730:20:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 339,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "750:2:1"
							},
							"src": "724:29:1"
						},
						{
							"id": 342,
							"name": "Voting__notYetVoted",
							"nameLocation": "760:19:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 341,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "779:2:1"
							},
							"src": "754:28:1"
						},
						{
							"id": 344,
							"name": "Voting__notEnoughVoters",
							"nameLocation": "789:23:1",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 343,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "812:2:1"
							},
							"src": "783:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1261,
							"linearizedBaseContracts": [
								1261
							],
							"name": "Stakable",
							"nameLocation": "826:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "847:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "841:27:1",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "860:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Stakable.Voter",
									"id": 354,
									"members": [
										{
											"constant": false,
											"id": 349,
											"mutability": "mutable",
											"name": "votingRight",
											"nameLocation": "1066:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 354,
											"src": "1061:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 348,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1061:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 353,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "1112:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 354,
											"src": "1087:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 352,
												"keyType": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1087:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1106:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "1045:5:1",
									"nodeType": "StructDefinition",
									"scope": 1261,
									"src": "1038:86:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb79c2e1",
									"id": 356,
									"mutability": "mutable",
									"name": "stakingPenaltyRate",
									"nameLocation": "1145:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1130:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 355,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1130:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8891cf0d",
									"id": 358,
									"mutability": "mutable",
									"name": "airdropRate",
									"nameLocation": "1184:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1169:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1169:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b87da76d",
									"id": 360,
									"mutability": "mutable",
									"name": "airdropSince",
									"nameLocation": "1216:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1201:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1201:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 362,
									"mutability": "mutable",
									"name": "_votingStatus",
									"nameLocation": "1249:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1235:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 361,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1235:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 364,
									"mutability": "mutable",
									"name": "_votingId",
									"nameLocation": "1285:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1268:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1268:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5f5300ff",
									"id": 366,
									"mutability": "mutable",
									"name": "totalVoters",
									"nameLocation": "1315:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1300:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1300:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 371,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "1365:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1332:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
										"typeString": "mapping(address => struct Stakable.Voter)"
									},
									"typeName": {
										"id": 370,
										"keyType": {
											"id": 367,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1340:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1332:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
											"typeString": "mapping(address => struct Stakable.Voter)"
										},
										"valueType": {
											"id": 369,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 368,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 354,
												"src": "1351:5:1"
											},
											"referencedDeclaration": 354,
											"src": "1351:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$354_storage_ptr",
												"typeString": "struct Stakable.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a143a5f2",
									"id": 375,
									"mutability": "mutable",
									"name": "votedUsers",
									"nameLocation": "1412:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1377:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 374,
										"keyType": {
											"id": 372,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f348b4e",
									"id": 377,
									"mutability": "mutable",
									"name": "_talax",
									"nameLocation": "1444:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1429:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 376,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1429:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 379,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1471:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "1456:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 378,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1456:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1498:186:1",
										"statements": [
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 382,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1570:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1591:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1570:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1570:23:1"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 386,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "1603:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3830",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1617:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_80_by_1",
															"typeString": "int_const 80"
														},
														"value": "80"
													},
													"src": "1603:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1603:16:1"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "1629:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 391,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1638:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1638:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1629:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "1629:19:1"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 395,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "1658:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 396,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1667:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1667:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1658:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1658:19:1"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:2:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:0:1"
									},
									"scope": 1261,
									"src": "1484:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.Stake",
									"id": 416,
									"members": [
										{
											"constant": false,
											"id": 403,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1948:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "1940:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 402,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1940:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 405,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "1972:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "1964:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 404,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1964:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 407,
											"mutability": "mutable",
											"name": "rewardAPY",
											"nameLocation": "1995:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "1987:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 406,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1987:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 409,
											"mutability": "mutable",
											"name": "releaseTime",
											"nameLocation": "2022:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "2014:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 408,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2014:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 411,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "2150:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "2142:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 410,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2142:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 413,
											"mutability": "mutable",
											"name": "claimableAirdrop",
											"nameLocation": "2177:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "2169:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2169:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "latestClaimDrop",
											"nameLocation": "2211:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "2203:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 414,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2203:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1924:5:1",
									"nodeType": "StructDefinition",
									"scope": 1261,
									"src": "1917:316:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakable.StakingSummary",
									"id": 424,
									"members": [
										{
											"constant": false,
											"id": 418,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "2410:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "2402:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 417,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2402:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 420,
											"mutability": "mutable",
											"name": "penalty",
											"nameLocation": "2440:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "2432:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 419,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2432:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 423,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2463:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "2457:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
												"typeString": "struct Stakable.Stake"
											},
											"typeName": {
												"id": 422,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 421,
													"name": "Stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 416,
													"src": "2457:5:1"
												},
												"referencedDeclaration": 416,
												"src": "2457:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
													"typeString": "struct Stakable.Stake"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "2377:14:1",
									"nodeType": "StructDefinition",
									"scope": 1261,
									"src": "2370:105:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2481:111:1",
										"text": " @notice\n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 430,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "2632:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "2597:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
										"typeString": "mapping(address => struct Stakable.Stake)"
									},
									"typeName": {
										"id": 429,
										"keyType": {
											"id": 426,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2605:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2597:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
											"typeString": "mapping(address => struct Stakable.Stake)"
										},
										"valueType": {
											"id": 428,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 427,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 416,
												"src": "2616:5:1"
											},
											"referencedDeclaration": 416,
											"src": "2616:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
												"typeString": "struct Stakable.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "2651:124:1",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 441,
									"name": "Staked",
									"nameLocation": "2786:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2818:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2802:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2840:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2832:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2864:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2856:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2891:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2883:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2883:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:116:1"
									},
									"src": "2780:129:1"
								},
								{
									"anonymous": false,
									"id": 445,
									"name": "PenaltyChanged",
									"nameLocation": "2921:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2944:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "2936:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2935:16:1"
									},
									"src": "2915:37:1"
								},
								{
									"anonymous": false,
									"id": 449,
									"name": "AirdropChanged",
									"nameLocation": "2963:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2986:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2978:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:16:1"
									},
									"src": "2957:37:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "3138:159:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 452,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3212:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3212:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 454,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "3226:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3212:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "3208:83:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "3234:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 456,
																	"name": "Function__notAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "3255:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3255:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "3248:32:1"
														}
													]
												}
											}
										]
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTalax",
									"nameLocation": "3114:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:0:1"
									},
									"scope": 1261,
									"src": "3105:192:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "3324:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "isTalax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3334:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3334:9:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3334:9:1"
											},
											{
												"id": 467,
												"nodeType": "PlaceholderStatement",
												"src": "3353:1:1"
											}
										]
									},
									"id": 469,
									"name": "onlyTalax",
									"nameLocation": "3312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3321:2:1"
									},
									"src": "3303:58:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "3400:159:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 472,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3474:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3474:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 474,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "3488:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3474:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "3470:83:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "3496:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 476,
																	"name": "Function__notAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "3517:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3517:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "3510:32:1"
														}
													]
												}
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "3376:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:2:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3400:0:1"
									},
									"scope": 1261,
									"src": "3367:192:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3586:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 484,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3596:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3596:9:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "3596:9:1"
											},
											{
												"id": 487,
												"nodeType": "PlaceholderStatement",
												"src": "3615:1:1"
											}
										]
									},
									"id": 489,
									"name": "onlyOwner",
									"nameLocation": "3574:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3583:2:1"
									},
									"src": "3565:58:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3663:197:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 492,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3760:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 495,
															"indexExpression": {
																"expression": {
																	"id": 493,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3767:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3767:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3760:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$354_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 349,
														"src": "3760:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3760:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "3756:98:1",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "3801:53:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 499,
																	"name": "Function__notAVoter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "3822:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "RevertStatement",
															"src": "3815:28:1"
														}
													]
												}
											}
										]
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isVoter",
									"nameLocation": "3638:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3646:2:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3663:0:1"
									},
									"scope": 1261,
									"src": "3629:231:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "3885:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_isVoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3895:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3895:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "3895:10:1"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "3915:1:1"
											}
										]
									},
									"id": 512,
									"name": "isVoter",
									"nameLocation": "3875:7:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3882:2:1"
									},
									"src": "3866:57:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3973:160:1",
										"statements": [
											{
												"condition": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4049:14:1",
													"subExpression": {
														"id": 515,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "4050:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "4045:82:1",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "4065:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 517,
																	"name": "Function__votingNotAvailable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4086:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4086:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "4079:37:1"
														}
													]
												}
											}
										]
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVotingStatus",
									"nameLocation": "3938:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3956:2:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:0:1"
									},
									"scope": 1261,
									"src": "3929:204:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "4167:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 525,
														"name": "_checkVotingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "4177:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "4177:20:1"
											},
											{
												"id": 528,
												"nodeType": "PlaceholderStatement",
												"src": "4207:1:1"
											}
										]
									},
									"id": 530,
									"name": "votingStatusTrue",
									"nameLocation": "4148:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4164:2:1"
									},
									"src": "4139:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "4389:31:1",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "4399:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 538,
														"name": "talax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "4408:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4399:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4399:14:1"
											}
										]
									},
									"functionSelector": "1d77b00b",
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 535,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 534,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 489,
												"src": "4379:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4379:9:1"
										}
									],
									"name": "changeTalaxAddress",
									"nameLocation": "4336:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "talax",
												"nameLocation": "4363:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "4355:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4354:15:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4389:0:1"
									},
									"scope": 1261,
									"src": "4327:93:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4774:1018:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "4898:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4908:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4898:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"nodeType": "IfStatement",
												"src": "4894:78:1",
												"trueBody": {
													"id": 562,
													"nodeType": "Block",
													"src": "4911:61:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 559,
																	"name": "Staking__cannotStakeNothing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "4932:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4932:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 561,
															"nodeType": "RevertStatement",
															"src": "4925:36:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 564,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "5057:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
																	"typeString": "mapping(address => struct Stakable.Stake storage ref)"
																}
															},
															"id": 566,
															"indexExpression": {
																"id": 565,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "5070:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5057:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_storage",
																"typeString": "struct Stakable.Stake storage ref"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "5057:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5057:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "5053:91:1",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "5089:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 570,
																	"name": "Staking__userIsStaker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "5110:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5110:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "5103:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 575,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "5154:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5169:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5154:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5154:16:1"
											},
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 579,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "5180:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																	"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																}
															},
															"id": 581,
															"indexExpression": {
																"id": 580,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "5187:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$354_storage",
																"typeString": "struct Stakable.Voter storage ref"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votingRight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 349,
														"src": "5180:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5207:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5180:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "5180:31:1"
											},
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "5317:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "5309:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5309:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"expression": {
														"id": 588,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "5329:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "5329:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5309:35:1"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 591,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5473:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
																"typeString": "mapping(address => struct Stakable.Stake storage ref)"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "5486:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5473:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$416_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "5513:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 596,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "5533:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 597,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "5556:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 598,
																			"name": "stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 549,
																			"src": "5581:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 599,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "5595:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5581:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5580:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5619:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5634:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5649:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 594,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "5494:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$416_storage_ptr_$",
																"typeString": "type(struct Stakable.Stake storage pointer)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5494:166:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
															"typeString": "struct Stakable.Stake memory"
														}
													},
													"src": "5473:187:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$416_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "5473:187:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 609,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "5734:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "5740:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 611,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "5748:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 612,
																		"name": "stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "5760:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 613,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "5774:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5760:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 615,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5759:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 608,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "5727:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "EmitStatement",
												"src": "5722:63:1"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "4426:200:1",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID"
									},
									"functionSelector": "f93d4f8a",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 554,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 553,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "4764:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4764:9:1"
										}
									],
									"name": "stake",
									"nameLocation": "4640:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4663:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4655:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4685:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4677:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "stakePeriod",
												"nameLocation": "4709:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4701:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4738:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4730:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4645:109:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4774:0:1"
									},
									"scope": 1261,
									"src": "4631:1161:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "5859:245:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 626,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "5947:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3330",
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5956:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "5947:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "5943:81:1",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "5960:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 629,
																	"name": "Staking__penaltyExceed3Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "5981:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5981:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "5974:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 634,
														"name": "stakingPenaltyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "6033:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 635,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "6054:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6033:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "6033:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "6090:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "PenaltyChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "6075:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6075:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "EmitStatement",
												"src": "6070:27:1"
											}
										]
									},
									"functionSelector": "8c63f97f",
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 623,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 489,
												"src": "5849:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5849:9:1"
										}
									],
									"name": "changePenaltyFee",
									"nameLocation": "5807:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5832:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5824:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5823:16:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5859:0:1"
									},
									"scope": 1261,
									"src": "5798:306:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "6220:239:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 652,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "6332:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "6332:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 654,
																			"name": "since",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "6350:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6332:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6331:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653234",
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6359:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"value": "1e24"
															},
															"src": "6331:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "333635",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6381:8:1",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														{
															"hexValue": "4572726f722063616e6e6f74206469766964652074696d657374616d70",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6407:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															},
															"value": "Error cannot divide timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															{
																"typeIdentifier": "t_stringliteral_1ba63f68453a968478e961499d34536225d92ab3a3ce82e5cf26f86ae6edd90d",
																"typeString": "literal_string \"Error cannot divide timestamp\""
															}
														],
														"expression": {
															"id": 650,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "6301:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "6301:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:151:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 662,
												"nodeType": "Return",
												"src": "6282:170:1"
											}
										]
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingDuration",
									"nameLocation": "6119:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "since",
												"nameLocation": "6153:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "6145:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6144:15:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "6207:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6206:9:1"
									},
									"scope": 1261,
									"src": "6110:349:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "6581:321:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 672,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "6595:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6616:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6595:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "6591:61:1",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "6619:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6640:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 671,
															"id": 677,
															"nodeType": "Return",
															"src": "6633:8:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 680,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "6769:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 681,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 403,
																		"src": "6769:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 682,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "6805:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "6805:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6769:56:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 686,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "6870:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "since",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 405,
																			"src": "6870:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 685,
																		"name": "_calculateStakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "6844:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6844:43:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6769:118:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 690,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6768:120:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653236",
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6891:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "1e26"
													},
													"src": "6768:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 671,
												"id": 693,
												"nodeType": "Return",
												"src": "6749:146:1"
											}
										]
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakeReward",
									"nameLocation": "6474:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "user_stake",
												"nameLocation": "6509:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "6496:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
													"typeString": "struct Stakable.Stake"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 416,
														"src": "6496:5:1"
													},
													"referencedDeclaration": 416,
													"src": "6496:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
														"typeString": "struct Stakable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6495:25:1"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "6568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6567:9:1"
									},
									"scope": 1261,
									"src": "6465:437:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7047:382:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 706,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "7061:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7071:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7061:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "7057:55:1",
												"trueBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "7074:38:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7099:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7095:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 705,
															"id": 712,
															"nodeType": "Return",
															"src": "7088:13:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 717,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "7172:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 722,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 697,
																					"src": "7222:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 723,
																					"name": "stakingPenaltyRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 356,
																					"src": "7230:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 720,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "7209:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "7209:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:40:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31303030",
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7251:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"id": 718,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "7196:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "7196:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7196:60:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 715,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "7142:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "7142:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7142:128:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 730,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "7314:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 735,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 699,
																					"src": "7364:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 736,
																					"name": "stakingPenaltyRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 356,
																					"src": "7372:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 733,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "7351:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 205,
																				"src": "7351:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7351:40:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31303030",
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7393:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"id": 731,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "7338:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 220,
																		"src": "7338:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7338:60:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 728,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "7284:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 190,
																"src": "7284:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7284:128:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 741,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7128:294:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 705,
												"id": 742,
												"nodeType": "Return",
												"src": "7121:301:1"
											}
										]
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateStakingWithPenalty",
									"nameLocation": "6917:28:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6954:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6946:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6946:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6970:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "6962:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:32:1"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7025:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7025:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7034:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7034:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:18:1"
									},
									"scope": 1261,
									"src": "6908:521:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "7886:666:1",
										"statements": [
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8010:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "7997:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 757,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 756,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 416,
																"src": "7997:5:1"
															},
															"referencedDeclaration": 416,
															"src": "7997:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"baseExpression": {
														"id": 759,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "8023:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
															"typeString": "mapping(address => struct Stakable.Stake storage ref)"
														}
													},
													"id": 761,
													"indexExpression": {
														"id": 760,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "8036:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8023:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$416_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7997:44:1"
											},
											{
												"expression": {
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8052:25:1",
													"subExpression": {
														"baseExpression": {
															"id": 763,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "8059:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
																"typeString": "mapping(address => struct Stakable.Stake storage ref)"
															}
														},
														"id": 765,
														"indexExpression": {
															"id": 764,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "8072:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8059:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$416_storage",
															"typeString": "struct Stakable.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "8052:25:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 768,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "8092:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "8092:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 770,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8117:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8117:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "8088:314:1",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "8134:268:1",
													"statements": [
														{
															"expression": {
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 773,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "8148:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8163:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8148:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 776,
															"nodeType": "ExpressionStatement",
															"src": "8148:16:1"
														},
														{
															"expression": {
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8178:36:1",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 777,
																				"name": "voters",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "8185:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																					"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																				}
																			},
																			"id": 779,
																			"indexExpression": {
																				"id": 778,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "8192:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8185:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Voter_$354_storage",
																				"typeString": "struct Stakable.Voter storage ref"
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 353,
																		"src": "8185:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 782,
																	"indexExpression": {
																		"id": 781,
																		"name": "_votingId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "8204:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8185:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 784,
															"nodeType": "ExpressionStatement",
															"src": "8178:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 786,
																			"name": "user_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 758,
																			"src": "8301:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																				"typeString": "struct Stakable.Stake memory"
																			}
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 403,
																		"src": "8301:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 789,
																				"name": "user_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 758,
																				"src": "8362:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																					"typeString": "struct Stakable.Stake memory"
																				}
																			],
																			"id": 788,
																			"name": "_calculateStakeReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "8340:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$416_memory_ptr_$returns$_t_uint256_$",
																				"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8340:33:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 785,
																	"name": "_calculateStakingWithPenalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "8251:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8251:140:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 755,
															"id": 792,
															"nodeType": "Return",
															"src": "8228:163:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 795,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "8412:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8427:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8412:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "8412:16:1"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8438:36:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 799,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "8445:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 801,
																"indexExpression": {
																	"id": 800,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8452:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8445:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$354_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "8445:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 804,
														"indexExpression": {
															"id": 803,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8445:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "8438:36:1"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 807,
																"name": "user_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "8492:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																	"typeString": "struct Stakable.Stake memory"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 403,
															"src": "8492:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 810,
																	"name": "user_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "8533:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																		"typeString": "struct Stakable.Stake memory"
																	}
																],
																"id": 809,
																"name": "_calculateStakeReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "8511:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$416_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8511:33:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 812,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8491:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 755,
												"id": 813,
												"nodeType": "Return",
												"src": "8484:61:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7435:335:1",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the account\n Will also _calculateStakeReward and reset timer"
									},
									"functionSelector": "c23a5cea",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 750,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 749,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "7837:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7837:9:1"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "7784:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "7798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7797:14:1"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "7864:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "7873:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7873:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7863:18:1"
									},
									"scope": 1261,
									"src": "7775:777:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "8624:1166:1",
										"statements": [
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "user_stake",
														"nameLocation": "8647:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "8634:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 822,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 821,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 416,
																"src": "8634:5:1"
															},
															"referencedDeclaration": 416,
															"src": "8634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"baseExpression": {
														"id": 824,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "8660:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
															"typeString": "mapping(address => struct Stakable.Stake storage ref)"
														}
													},
													"id": 827,
													"indexExpression": {
														"expression": {
															"id": 825,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8673:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8673:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8660:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$416_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8634:50:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 829,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "8759:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "8759:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8780:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8759:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "8755:85:1",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "8783:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 833,
																	"name": "Staking__noStakingFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "8804:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8804:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 835,
															"nodeType": "RevertStatement",
															"src": "8797:32:1"
														}
													]
												}
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "8871:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "8849:29:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
															"typeString": "struct Stakable.StakingSummary"
														},
														"typeName": {
															"id": 839,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 838,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 424,
																"src": "8849:14:1"
															},
															"referencedDeclaration": 424,
															"src": "8849:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$424_storage_ptr",
																"typeString": "struct Stakable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8896:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8899:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 844,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "8902:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 841,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "8881:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$424_storage_ptr_$",
															"typeString": "type(struct Stakable.StakingSummary storage pointer)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8881:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8849:64:1"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "8932:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "8924:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "8963:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														],
														"id": 849,
														"name": "_calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "8941:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$416_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakable.Stake memory) view returns (uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8941:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8924:50:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 853,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "8989:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "8989:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "releaseTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "8989:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 856,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9017:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9017:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8989:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "8985:316:1",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "9034:267:1",
													"statements": [
														{
															"expression": {
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 859,
																		"name": "summary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "9048:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																			"typeString": "struct Stakable.StakingSummary memory"
																		}
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "penalty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 420,
																	"src": "9048:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 866,
																							"name": "user_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 823,
																							"src": "9129:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																								"typeString": "struct Stakable.Stake memory"
																							}
																						},
																						"id": 867,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 403,
																						"src": "9129:17:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 868,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 356,
																						"src": "9148:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 864,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 311,
																						"src": "9116:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 205,
																					"src": "9116:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9116:51:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "31303030",
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9189:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"id": 862,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "9082:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "9082:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9082:129:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 876,
																						"name": "reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 848,
																						"src": "9256:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 877,
																						"name": "stakingPenaltyRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 356,
																						"src": "9264:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 874,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 311,
																						"src": "9243:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 205,
																					"src": "9243:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9243:40:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "31303030",
																				"id": 879,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9285:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"id": 872,
																				"name": "SafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "9230:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																					"typeString": "type(library SafeMath)"
																				}
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 220,
																			"src": "9230:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9230:60:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9082:208:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9048:242:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "9048:242:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 886,
															"name": "airdropWeek",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "9315:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9315:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9332:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9315:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "9607:59:1",
													"statements": [
														{
															"expression": {
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 921,
																			"name": "summary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "9621:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																				"typeString": "struct Stakable.StakingSummary memory"
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stake",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "9621:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																			"typeString": "struct Stakable.Stake memory"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimableAirdrop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "9621:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9654:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9621:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "9621:34:1"
														}
													]
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "9311:355:1",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "9335:266:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 890,
																		"name": "airdropWeek",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "9353:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9353:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3532",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9369:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_52_by_1",
																		"typeString": "int_const 52"
																	},
																	"value": "52"
																},
																"src": "9353:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 918,
																"nodeType": "Block",
																"src": "9524:67:1",
																"statements": [
																	{
																		"expression": {
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"expression": {
																						"id": 910,
																						"name": "summary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 840,
																						"src": "9542:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																							"typeString": "struct Stakable.StakingSummary memory"
																						}
																					},
																					"id": 913,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stake",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 423,
																					"src": "9542:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																						"typeString": "struct Stakable.Stake memory"
																					}
																				},
																				"id": 914,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimableAirdrop",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "9542:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9575:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9542:34:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 917,
																		"nodeType": "ExpressionStatement",
																		"src": "9542:34:1"
																	}
																]
															},
															"id": 919,
															"nodeType": "IfStatement",
															"src": "9349:242:1",
															"trueBody": {
																"id": 909,
																"nodeType": "Block",
																"src": "9373:145:1",
																"statements": [
																	{
																		"assignments": [
																			895
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 895,
																				"mutability": "mutable",
																				"name": "airdrop",
																				"nameLocation": "9399:7:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 909,
																				"src": "9391:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 894,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9391:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 900,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 897,
																						"name": "user_stake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 823,
																						"src": "9427:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																							"typeString": "struct Stakable.Stake memory"
																						}
																					},
																					"id": 898,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 403,
																					"src": "9427:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 896,
																				"name": "_calculateAirdrop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "9409:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) view returns (uint256)"
																				}
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9409:36:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9391:54:1"
																	},
																	{
																		"expression": {
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"expression": {
																						"id": 901,
																						"name": "summary",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 840,
																						"src": "9463:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																							"typeString": "struct Stakable.StakingSummary memory"
																						}
																					},
																					"id": 904,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stake",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 423,
																					"src": "9463:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																						"typeString": "struct Stakable.Stake memory"
																					}
																				},
																				"id": 905,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimableAirdrop",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "9463:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 906,
																				"name": "airdrop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 895,
																				"src": "9496:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9463:40:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 908,
																		"nodeType": "ExpressionStatement",
																		"src": "9463:40:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 931,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "9676:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																	"typeString": "struct Stakable.StakingSummary memory"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "9676:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 411,
														"src": "9676:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 936,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "9702:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9676:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "9676:32:1"
											},
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 939,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
																"typeString": "struct Stakable.StakingSummary memory"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 418,
														"src": "9718:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 942,
															"name": "user_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "9741:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "9741:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9718:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9718:40:1"
											},
											{
												"expression": {
													"id": 946,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "9776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
														"typeString": "struct Stakable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 820,
												"id": 947,
												"nodeType": "Return",
												"src": "9769:14:1"
											}
										]
									},
									"functionSelector": "10486b6a",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "8567:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8575:2:1"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "8601:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$424_memory_ptr",
													"typeString": "struct Stakable.StakingSummary"
												},
												"typeName": {
													"id": 818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 817,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 424,
														"src": "8601:14:1"
													},
													"referencedDeclaration": 424,
													"src": "8601:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$424_storage_ptr",
														"typeString": "struct Stakable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:23:1"
									},
									"scope": 1261,
									"src": "8558:1232:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "9950:47:1",
										"statements": [
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 954,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "9960:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 955,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9975:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9975:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9960:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "9960:30:1"
											}
										]
									},
									"functionSelector": "71e3db87",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 952,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 951,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "9940:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "9940:9:1"
										}
									],
									"name": "startAirdropSince",
									"nameLocation": "9911:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9928:2:1"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9950:0:1"
									},
									"scope": 1261,
									"src": "9902:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "10071:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 967,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "10085:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323030",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10094:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "10085:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 974,
												"nodeType": "IfStatement",
												"src": "10081:83:1",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "10099:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 970,
																	"name": "Staking__airdropExceed20Percent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "10120:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10120:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 972,
															"nodeType": "RevertStatement",
															"src": "10113:40:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "airdropRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "10173:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 976,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "10187:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10173:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "10173:20:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 980,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10223:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "AirdropChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "10208:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10208:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "EmitStatement",
												"src": "10203:27:1"
											}
										]
									},
									"functionSelector": "d5dbdf1b",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 964,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 489,
												"src": "10061:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10061:9:1"
										}
									],
									"name": "changeAirdropPercentage",
									"nameLocation": "10012:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10044:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "10036:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10035:16:1"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10071:0:1"
									},
									"scope": 1261,
									"src": "10003:234:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "10351:71:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 991,
																				"name": "stakeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10370:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 992,
																				"name": "airdropRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 358,
																				"src": "10384:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10370:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 994,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10369:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10399:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "10369:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 997,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10368:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3532",
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10407:8:1",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31449600_by_1",
															"typeString": "int_const 31449600"
														},
														"value": "52"
													},
													"src": "10368:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 990,
												"id": 1000,
												"nodeType": "Return",
												"src": "10361:54:1"
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAirdrop",
									"nameLocation": "10252:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "stakeAmount",
												"nameLocation": "10278:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "10270:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10270:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10269:21:1"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "10338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10337:9:1"
									},
									"scope": 1261,
									"src": "10243:179:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "10542:564:1",
										"statements": [
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "10610:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "10597:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
															"typeString": "struct Stakable.Stake"
														},
														"typeName": {
															"id": 1012,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1011,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 416,
																"src": "10597:5:1"
															},
															"referencedDeclaration": 416,
															"src": "10597:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_storage_ptr",
																"typeString": "struct Stakable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"baseExpression": {
														"id": 1014,
														"name": "stakeholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "10619:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$416_storage_$",
															"typeString": "mapping(address => struct Stakable.Stake storage ref)"
														}
													},
													"id": 1016,
													"indexExpression": {
														"id": 1015,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "10632:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10619:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$416_storage",
														"typeString": "struct Stakable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:40:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1018,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "10652:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																"typeString": "struct Stakable.Stake memory"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "10652:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10668:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10652:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "11067:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11088:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1010,
															"id": 1060,
															"nodeType": "Return",
															"src": "11081:8:1"
														}
													]
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "10648:452:1",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "10671:390:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1022,
																		"name": "airdropWeek",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "10689:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10689:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3532",
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10705:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_52_by_1",
																		"typeString": "int_const 52"
																	},
																	"value": "52"
																},
																"src": "10689:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1056,
																"nodeType": "Block",
																"src": "11010:41:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "30",
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11035:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 1010,
																		"id": 1055,
																		"nodeType": "Return",
																		"src": "11028:8:1"
																	}
																]
															},
															"id": 1057,
															"nodeType": "IfStatement",
															"src": "10685:366:1",
															"trueBody": {
																"id": 1053,
																"nodeType": "Block",
																"src": "10709:295:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1026,
																					"name": "airdropWeek",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1086,
																					"src": "10731:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 1027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10731:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10748:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10731:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1034,
																		"nodeType": "IfStatement",
																		"src": "10727:101:1",
																		"trueBody": {
																			"id": 1033,
																			"nodeType": "Block",
																			"src": "10751:77:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1030,
																							"name": "Airdrop__claimableOnceAWeek",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 335,
																							"src": "10780:27:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10780:29:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1032,
																					"nodeType": "RevertStatement",
																					"src": "10773:36:1"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1035,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1013,
																					"src": "10846:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																						"typeString": "struct Stakable.Stake memory"
																					}
																				},
																				"id": 1037,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "claimableAirdrop",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "10846:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10872:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10846:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1040,
																		"nodeType": "ExpressionStatement",
																		"src": "10846:27:1"
																	},
																	{
																		"expression": {
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1041,
																					"name": "staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1013,
																					"src": "10891:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																						"typeString": "struct Stakable.Stake memory"
																					}
																				},
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "latestClaimDrop",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 415,
																				"src": "10891:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1044,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "10916:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "10916:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10891:40:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1047,
																		"nodeType": "ExpressionStatement",
																		"src": "10891:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1049,
																						"name": "staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1013,
																						"src": "10975:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Stake_$416_memory_ptr",
																							"typeString": "struct Stakable.Stake memory"
																						}
																					},
																					"id": 1050,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 403,
																					"src": "10975:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1048,
																				"name": "_calculateAirdrop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "10957:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) view returns (uint256)"
																				}
																			},
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10957:32:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1010,
																		"id": 1052,
																		"nodeType": "Return",
																		"src": "10950:39:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "65f8c6c5",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "10502:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "10502:9:1"
										}
									],
									"name": "claimAirdrop",
									"nameLocation": "10437:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10458:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10450:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10449:14:1"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "10529:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:9:1"
									},
									"scope": 1261,
									"src": "10428:678:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "11165:151:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "airdropSince",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "11179:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11195:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11179:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1083,
													"nodeType": "Block",
													"src": "11277:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11298:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1068,
															"id": 1082,
															"nodeType": "Return",
															"src": "11291:8:1"
														}
													]
												},
												"id": 1084,
												"nodeType": "IfStatement",
												"src": "11175:135:1",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "11198:73:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1072,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11220:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11220:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1074,
																				"name": "airdropSince",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "11238:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11220:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1076,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11219:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11254:6:1",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "7"
																},
																"src": "11219:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1068,
															"id": 1079,
															"nodeType": "Return",
															"src": "11212:48:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cbb3e152",
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "airdropWeek",
									"nameLocation": "11121:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11132:2:1"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "11156:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11155:9:1"
									},
									"scope": 1261,
									"src": "11112:204:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "11496:81:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1095,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "11514:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1097,
																"indexExpression": {
																	"id": 1096,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "11521:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11514:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$354_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "votingRight",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 349,
															"src": "11514:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1099,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "11540:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																			"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																		}
																	},
																	"id": 1101,
																	"indexExpression": {
																		"id": 1100,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "11547:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11540:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$354_storage",
																		"typeString": "struct Stakable.Voter storage ref"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 353,
																"src": "11540:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 1104,
															"indexExpression": {
																"id": 1103,
																"name": "_votingId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "11559:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11540:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1105,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11513:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool)"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1106,
												"nodeType": "Return",
												"src": "11506:64:1"
											}
										]
									},
									"functionSelector": "2d15cc04",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoters",
									"nameLocation": "11437:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11455:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11447:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11446:14:1"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11484:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11484:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "11490:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11490:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:12:1"
									},
									"scope": 1261,
									"src": "11428:149:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "11678:228:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11765:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11782:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11765:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "11761:84:1",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "11788:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1116,
																	"name": "Voting__votingIsRunning",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "11809:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11809:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "11802:32:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1121,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11855:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11871:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11855:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "11855:20:1"
											},
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1125,
														"name": "_votingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "11885:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11885:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "11885:14:1"
											}
										]
									},
									"functionSelector": "1ec6b60a",
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1110,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "11668:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "11668:9:1"
										}
									],
									"name": "startVoting",
									"nameLocation": "11645:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11656:2:1"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11678:0:1"
									},
									"scope": 1261,
									"src": "11636:270:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "11960:342:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1137,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12108:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1140,
																"indexExpression": {
																	"expression": {
																		"id": 1138,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12115:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12115:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12108:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$354_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "12108:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1143,
														"indexExpression": {
															"id": 1142,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12133:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12108:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12147:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12108:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "12104:103:1",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "12153:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1146,
																	"name": "Voting__alreadyVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "12174:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12174:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1148,
															"nodeType": "RevertStatement",
															"src": "12167:29:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1151,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12217:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1154,
																"indexExpression": {
																	"expression": {
																		"id": 1152,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12224:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12224:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12217:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$354_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "12217:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12242:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12217:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12217:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "12217:42:1"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1161,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12269:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"id": 1162,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12280:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12269:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12294:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12269:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "12269:26:1"
											}
										]
									},
									"functionSelector": "632a9a52",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1133,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1132,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 530,
												"src": "11935:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "11935:16:1"
										},
										{
											"id": 1135,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1134,
												"name": "isVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "11952:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "11952:7:1"
										}
									],
									"name": "vote",
									"nameLocation": "11921:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11925:2:1"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11960:0:1"
									},
									"scope": 1261,
									"src": "11912:390:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "12363:344:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1175,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12511:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1178,
																"indexExpression": {
																	"expression": {
																		"id": 1176,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12518:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12518:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12511:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$354_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "12511:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1181,
														"indexExpression": {
															"id": 1180,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12536:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12511:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12550:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12511:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "12507:103:1",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "12557:53:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1184,
																	"name": "Voting__notYetVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "12578:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12578:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1186,
															"nodeType": "RevertStatement",
															"src": "12571:28:1"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1189,
																	"name": "voters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12620:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$354_storage_$",
																		"typeString": "mapping(address => struct Stakable.Voter storage ref)"
																	}
																},
																"id": 1192,
																"indexExpression": {
																	"expression": {
																		"id": 1190,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12627:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12627:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12620:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Voter_$354_storage",
																	"typeString": "struct Stakable.Voter storage ref"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "12620:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1195,
														"indexExpression": {
															"id": 1194,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12645:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12620:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12659:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12620:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "12620:44:1"
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1199,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12674:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1200,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "12685:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12674:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12699:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12674:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "12674:26:1"
											}
										]
									},
									"functionSelector": "070c8b74",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1170,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 530,
												"src": "12338:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "12338:16:1"
										},
										{
											"id": 1173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1172,
												"name": "isVoter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "12355:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "12355:7:1"
										}
									],
									"name": "retractVote",
									"nameLocation": "12317:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12328:2:1"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12363:0:1"
									},
									"scope": 1261,
									"src": "12308:399:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "12840:361:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "totalVoters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "12912:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12912:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1222,
												"nodeType": "IfStatement",
												"src": "12908:79:1",
												"trueBody": {
													"id": 1221,
													"nodeType": "Block",
													"src": "12930:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1218,
																	"name": "Voting__notEnoughVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "12951:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12951:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1220,
															"nodeType": "RevertStatement",
															"src": "12944:32:1"
														}
													]
												}
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "half_voters",
														"nameLocation": "13004:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "12996:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12996:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1229,
																	"name": "totalVoters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "13044:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "35",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13057:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	}
																],
																"expression": {
																	"id": 1227,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "13031:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 205,
																"src": "13031:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13031:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3130",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13061:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 1225,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "13018:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "13018:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13018:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12996:68:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1235,
															"name": "votedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "13079:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1237,
														"indexExpression": {
															"id": 1236,
															"name": "_votingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "13090:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13079:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1238,
														"name": "half_voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "13103:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13079:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13158:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13179:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1214,
															"id": 1244,
															"nodeType": "Return",
															"src": "13172:12:1"
														}
													]
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13075:120:1",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "13116:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13137:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1214,
															"id": 1241,
															"nodeType": "Return",
															"src": "13130:11:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "671d2b75",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1208,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "12778:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "12778:9:1"
										},
										{
											"id": 1211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1210,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 530,
												"src": "12796:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "12796:16:1"
										}
									],
									"name": "getVotingResult",
									"nameLocation": "12722:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12737:2:1"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "12830:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12830:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12829:6:1"
									},
									"scope": 1261,
									"src": "12713:488:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "13265:38:1",
										"statements": [
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1255,
														"name": "_votingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "13275:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13291:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13275:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "13275:21:1"
											}
										]
									},
									"functionSelector": "fab2f86b",
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1250,
												"name": "onlyTalax",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 469,
												"src": "13238:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "13238:9:1"
										},
										{
											"id": 1253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1252,
												"name": "votingStatusTrue",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 530,
												"src": "13248:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "13248:16:1"
										}
									],
									"name": "stopVoting",
									"nameLocation": "13216:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13226:2:1"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13265:0:1"
									},
									"scope": 1261,
									"src": "13207:96:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1262,
							"src": "817:12488:1",
							"usedErrors": [
								317,
								319,
								321,
								324,
								326,
								328,
								330,
								332,
								335,
								338,
								340,
								342,
								344
							]
						}
					],
					"src": "39:13267:1"
				},
				"id": 1
			}
		}
	}
}